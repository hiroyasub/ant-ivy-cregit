begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|latest
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|LatestRevisionStrategyTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testComparator
parameter_list|()
block|{
name|String
index|[]
name|revs
init|=
operator|new
name|String
index|[]
block|{
literal|"0.2a"
block|,
literal|"0.2_b"
block|,
literal|"0.2rc1"
block|,
literal|"0.2-final"
block|,
literal|"1.0-dev1"
block|,
literal|"1.0-dev2"
block|,
literal|"1.0-alpha1"
block|,
literal|"1.0-alpha2"
block|,
literal|"1.0-beta1"
block|,
literal|"1.0-beta2"
block|,
literal|"1.0-gamma"
block|,
literal|"1.0-rc1"
block|,
literal|"1.0-rc2"
block|,
literal|"1.0"
block|,
literal|"1.0.1"
block|,
literal|"2.0"
block|}
decl_stmt|;
name|List
name|shuffled
init|=
operator|new
name|ArrayList
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|revs
argument_list|)
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|shuffle
argument_list|(
name|shuffled
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|shuffled
argument_list|,
operator|new
name|LatestRevisionStrategy
argument_list|()
operator|.
name|COMPARATOR
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|revs
argument_list|)
argument_list|,
name|shuffled
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSpecialMeaningComparator
parameter_list|()
block|{
name|String
index|[]
name|revs
init|=
operator|new
name|String
index|[]
block|{
literal|"0.1"
block|,
literal|"0.2-pre"
block|,
literal|"0.2-dev"
block|,
literal|"0.2-rc1"
block|,
literal|"0.2-final"
block|,
literal|"0.2-QA"
block|,
literal|"1.0-dev1"
block|,                  }
decl_stmt|;
name|List
name|shuffled
init|=
operator|new
name|ArrayList
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|revs
argument_list|)
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|shuffle
argument_list|(
name|shuffled
argument_list|)
expr_stmt|;
name|LatestRevisionStrategy
name|latestRevisionStrategy
init|=
operator|new
name|LatestRevisionStrategy
argument_list|()
decl_stmt|;
name|LatestRevisionStrategy
operator|.
name|SpecialMeaning
name|specialMeaning
init|=
operator|new
name|LatestRevisionStrategy
operator|.
name|SpecialMeaning
argument_list|()
decl_stmt|;
name|specialMeaning
operator|.
name|setName
argument_list|(
literal|"pre"
argument_list|)
expr_stmt|;
name|specialMeaning
operator|.
name|setValue
argument_list|(
operator|new
name|Integer
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|latestRevisionStrategy
operator|.
name|addConfiguredSpecialMeaning
argument_list|(
name|specialMeaning
argument_list|)
expr_stmt|;
name|specialMeaning
operator|=
operator|new
name|LatestRevisionStrategy
operator|.
name|SpecialMeaning
argument_list|()
expr_stmt|;
name|specialMeaning
operator|.
name|setName
argument_list|(
literal|"QA"
argument_list|)
expr_stmt|;
name|specialMeaning
operator|.
name|setValue
argument_list|(
operator|new
name|Integer
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|latestRevisionStrategy
operator|.
name|addConfiguredSpecialMeaning
argument_list|(
name|specialMeaning
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|shuffled
argument_list|,
name|latestRevisionStrategy
operator|.
name|COMPARATOR
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|revs
argument_list|)
argument_list|,
name|shuffled
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

