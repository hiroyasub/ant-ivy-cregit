begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the licence found in LICENCE.TXT in the root directory of the project.  * Copyright Jayasoft 2005 - All rights reserved  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|DefaultModuleDescriptor
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|Ivy
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|Resource
import|;
end_import

begin_class
specifier|public
class|class
name|ModuleDescriptorParserRegistryTest
extends|extends
name|TestCase
block|{
specifier|public
specifier|static
class|class
name|MyParser
extends|extends
name|AbstractModuleDescriptorParser
block|{
specifier|public
name|ModuleDescriptor
name|parseDescriptor
parameter_list|(
name|Ivy
name|ivy
parameter_list|,
name|URL
name|descriptorURL
parameter_list|,
name|Resource
name|res
parameter_list|,
name|boolean
name|validate
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|DefaultModuleDescriptor
operator|.
name|newDefaultInstance
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"test"
argument_list|,
literal|"parser"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|toIvyFile
parameter_list|(
name|URL
name|srcURL
parameter_list|,
name|Resource
name|res
parameter_list|,
name|File
name|destFile
parameter_list|,
name|ModuleDescriptor
name|md
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
block|}
specifier|public
name|boolean
name|accept
parameter_list|(
name|Resource
name|res
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
specifier|public
name|void
name|testTypeDef
parameter_list|()
throws|throws
name|Exception
block|{
name|Ivy
name|ivy
init|=
operator|new
name|Ivy
argument_list|()
decl_stmt|;
name|ivy
operator|.
name|typeDef
argument_list|(
literal|"myparser"
argument_list|,
name|MyParser
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// should register an instance of the parser in the ModuleDescriptorParserRegistry
name|ModuleDescriptor
name|md
init|=
name|ModuleDescriptorParserRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|ivy
argument_list|,
name|ModuleDescriptorParserRegistryTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"nores"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"test"
argument_list|,
literal|"parser"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

