begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|Delete
import|;
end_import

begin_class
specifier|public
class|class
name|IvyReportTest
extends|extends
name|TestCase
block|{
specifier|private
name|File
name|_cache
decl_stmt|;
specifier|private
name|IvyReport
name|_report
decl_stmt|;
specifier|private
name|Project
name|_project
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|createCache
argument_list|()
expr_stmt|;
name|_project
operator|=
operator|new
name|Project
argument_list|()
expr_stmt|;
name|_project
operator|.
name|setProperty
argument_list|(
literal|"ivy.conf.file"
argument_list|,
literal|"test/repositories/ivyconf.xml"
argument_list|)
expr_stmt|;
name|_report
operator|=
operator|new
name|IvyReport
argument_list|()
expr_stmt|;
name|_report
operator|.
name|setTaskName
argument_list|(
literal|"report"
argument_list|)
expr_stmt|;
name|_report
operator|.
name|setProject
argument_list|(
name|_project
argument_list|)
expr_stmt|;
name|_report
operator|.
name|setCache
argument_list|(
name|_cache
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createCache
parameter_list|()
block|{
name|_cache
operator|=
operator|new
name|File
argument_list|(
literal|"build/cache"
argument_list|)
expr_stmt|;
name|_cache
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|cleanCache
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|cleanCache
parameter_list|()
block|{
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|()
decl_stmt|;
name|del
operator|.
name|setProject
argument_list|(
operator|new
name|Project
argument_list|()
argument_list|)
expr_stmt|;
name|del
operator|.
name|setDir
argument_list|(
name|_cache
argument_list|)
expr_stmt|;
name|del
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testRegularCircular
parameter_list|()
throws|throws
name|Exception
block|{
name|_project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/repositories/2/mod11.1/ivy-1.0.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|_project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|_report
operator|.
name|setTodir
argument_list|(
operator|new
name|File
argument_list|(
name|_cache
argument_list|,
literal|"report"
argument_list|)
argument_list|)
expr_stmt|;
name|_report
operator|.
name|setXml
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// do not test any xsl transformation here, because of problems of build in our continuous integration server
name|_report
operator|.
name|setXsl
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|_report
operator|.
name|setGraph
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|_report
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|_cache
argument_list|,
literal|"report/org11-mod11.1-compile.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

