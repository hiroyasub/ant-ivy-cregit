begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the licence found in LICENCE.TXT in the root directory of the project.  * Copyright Jayasoft 2005 - All rights reserved  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|IvyPatternHelperTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testSubstitute
parameter_list|()
block|{
name|String
name|pattern
init|=
literal|"[organisation]/[module]/build/archives/[type]s/[artifact]-[revision].[ext]"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"jayasoft/Test/build/archives/jars/test-1.0.jar"
argument_list|,
name|IvyPatternHelper
operator|.
name|substitute
argument_list|(
name|pattern
argument_list|,
literal|"jayasoft"
argument_list|,
literal|"Test"
argument_list|,
literal|"1.0"
argument_list|,
literal|"test"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCyclicSubstitute
parameter_list|()
block|{
name|String
name|pattern
init|=
literal|"${var}"
decl_stmt|;
name|Map
name|variables
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|variables
operator|.
name|put
argument_list|(
literal|"var"
argument_list|,
literal|"${othervar}"
argument_list|)
expr_stmt|;
name|variables
operator|.
name|put
argument_list|(
literal|"othervar"
argument_list|,
literal|"${var}"
argument_list|)
expr_stmt|;
try|try
block|{
name|IvyPatternHelper
operator|.
name|substituteVariables
argument_list|(
name|pattern
argument_list|,
name|variables
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"cyclic var should raise an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// ok
block|}
catch|catch
parameter_list|(
name|Error
name|er
parameter_list|)
block|{
name|fail
argument_list|(
literal|"cyclic var shouldn't raise an error: "
operator|+
name|er
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testOrganization
parameter_list|()
block|{
name|String
name|pattern
init|=
literal|"[organization]/[module]/build/archives/[type]s/[artifact]-[revision].[ext]"
decl_stmt|;
name|assertEquals
argument_list|(
literal|"jayasoft/Test/build/archives/jars/test-1.0.jar"
argument_list|,
name|IvyPatternHelper
operator|.
name|substitute
argument_list|(
name|pattern
argument_list|,
literal|"jayasoft"
argument_list|,
literal|"Test"
argument_list|,
literal|"1.0"
argument_list|,
literal|"test"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

