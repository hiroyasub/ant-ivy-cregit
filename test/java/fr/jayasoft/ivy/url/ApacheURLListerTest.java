begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|url
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Tests {@link ApacheURLLister}.  *  * @author Xavier Hanin  * @author<a href="johnmshields@yahoo.com">John M. Shields</a>  */
end_comment

begin_class
specifier|public
class|class
name|ApacheURLListerTest
extends|extends
name|TestCase
block|{
comment|// remote.test
comment|//~ Methods ----------------------------------------------------------------
comment|/**      * Tests {@link ApacheURLLister#retrieveListing(URL, boolean, boolean)}.      *      * @throws Exception      */
specifier|public
name|void
name|testRetrieveListing
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
literal|"http://www.ibiblio.org/maven/ant/jars/"
argument_list|)
decl_stmt|;
name|ApacheURLLister
name|lister
init|=
operator|new
name|ApacheURLLister
argument_list|()
decl_stmt|;
name|List
name|files
init|=
name|lister
operator|.
name|retrieveListing
argument_list|(
name|url
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|files
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|Iterator
name|iter
init|=
name|files
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|URL
name|file
init|=
operator|(
name|URL
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"found non matching file: "
operator|+
name|file
operator|.
name|getPath
argument_list|()
argument_list|,
name|file
operator|.
name|getPath
argument_list|()
operator|.
name|matches
argument_list|(
literal|".*/ant/jars/[^/]*$"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// try a directory listing
name|url
operator|=
operator|new
name|URL
argument_list|(
literal|"http://www.ibiblio.org/maven/ant/"
argument_list|)
expr_stmt|;
name|List
name|dirs
init|=
name|lister
operator|.
name|retrieveListing
argument_list|(
name|url
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|dirs
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|dirs
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|iter
operator|=
name|dirs
operator|.
name|iterator
argument_list|()
expr_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|URL
name|dir
init|=
operator|(
name|URL
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dir
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"found non matching dir: "
operator|+
name|dir
operator|.
name|getPath
argument_list|()
argument_list|,
name|dir
operator|.
name|getPath
argument_list|()
operator|.
name|matches
argument_list|(
literal|".*/$"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
name|empty
init|=
name|lister
operator|.
name|retrieveListing
argument_list|(
name|url
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|empty
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|//    public void testRetrieveTomcatListing() throws Exception {
comment|//        URL url = new URL("http://localhost:8080/ivyrep/apache/commons-collections/");
comment|//
comment|//        ApacheURLLister lister = new ApacheURLLister();
comment|//
comment|//        List files = lister.retrieveListing(url, true, false);
comment|//        assertNotNull(files);
comment|//        assertTrue(files.size()> 0);
comment|//    }
block|}
end_class

end_unit

