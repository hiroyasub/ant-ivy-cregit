begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|version
package|;
end_package

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|latest
operator|.
name|LatestRevisionStrategy
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|VersionRangeMatcherTest
extends|extends
name|TestCase
block|{
name|VersionMatcher
name|_vm
init|=
operator|new
name|VersionRangeMatcher
argument_list|(
literal|"range"
argument_list|,
operator|new
name|LatestRevisionStrategy
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|VersionRangeMatcherTest
parameter_list|()
block|{
block|}
specifier|public
name|void
name|testDynamic
parameter_list|()
block|{
name|assertDynamic
argument_list|(
literal|"lastest.integration"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"[1.0]"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"(1.0)"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"(1.0,2.0)"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"[1.0;2.0]"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"[1.0,2.0]"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"[1.0,2.0["
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"]1.0,2.0["
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"]1.0,2.0]"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"[1.0,)"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertDynamic
argument_list|(
literal|"(,1.0]"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testIncludingFinite
parameter_list|()
block|{
name|assertAccept
argument_list|(
literal|"[1.0,2.0]"
argument_list|,
literal|"1.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,2.0]"
argument_list|,
literal|"0.9"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,2.0]"
argument_list|,
literal|"2.1"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,2.0]"
argument_list|,
literal|"1.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,2.0]"
argument_list|,
literal|"2.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testExcludingFinite
parameter_list|()
block|{
name|assertAccept
argument_list|(
literal|"]1.0,2.0["
argument_list|,
literal|"1.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,2.0["
argument_list|,
literal|"0.9"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,2.0["
argument_list|,
literal|"2.1"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,2.0]"
argument_list|,
literal|"1.0"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,2.0["
argument_list|,
literal|"1.0"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,2.0["
argument_list|,
literal|"1.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,2.0["
argument_list|,
literal|"2.0"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,2.0["
argument_list|,
literal|"2.0"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,2.0]"
argument_list|,
literal|"2.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testIncludingInfinite
parameter_list|()
block|{
name|assertAccept
argument_list|(
literal|"[1.0,)"
argument_list|,
literal|"1.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,)"
argument_list|,
literal|"2.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,)"
argument_list|,
literal|"3.5.6"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,)"
argument_list|,
literal|"1.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"[1.0,)"
argument_list|,
literal|"0.9"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0]"
argument_list|,
literal|"1.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0]"
argument_list|,
literal|"0.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0]"
argument_list|,
literal|"0.2.4"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0]"
argument_list|,
literal|"2.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0]"
argument_list|,
literal|"2.3"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testExcludingInfinite
parameter_list|()
block|{
name|assertAccept
argument_list|(
literal|"]1.0,)"
argument_list|,
literal|"1.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,)"
argument_list|,
literal|"2.0"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,)"
argument_list|,
literal|"3.5.6"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,)"
argument_list|,
literal|"1.0"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"]1.0,)"
argument_list|,
literal|"0.9"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0["
argument_list|,
literal|"1.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0["
argument_list|,
literal|"0.1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0["
argument_list|,
literal|"0.2.4"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0["
argument_list|,
literal|"2.0"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertAccept
argument_list|(
literal|"(,2.0["
argument_list|,
literal|"2.3"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|// assertion helper methods
specifier|private
name|void
name|assertDynamic
parameter_list|(
name|String
name|askedVersion
parameter_list|,
name|boolean
name|b
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|b
argument_list|,
name|_vm
operator|.
name|isDynamic
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org"
argument_list|,
literal|"name"
argument_list|,
name|askedVersion
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertAccept
parameter_list|(
name|String
name|askedVersion
parameter_list|,
name|String
name|depVersion
parameter_list|,
name|boolean
name|b
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|b
argument_list|,
name|_vm
operator|.
name|accept
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org"
argument_list|,
literal|"name"
argument_list|,
name|askedVersion
argument_list|)
argument_list|,
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org"
argument_list|,
literal|"name"
argument_list|,
name|depVersion
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

