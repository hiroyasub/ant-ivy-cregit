begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|cache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|event
operator|.
name|EventManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DefaultArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DefaultDependencyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|report
operator|.
name|ArtifactDownloadReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|report
operator|.
name|DownloadReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|report
operator|.
name|DownloadStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|DownloadOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolveData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolveEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolveOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolvedModuleRevision
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|search
operator|.
name|ModuleEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|search
operator|.
name|OrganisationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|search
operator|.
name|RevisionEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|sort
operator|.
name|SortEngine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|latest
operator|.
name|LatestRevisionStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|latest
operator|.
name|LatestTimeStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|CacheCleaner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|Delete
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|FileSystemResolverTest
extends|extends
name|TestCase
block|{
comment|//CheckStyle:MagicNumberCheck OFF
specifier|private
specifier|static
specifier|final
name|String
name|FS
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|IVY_PATTERN
init|=
literal|"test"
operator|+
name|FS
operator|+
literal|"repositories"
operator|+
name|FS
operator|+
literal|"1"
operator|+
name|FS
operator|+
literal|"[organisation]"
operator|+
name|FS
operator|+
literal|"[module]"
operator|+
name|FS
operator|+
literal|"ivys"
operator|+
name|FS
operator|+
literal|"ivy-[revision].xml"
decl_stmt|;
specifier|private
name|IvySettings
name|settings
decl_stmt|;
specifier|private
name|ResolveEngine
name|engine
decl_stmt|;
specifier|private
name|ResolveData
name|data
decl_stmt|;
specifier|private
name|File
name|cache
decl_stmt|;
specifier|private
name|CacheManager
name|cacheManager
decl_stmt|;
specifier|public
name|FileSystemResolverTest
parameter_list|()
block|{
name|setupLastModified
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|settings
operator|=
operator|new
name|IvySettings
argument_list|()
expr_stmt|;
name|engine
operator|=
operator|new
name|ResolveEngine
argument_list|(
name|settings
argument_list|,
operator|new
name|EventManager
argument_list|()
argument_list|,
operator|new
name|SortEngine
argument_list|(
name|settings
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|=
operator|new
name|File
argument_list|(
literal|"build/cache"
argument_list|)
expr_stmt|;
name|data
operator|=
operator|new
name|ResolveData
argument_list|(
name|engine
argument_list|,
operator|new
name|ResolveOptions
argument_list|()
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|settings
argument_list|,
name|cache
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|cache
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|cacheManager
operator|=
operator|new
name|CacheManager
argument_list|(
name|settings
argument_list|,
name|cache
argument_list|)
expr_stmt|;
name|settings
operator|.
name|setDefaultCache
argument_list|(
name|cache
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setupLastModified
parameter_list|()
block|{
comment|// change important last modified dates cause svn doesn't keep them
name|long
name|minute
init|=
literal|60
operator|*
literal|1000
decl_stmt|;
name|long
name|time
init|=
operator|new
name|GregorianCalendar
argument_list|()
operator|.
name|getTimeInMillis
argument_list|()
operator|-
operator|(
literal|4
operator|*
name|minute
operator|)
decl_stmt|;
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/ivys/ivy-1.0.xml"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|time
operator|+=
name|minute
expr_stmt|;
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/ivys/ivy-1.0.1.xml"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|time
operator|+=
name|minute
expr_stmt|;
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/ivys/ivy-1.1.xml"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|time
operator|+=
name|minute
expr_stmt|;
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/ivys/ivy-2.0.xml"
argument_list|)
operator|.
name|setLastModified
argument_list|(
name|time
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|CacheCleaner
operator|.
name|deleteDir
argument_list|(
name|cache
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFixedRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/[organisation]/[module]/[type]s/[artifact]-[revision].[type]"
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// test to ask to download
name|DefaultArtifact
name|artifact
init|=
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
name|pubdate
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|DownloadReport
name|report
init|=
name|resolver
operator|.
name|download
argument_list|(
operator|new
name|Artifact
index|[]
block|{
name|artifact
block|}
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|report
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|report
operator|.
name|getArtifactsReports
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|ArtifactDownloadReport
name|ar
init|=
name|report
operator|.
name|getArtifactReport
argument_list|(
name|artifact
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ar
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
argument_list|,
name|ar
operator|.
name|getArtifact
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DownloadStatus
operator|.
name|SUCCESSFUL
argument_list|,
name|ar
operator|.
name|getDownloadStatus
argument_list|()
argument_list|)
expr_stmt|;
comment|// test to ask to download again, should use cache
name|report
operator|=
name|resolver
operator|.
name|download
argument_list|(
operator|new
name|Artifact
index|[]
block|{
name|artifact
block|}
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|report
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|report
operator|.
name|getArtifactsReports
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|ar
operator|=
name|report
operator|.
name|getArtifactReport
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ar
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
argument_list|,
name|ar
operator|.
name|getArtifact
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DownloadStatus
operator|.
name|NO
argument_list|,
name|ar
operator|.
name|getDownloadStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DownloadOptions
name|getDownloadOptions
parameter_list|(
name|boolean
name|useOrigin
parameter_list|)
block|{
return|return
operator|new
name|DownloadOptions
argument_list|(
name|cacheManager
argument_list|,
literal|null
argument_list|,
name|useOrigin
argument_list|)
return|;
block|}
specifier|public
name|void
name|testMaven2
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setM2compatible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
literal|"test/repositories/m2/"
operator|+
literal|"[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/m2/"
operator|+
literal|"[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|mrid
operator|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache.unknown"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|reportFailure
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testChecksum
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
literal|"test/repositories/checksums/[module]/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/checksums/[module]/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setChecksums
argument_list|(
literal|"sha1, md5"
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"test"
argument_list|,
literal|"allright"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|DownloadReport
name|dr
init|=
name|resolver
operator|.
name|download
argument_list|(
name|rmr
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getAllArtifacts
argument_list|()
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dr
operator|.
name|getArtifactsReports
argument_list|(
name|DownloadStatus
operator|.
name|SUCCESSFUL
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setChecksums
argument_list|(
literal|"md5"
argument_list|)
expr_stmt|;
name|mrid
operator|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"test"
argument_list|,
literal|"badivycs"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setChecksums
argument_list|(
literal|"none"
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|dr
operator|=
name|resolver
operator|.
name|download
argument_list|(
operator|new
name|Artifact
index|[]
block|{
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|,
name|mrid
operator|.
name|getName
argument_list|()
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
block|}
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dr
operator|.
name|getArtifactsReports
argument_list|(
name|DownloadStatus
operator|.
name|SUCCESSFUL
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setChecksums
argument_list|(
literal|"md5"
argument_list|)
expr_stmt|;
name|mrid
operator|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"test"
argument_list|,
literal|"badartcs"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|dr
operator|=
name|resolver
operator|.
name|download
argument_list|(
operator|new
name|Artifact
index|[]
block|{
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|,
name|mrid
operator|.
name|getName
argument_list|()
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
block|}
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dr
operator|.
name|getArtifactsReports
argument_list|(
name|DownloadStatus
operator|.
name|FAILED
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setChecksums
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|dr
operator|=
name|resolver
operator|.
name|download
argument_list|(
operator|new
name|Artifact
index|[]
block|{
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|,
name|mrid
operator|.
name|getName
argument_list|()
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
block|}
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dr
operator|.
name|getArtifactsReports
argument_list|(
name|DownloadStatus
operator|.
name|SUCCESSFUL
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCheckModified
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|settings
operator|.
name|addResolver
argument_list|(
name|resolver
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
literal|"test"
operator|+
name|FS
operator|+
literal|"repositories"
operator|+
name|FS
operator|+
literal|"checkmodified"
operator|+
name|FS
operator|+
literal|"ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|File
name|modify
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/ivy-1.0.xml"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/ivy-1.0-before.xml"
argument_list|)
argument_list|,
name|modify
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|modify
operator|.
name|setLastModified
argument_list|(
name|pubdate
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// updates ivy file in repository
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/ivy-1.0-after.xml"
argument_list|)
argument_list|,
name|modify
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|pubdate
operator|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|modify
operator|.
name|setLastModified
argument_list|(
name|pubdate
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// should not get the new version
name|resolver
operator|.
name|setCheckmodified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|GregorianCalendar
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// should now get the new version
name|resolver
operator|.
name|setCheckmodified
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNoRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|settings
operator|.
name|addResolver
argument_list|(
name|resolver
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
literal|"test"
operator|+
name|FS
operator|+
literal|"repositories"
operator|+
name|FS
operator|+
literal|"norevision"
operator|+
name|FS
operator|+
literal|"ivy-[module].xml"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test"
operator|+
name|FS
operator|+
literal|"repositories"
operator|+
name|FS
operator|+
literal|"norevision"
operator|+
name|FS
operator|+
literal|"[artifact].[ext]"
argument_list|)
expr_stmt|;
name|File
name|modify
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/norevision/ivy-mod1.1.xml"
argument_list|)
decl_stmt|;
name|File
name|artifact
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/norevision/mod1.1.jar"
argument_list|)
decl_stmt|;
comment|// 'publish' 'before' version
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/norevision/ivy-mod1.1-before.xml"
argument_list|)
argument_list|,
name|modify
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/norevision/mod1.1-before.jar"
argument_list|)
argument_list|,
name|artifact
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|modify
operator|.
name|setLastModified
argument_list|(
name|pubdate
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"latest.integration"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifacts
init|=
name|rmr
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getArtifacts
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|File
name|archiveFileInCache
init|=
name|cacheManager
operator|.
name|getArchiveFileInCache
argument_list|(
name|artifacts
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|resolver
operator|.
name|download
argument_list|(
name|artifacts
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|archiveFileInCache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|BufferedReader
name|r
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|archiveFileInCache
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"before"
argument_list|,
name|r
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// updates ivy file and artifact in repository
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/norevision/ivy-mod1.1-after.xml"
argument_list|)
argument_list|,
name|modify
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/norevision/mod1.1-after.jar"
argument_list|)
argument_list|,
name|artifact
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|pubdate
operator|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|modify
operator|.
name|setLastModified
argument_list|(
name|pubdate
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// no need to update new artifact timestamp cause it isn't used
comment|// should get the new version even if checkModified is false, beacause we ask a
comment|// latest.integration
name|resolver
operator|.
name|setCheckmodified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.1"
argument_list|)
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
name|artifacts
operator|=
name|rmr
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getArtifacts
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|archiveFileInCache
operator|=
name|cacheManager
operator|.
name|getArchiveFileInCache
argument_list|(
name|artifacts
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|archiveFileInCache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should download the new artifact
name|artifacts
operator|=
name|rmr
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getArtifacts
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|download
argument_list|(
name|artifacts
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|archiveFileInCache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|archiveFileInCache
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"after"
argument_list|,
name|r
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testChanging
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|settings
operator|.
name|addResolver
argument_list|(
name|resolver
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
literal|"test"
operator|+
name|FS
operator|+
literal|"repositories"
operator|+
name|FS
operator|+
literal|"checkmodified"
operator|+
name|FS
operator|+
literal|"ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test"
operator|+
name|FS
operator|+
literal|"repositories"
operator|+
name|FS
operator|+
literal|"checkmodified"
operator|+
name|FS
operator|+
literal|"[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|File
name|modify
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/ivy-1.0.xml"
argument_list|)
decl_stmt|;
name|File
name|artifact
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/mod1.1-1.0.jar"
argument_list|)
decl_stmt|;
comment|// 'publish' 'before' version
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/ivy-1.0-before.xml"
argument_list|)
argument_list|,
name|modify
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/mod1.1-1.0-before.jar"
argument_list|)
argument_list|,
name|artifact
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|modify
operator|.
name|setLastModified
argument_list|(
name|pubdate
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifacts
init|=
name|rmr
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getArtifacts
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|resolver
operator|.
name|download
argument_list|(
name|artifacts
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|archiveFileInCache
init|=
name|cacheManager
operator|.
name|getArchiveFileInCache
argument_list|(
name|artifacts
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|archiveFileInCache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|BufferedReader
name|r
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|archiveFileInCache
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"before"
argument_list|,
name|r
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// updates ivy file and artifact in repository
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/ivy-1.0-after.xml"
argument_list|)
argument_list|,
name|modify
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/checkmodified/mod1.1-1.0-after.jar"
argument_list|)
argument_list|,
name|artifact
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|pubdate
operator|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|4
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
expr_stmt|;
name|modify
operator|.
name|setLastModified
argument_list|(
name|pubdate
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// no need to update new artifact timestamp cause it isn't used
comment|// should not get the new version: checkmodified is false and edpendency is not told to be a
comment|// changing one
name|resolver
operator|.
name|setCheckmodified
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|GregorianCalendar
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|archiveFileInCache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|archiveFileInCache
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"before"
argument_list|,
name|r
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// should now get the new version cause we say it's a changing one
name|rmr
operator|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|archiveFileInCache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|artifacts
operator|=
name|rmr
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getArtifacts
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|download
argument_list|(
name|artifacts
argument_list|,
name|getDownloadOptions
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|archiveFileInCache
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|archiveFileInCache
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"after"
argument_list|,
name|r
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testLatestTime
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[type]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setLatestStrategy
argument_list|(
operator|new
name|LatestTimeStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"2.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"latest.integration"
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|15
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLatestRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[type]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setLatestStrategy
argument_list|(
operator|new
name|LatestRevisionStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"2.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"latest.integration"
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|15
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRelativePath
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
operator|new
name|File
argument_list|(
literal|"src/java"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"/../../"
operator|+
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"src/../test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[type]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setLatestStrategy
argument_list|(
operator|new
name|LatestRevisionStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"2.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"latest.integration"
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|1
argument_list|,
literal|15
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFormattedLatestTime
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[type]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setLatestStrategy
argument_list|(
operator|new
name|LatestTimeStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.1"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1+"
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFormattedLatestRevision
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[type]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setLatestStrategy
argument_list|(
operator|new
name|LatestRevisionStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.1"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1+"
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2005
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPublish
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
literal|"test"
operator|+
name|FS
operator|+
literal|"repositories"
operator|+
name|FS
operator|+
literal|"1"
operator|+
name|FS
operator|+
literal|"[organisation]"
operator|+
name|FS
operator|+
literal|"[module]"
operator|+
name|FS
operator|+
literal|"[revision]"
operator|+
name|FS
operator|+
literal|"[artifact].[ext]"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"myorg"
argument_list|,
literal|"mymodule"
argument_list|,
literal|"myrevision"
argument_list|)
decl_stmt|;
name|Artifact
name|ivyArtifact
init|=
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|,
literal|"ivy"
argument_list|,
literal|"ivy"
argument_list|,
literal|"xml"
argument_list|)
decl_stmt|;
name|Artifact
name|artifact
init|=
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|,
literal|"myartifact"
argument_list|,
literal|"mytype"
argument_list|,
literal|"myext"
argument_list|)
decl_stmt|;
name|File
name|src
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/ivysettings.xml"
argument_list|)
decl_stmt|;
name|resolver
operator|.
name|publish
argument_list|(
name|ivyArtifact
argument_list|,
name|src
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|publish
argument_list|(
name|artifact
argument_list|,
name|src
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/myorg/mymodule/myrevision/ivy.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/myorg/mymodule/mytypes/myartifact-myrevision.myext"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|()
decl_stmt|;
name|del
operator|.
name|setProject
argument_list|(
operator|new
name|Project
argument_list|()
argument_list|)
expr_stmt|;
name|del
operator|.
name|setDir
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/myorg"
argument_list|)
argument_list|)
expr_stmt|;
name|del
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testListing
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|OrganisationEntry
index|[]
name|orgs
init|=
name|resolver
operator|.
name|listOrganisations
argument_list|()
decl_stmt|;
name|ResolverTestHelper
operator|.
name|assertOrganisationEntries
argument_list|(
name|resolver
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"org1"
block|,
literal|"org2"
block|,
literal|"org6"
block|,
literal|"org9"
block|,
literal|"orgfailure"
block|,
literal|"yourorg"
block|}
argument_list|,
name|orgs
argument_list|)
expr_stmt|;
name|OrganisationEntry
name|org
init|=
name|ResolverTestHelper
operator|.
name|getEntry
argument_list|(
name|orgs
argument_list|,
literal|"org1"
argument_list|)
decl_stmt|;
name|ModuleEntry
index|[]
name|mods
init|=
name|resolver
operator|.
name|listModules
argument_list|(
name|org
argument_list|)
decl_stmt|;
name|ResolverTestHelper
operator|.
name|assertModuleEntries
argument_list|(
name|resolver
argument_list|,
name|org
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"mod1.1"
block|,
literal|"mod1.2"
block|,
literal|"mod1.3"
block|,
literal|"mod1.4"
block|,
literal|"mod1.5"
block|,
literal|"mod1.6"
block|}
argument_list|,
name|mods
argument_list|)
expr_stmt|;
name|ModuleEntry
name|mod
init|=
name|ResolverTestHelper
operator|.
name|getEntry
argument_list|(
name|mods
argument_list|,
literal|"mod1.1"
argument_list|)
decl_stmt|;
name|RevisionEntry
index|[]
name|revs
init|=
name|resolver
operator|.
name|listRevisions
argument_list|(
name|mod
argument_list|)
decl_stmt|;
name|ResolverTestHelper
operator|.
name|assertRevisionEntries
argument_list|(
name|resolver
argument_list|,
name|mod
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"1.0"
block|,
literal|"1.0.1"
block|,
literal|"1.1"
block|,
literal|"2.0"
block|}
argument_list|,
name|revs
argument_list|)
expr_stmt|;
name|mod
operator|=
name|ResolverTestHelper
operator|.
name|getEntry
argument_list|(
name|mods
argument_list|,
literal|"mod1.2"
argument_list|)
expr_stmt|;
name|revs
operator|=
name|resolver
operator|.
name|listRevisions
argument_list|(
name|mod
argument_list|)
expr_stmt|;
name|ResolverTestHelper
operator|.
name|assertRevisionEntries
argument_list|(
name|resolver
argument_list|,
name|mod
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"1.0"
block|,
literal|"1.1"
block|,
literal|"2.0"
block|,
literal|"2.1"
block|,
literal|"2.2"
block|}
argument_list|,
name|revs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDownloadWithUseOriginIsTrue
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|resolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|resolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|setSettings
argument_list|(
name|settings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|resolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addIvyPattern
argument_list|(
name|IVY_PATTERN
argument_list|)
expr_stmt|;
name|resolver
operator|.
name|addArtifactPattern
argument_list|(
literal|"test/repositories/1/"
operator|+
literal|"[organisation]/[module]/[type]s/[artifact]-[revision].[type]"
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|rmr
init|=
name|resolver
operator|.
name|getDependency
argument_list|(
operator|new
name|DefaultDependencyDescriptor
argument_list|(
name|mrid
argument_list|,
literal|false
argument_list|)
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rmr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|rmr
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|Date
name|pubdate
init|=
operator|new
name|GregorianCalendar
argument_list|(
literal|2004
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|pubdate
argument_list|,
name|rmr
operator|.
name|getPublicationDate
argument_list|()
argument_list|)
expr_stmt|;
comment|// test to ask to download
name|DefaultArtifact
name|artifact
init|=
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
name|pubdate
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
decl_stmt|;
name|DownloadReport
name|report
init|=
name|resolver
operator|.
name|download
argument_list|(
operator|new
name|Artifact
index|[]
block|{
name|artifact
block|}
argument_list|,
name|getDownloadOptions
argument_list|(
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|report
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|report
operator|.
name|getArtifactsReports
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|ArtifactDownloadReport
name|ar
init|=
name|report
operator|.
name|getArtifactReport
argument_list|(
name|artifact
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ar
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artifact
argument_list|,
name|ar
operator|.
name|getArtifact
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DownloadStatus
operator|.
name|NO
argument_list|,
name|ar
operator|.
name|getDownloadStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

