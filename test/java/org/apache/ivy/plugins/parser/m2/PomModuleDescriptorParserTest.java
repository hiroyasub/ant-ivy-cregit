begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|m2
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DefaultModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DependencyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|License
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolveData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolvedModuleRevision
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|AbstractModuleDescriptorParserTester
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|xml
operator|.
name|XmlModuleDescriptorParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|xml
operator|.
name|XmlModuleDescriptorParserTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|repository
operator|.
name|url
operator|.
name|URLResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|MockResolver
import|;
end_import

begin_class
specifier|public
class|class
name|PomModuleDescriptorParserTest
extends|extends
name|AbstractModuleDescriptorParserTester
block|{
comment|// junit test -- DO NOT REMOVE used by ant to know it's a junit test
specifier|private
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
specifier|private
class|class
name|MockedDependencyResolver
extends|extends
name|MockResolver
block|{
specifier|public
name|ResolvedModuleRevision
name|getDependency
parameter_list|(
name|DependencyDescriptor
name|dd
parameter_list|,
name|ResolveData
name|data
parameter_list|)
throws|throws
name|ParseException
block|{
comment|//TODO make it a real mock and check that dd and data are the one that are expected
name|DefaultModuleDescriptor
name|moduleDesc
init|=
name|DefaultModuleDescriptor
operator|.
name|newDefaultInstance
argument_list|(
name|dd
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
decl_stmt|;
name|ResolvedModuleRevision
name|r
init|=
operator|new
name|ResolvedModuleRevision
argument_list|(
name|this
argument_list|,
name|this
argument_list|,
name|moduleDesc
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|r
return|;
block|}
block|}
specifier|private
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
literal|"build/test/test-write.xml"
argument_list|)
decl_stmt|;
specifier|private
name|MockResolver
name|mockedResolver
init|=
operator|new
name|MockedDependencyResolver
argument_list|()
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|settings
operator|.
name|setDictatorResolver
argument_list|(
name|mockedResolver
argument_list|)
expr_stmt|;
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
if|if
condition|(
name|dest
operator|.
name|exists
argument_list|()
condition|)
block|{
name|dest
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|dest
operator|.
name|getParentFile
argument_list|()
operator|.
name|exists
argument_list|()
condition|)
block|{
name|dest
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|dest
operator|.
name|exists
argument_list|()
condition|)
block|{
name|dest
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testAccept
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|accept
argument_list|(
operator|new
name|URLResource
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-simple.pom"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|accept
argument_list|(
operator|new
name|URLResource
argument_list|(
name|XmlModuleDescriptorParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"test.xml"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-simple.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|md
operator|.
name|getConfigurations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|PomModuleDescriptorBuilder
operator|.
name|MAVEN2_CONFIGURATIONS
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|md
operator|.
name|getConfigurations
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifact
init|=
name|md
operator|.
name|getArtifacts
argument_list|(
literal|"master"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifact
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getExt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPackaging
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-packaging.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifact
init|=
name|md
operator|.
name|getArtifacts
argument_list|(
literal|"master"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifact
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"war"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getExt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"war"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEjbPackaging
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-ejb-packaging.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifact
init|=
name|md
operator|.
name|getArtifacts
argument_list|(
literal|"master"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifact
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getExt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ejb"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testParent
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-parent.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifact
init|=
name|md
operator|.
name|getArtifacts
argument_list|(
literal|"master"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifact
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testParent2
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-parent2.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifact
init|=
name|md
operator|.
name|getArtifacts
argument_list|(
literal|"master"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifact
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testParentVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-parent.version.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|Artifact
index|[]
name|artifact
init|=
name|md
operator|.
name|getArtifacts
argument_list|(
literal|"master"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifact
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDependencies
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencies.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"There is no special artifact when there is no classifier"
argument_list|,
literal|0
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDependenciesWithClassifier
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencies-with-classifier.pom"
argument_list|)
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|Map
name|extraAtt
init|=
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"classifier"
argument_list|,
literal|"asl"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|extraAtt
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
index|[
literal|0
index|]
operator|.
name|getExtraAttributes
argument_list|()
argument_list|)
expr_stmt|;
comment|// now we verify the conversion to an Ivy file
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|toIvyFile
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencies-with-classifier.pom"
argument_list|)
operator|.
name|openStream
argument_list|()
argument_list|,
operator|new
name|URLResource
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencies-with-classifier.pom"
argument_list|)
argument_list|)
argument_list|,
name|dest
argument_list|,
name|md
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|dest
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// the converted Ivy file should be parsable with validate=true
name|ModuleDescriptor
name|md2
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|dest
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
comment|// and the parsed module descriptor should be similar to the original
name|assertNotNull
argument_list|(
name|md2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|,
name|md2
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|dds
operator|=
name|md2
operator|.
name|getDependencies
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|extraAtt
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
index|[
literal|0
index|]
operator|.
name|getExtraAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDependenciesWithType
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencies-with-type.pom"
argument_list|)
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dll"
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
index|[
literal|0
index|]
operator|.
name|getExt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dll"
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
index|[
literal|0
index|]
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testWithVersionPropertyAndPropertiesTag
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-version.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test-other"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test-yet-other"
argument_list|,
literal|"5.76"
argument_list|)
argument_list|,
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// IVY-392
specifier|public
name|void
name|testDependenciesWithProfile
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencies-with-profile.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testWithoutVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-without-version.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getModuleId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-properties.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"drools"
argument_list|,
literal|"drools-smf"
argument_list|,
literal|"2.0-beta-18"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"drools"
argument_list|,
literal|"drools-core"
argument_list|,
literal|"2.0-beta-18"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReal
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"commons-lang-1.0.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-lang"
argument_list|,
literal|"commons-lang"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"junit"
argument_list|,
literal|"junit"
argument_list|,
literal|"3.7"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReal2
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"wicket-1.3-incubating-SNAPSHOT.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache.wicket"
argument_list|,
literal|"wicket"
argument_list|,
literal|"1.3-incubating-SNAPSHOT"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testVariables
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test case for IVY-425
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"spring-hibernate3-2.0.2.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.springframework"
argument_list|,
literal|"spring-hibernate3"
argument_list|,
literal|"2.0.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.springframework"
argument_list|,
literal|"spring-web"
argument_list|,
literal|"2.0.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|10
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDependenciesInProfile
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test case for IVY-423
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"mule-module-builders-1.3.3.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.mule.modules"
argument_list|,
literal|"mule-module-builders"
argument_list|,
literal|"1.3.3"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testIVY424
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test case for IVY-424
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"shale-tiger-1.1.0-SNAPSHOT.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache.shale"
argument_list|,
literal|"shale-tiger"
argument_list|,
literal|"1.1.0-SNAPSHOT"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testOptional
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-optional.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|md
operator|.
name|getConfigurationsNames
argument_list|()
argument_list|)
operator|.
name|contains
argument_list|(
literal|"optional"
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"optional"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|0
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//I don't know what it should be.  Ivy has no notion of optional dependencies
comment|//assertEquals(new HashSet(Arrays.asList(new String[] {"compile(*)", "runtime(*)",
comment|//        "master(*)"})), new HashSet(Arrays.asList(dds[0]
comment|//        .getDependencyConfigurations("optional"))));
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"cglib"
argument_list|,
literal|"cglib"
argument_list|,
literal|"2.0.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"compile"
block|,
literal|"runtime"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"master(*)"
block|,
literal|"compile(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"compile"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"runtime(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDependenciesWithScope
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencies-with-scope.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"odmg"
argument_list|,
literal|"odmg"
argument_list|,
literal|"3.0"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"runtime"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|0
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"compile(*)"
block|,
literal|"runtime(*)"
block|,
literal|"master(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"compile"
block|,
literal|"runtime"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"master(*)"
block|,
literal|"compile(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"compile"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"runtime(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"cglib"
argument_list|,
literal|"cglib"
argument_list|,
literal|"2.0.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|2
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"compile"
block|,
literal|"runtime"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|2
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"master(*)"
block|,
literal|"compile(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|2
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"compile"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"runtime(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|2
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testExclusion
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-exclusion.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"compile"
block|,
literal|"runtime"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|0
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"master(*)"
block|,
literal|"compile(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"compile"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"runtime(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllExcludeRules
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"dom4j"
argument_list|,
literal|"dom4j"
argument_list|,
literal|"1.6"
argument_list|)
argument_list|,
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"compile"
block|,
literal|"runtime"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"master(*)"
block|,
literal|"compile(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"compile"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"runtime(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertDependencyModulesExcludes
argument_list|(
name|dds
index|[
literal|1
index|]
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"compile"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"jaxme-api"
block|,
literal|"jaxen"
block|}
argument_list|)
expr_stmt|;
name|assertDependencyModulesExcludes
argument_list|(
name|dds
index|[
literal|1
index|]
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"runtime"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"jaxme-api"
block|,
literal|"jaxen"
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"cglib"
argument_list|,
literal|"cglib"
argument_list|,
literal|"2.0.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|2
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"compile"
block|,
literal|"runtime"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|2
index|]
operator|.
name|getModuleConfigurations
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"master(*)"
block|,
literal|"compile(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|2
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"compile"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"runtime(*)"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|dds
index|[
literal|2
index|]
operator|.
name|getDependencyConfigurations
argument_list|(
literal|"runtime"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|dds
index|[
literal|2
index|]
operator|.
name|getAllExcludeRules
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testWithPlugins
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test case for IVY-417
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"mule-1.3.3.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.mule"
argument_list|,
literal|"mule"
argument_list|,
literal|"1.3.3"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testHomeAndDescription
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"mule-1.3.3.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.mule"
argument_list|,
literal|"mule"
argument_list|,
literal|"1.3.3"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://mule.mulesource.org"
argument_list|,
name|md
operator|.
name|getHomePage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mule is a simple yet robust and highly scalable Integration and ESB services "
operator|+
literal|"framework. It is designed\n        as a light-weight, event-driven component "
operator|+
literal|"technology that handles communication with disparate systems\n        "
operator|+
literal|"transparently providing a simple component interface."
argument_list|,
name|md
operator|.
name|getDescription
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"\r\n"
argument_list|,
literal|"\n"
argument_list|)
operator|.
name|replace
argument_list|(
literal|'\r'
argument_list|,
literal|'\n'
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLicense
parameter_list|()
throws|throws
name|Exception
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"spring-hibernate3-2.0.2.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|License
index|[]
name|licenses
init|=
name|md
operator|.
name|getLicenses
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|licenses
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|licenses
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The Apache Software License, Version 2.0"
argument_list|,
name|licenses
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://www.apache.org/licenses/LICENSE-2.0.txt"
argument_list|,
name|licenses
index|[
literal|0
index|]
operator|.
name|getUrl
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDependencyManagment
parameter_list|()
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencyMgt.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test-depMgt"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"There is no special artifact when there is no classifier"
argument_list|,
literal|0
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDependencyManagmentWithScope
parameter_list|()
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencyMgt-with-scope.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test-depMgt"
argument_list|,
literal|"1.1"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"There is no special artifact when there is no classifier"
argument_list|,
literal|0
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getAllDependencyArtifacts
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The number of configurations is incorrect"
argument_list|,
literal|1
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getModuleConfigurations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The configuration must be test"
argument_list|,
literal|"test"
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getModuleConfigurations
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testParentDependencyMgt
parameter_list|()
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|settings
operator|.
name|setDictatorResolver
argument_list|(
operator|new
name|MockResolver
argument_list|()
block|{
specifier|public
name|ResolvedModuleRevision
name|getDependency
parameter_list|(
name|DependencyDescriptor
name|dd
parameter_list|,
name|ResolveData
name|data
parameter_list|)
throws|throws
name|ParseException
block|{
try|try
block|{
name|ModuleDescriptor
name|moduleDescriptor
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-dependencyMgt.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
return|return
operator|new
name|ResolvedModuleRevision
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|moduleDescriptor
argument_list|,
literal|null
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-parentDependencyMgt.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test-parentdep"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-collection"
argument_list|,
literal|"commons-collection"
argument_list|,
literal|"1.0.5"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"commons-logging"
argument_list|,
literal|"commons-logging"
argument_list|,
literal|"1.0.4"
argument_list|)
argument_list|,
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testParentProperties
parameter_list|()
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|settings
operator|.
name|setDictatorResolver
argument_list|(
operator|new
name|MockResolver
argument_list|()
block|{
specifier|public
name|ResolvedModuleRevision
name|getDependency
parameter_list|(
name|DependencyDescriptor
name|dd
parameter_list|,
name|ResolveData
name|data
parameter_list|)
throws|throws
name|ParseException
block|{
try|try
block|{
name|ModuleDescriptor
name|moduleDescriptor
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-version.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
return|return
operator|new
name|ResolvedModuleRevision
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|moduleDescriptor
argument_list|,
literal|null
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|PomModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
name|settings
argument_list|,
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"test-parent-properties.pom"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
comment|//2 are inherited from parent.  Only the first one is important for this test
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.apache"
argument_list|,
literal|"test-version-other"
argument_list|,
literal|"5.76"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
comment|//present in the pom using a property defined in the parent
block|}
block|}
end_class

end_unit

