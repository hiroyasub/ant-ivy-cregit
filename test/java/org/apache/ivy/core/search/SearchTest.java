begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|search
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|Ivy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|IvyPatternHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|matcher
operator|.
name|PatternMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|IBiblioResolver
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|SearchTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testListInMavenRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|Ivy
name|ivy
init|=
name|Ivy
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|ivy
operator|.
name|configure
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/m2/ivysettings.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|)
expr_stmt|;
name|Map
name|otherTokenValues
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|otherTokenValues
operator|.
name|put
argument_list|(
name|IvyPatternHelper
operator|.
name|ORGANISATION_KEY
argument_list|,
literal|"org.apache"
argument_list|)
expr_stmt|;
name|otherTokenValues
operator|.
name|put
argument_list|(
name|IvyPatternHelper
operator|.
name|MODULE_KEY
argument_list|,
literal|"test-metadata"
argument_list|)
expr_stmt|;
name|String
index|[]
name|revs
init|=
name|ivy
operator|.
name|listTokenValues
argument_list|(
name|IvyPatternHelper
operator|.
name|REVISION_KEY
argument_list|,
name|otherTokenValues
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"1.0"
block|,
literal|"1.1"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|revs
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testListInMavenRepo2
parameter_list|()
throws|throws
name|Exception
block|{
name|Ivy
name|ivy
init|=
name|Ivy
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|ivy
operator|.
name|configure
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/m2/ivysettings.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|IBiblioResolver
operator|)
name|ivy
operator|.
name|getSettings
argument_list|()
operator|.
name|getResolver
argument_list|(
literal|"m2"
argument_list|)
operator|)
operator|.
name|setUseMavenMetadata
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|Map
name|otherTokenValues
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|otherTokenValues
operator|.
name|put
argument_list|(
name|IvyPatternHelper
operator|.
name|ORGANISATION_KEY
argument_list|,
literal|"org.apache"
argument_list|)
expr_stmt|;
name|otherTokenValues
operator|.
name|put
argument_list|(
name|IvyPatternHelper
operator|.
name|MODULE_KEY
argument_list|,
literal|"test-metadata"
argument_list|)
expr_stmt|;
name|String
index|[]
name|revs
init|=
name|ivy
operator|.
name|listTokenValues
argument_list|(
name|IvyPatternHelper
operator|.
name|REVISION_KEY
argument_list|,
name|otherTokenValues
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"1.0"
block|,
literal|"1.1"
block|,
literal|"1.2"
block|}
argument_list|)
argument_list|)
argument_list|,
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|revs
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testListModulesWithExtraAttributes
parameter_list|()
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|Ivy
name|ivy
init|=
name|Ivy
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|ivy
operator|.
name|configure
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/IVY-1128/ivysettings.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|IvySettings
name|settings
init|=
name|ivy
operator|.
name|getSettings
argument_list|()
decl_stmt|;
name|Map
name|extendedAttributes
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|extendedAttributes
operator|.
name|put
argument_list|(
literal|"e:att1"
argument_list|,
literal|"extraatt"
argument_list|)
expr_stmt|;
name|extendedAttributes
operator|.
name|put
argument_list|(
literal|"e:att2"
argument_list|,
literal|"extraatt2"
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|criteria
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"test"
argument_list|,
literal|"a"
argument_list|,
literal|"*"
argument_list|,
name|extendedAttributes
argument_list|)
decl_stmt|;
name|ModuleRevisionId
index|[]
name|mrids
init|=
name|ivy
operator|.
name|listModules
argument_list|(
name|criteria
argument_list|,
name|settings
operator|.
name|getMatcher
argument_list|(
name|PatternMatcher
operator|.
name|REGEXP
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|mrids
operator|.
name|length
argument_list|)
expr_stmt|;
name|ModuleRevisionId
name|mrid
init|=
name|mrids
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"extraatt"
argument_list|,
name|mrid
operator|.
name|getExtraAttribute
argument_list|(
literal|"att1"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
name|extraAttributes
init|=
name|mrid
operator|.
name|getExtraAttributes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|extraAttributes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|extraAttributes
operator|.
name|toString
argument_list|()
argument_list|,
name|extraAttributes
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"att1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|extraAttributes
operator|.
name|toString
argument_list|()
argument_list|,
name|extraAttributes
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"att2"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
name|qualifiedExtraAttributes
init|=
name|mrid
operator|.
name|getQualifiedExtraAttributes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|qualifiedExtraAttributes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|qualifiedExtraAttributes
operator|.
name|toString
argument_list|()
argument_list|,
name|qualifiedExtraAttributes
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"e:att1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|qualifiedExtraAttributes
operator|.
name|toString
argument_list|()
argument_list|,
name|qualifiedExtraAttributes
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"e:att2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

