begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|cache
operator|.
name|ResolutionCacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|report
operator|.
name|ResolveReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|latest
operator|.
name|LatestRevisionStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|latest
operator|.
name|LatestStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|latest
operator|.
name|LatestTimeStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|ModuleDescriptorParserRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|ModuleDescriptorParserRegistryTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|report
operator|.
name|ReportOutputter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|ChainResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|DependencyResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|FileSystemResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|MockResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|version
operator|.
name|ChainVersionMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|version
operator|.
name|MockVersionMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|version
operator|.
name|VersionMatcher
import|;
end_import

begin_comment
comment|/**  * TODO write javadoc  */
end_comment

begin_class
specifier|public
class|class
name|XmlSettingsParserTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|test
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-test.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|defaultCache
init|=
name|settings
operator|.
name|getDefaultCache
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|defaultCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mycache"
argument_list|,
name|defaultCache
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|settings
operator|.
name|isCheckUpToDate
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|settings
operator|.
name|doValidate
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"[module]/ivys/ivy-[revision].xml"
argument_list|,
name|settings
operator|.
name|getCacheIvyPattern
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"[module]/[type]s/[artifact]-[revision].[ext]"
argument_list|,
name|settings
operator|.
name|getCacheArtifactPattern
argument_list|()
argument_list|)
expr_stmt|;
name|LatestStrategy
name|latest
init|=
name|settings
operator|.
name|getLatestStrategy
argument_list|(
literal|"mylatest-revision"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|latest
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|latest
operator|instanceof
name|LatestRevisionStrategy
argument_list|)
expr_stmt|;
name|LatestRevisionStrategy
name|l
init|=
operator|(
name|LatestRevisionStrategy
operator|)
name|latest
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
operator|-
literal|2
argument_list|)
argument_list|,
name|l
operator|.
name|getSpecialMeanings
argument_list|()
operator|.
name|get
argument_list|(
literal|"pre"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|4
argument_list|)
argument_list|,
name|l
operator|.
name|getSpecialMeanings
argument_list|()
operator|.
name|get
argument_list|(
literal|"qa"
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|defaultResolver
init|=
name|settings
operator|.
name|getDefaultResolver
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|defaultResolver
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"libraries"
argument_list|,
name|defaultResolver
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|defaultResolver
operator|instanceof
name|FileSystemResolver
argument_list|)
expr_stmt|;
name|FileSystemResolver
name|fsres
init|=
operator|(
name|FileSystemResolver
operator|)
name|defaultResolver
decl_stmt|;
name|List
name|ivyPatterns
init|=
name|fsres
operator|.
name|getIvyPatterns
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"lib/[organisation]/[module]/ivys/ivy-[revision].xml"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|LatestStrategy
name|strategy
init|=
name|fsres
operator|.
name|getLatestStrategy
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|strategy
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|strategy
operator|instanceof
name|LatestRevisionStrategy
argument_list|)
expr_stmt|;
name|DependencyResolver
name|internal
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"internal"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|internal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|internal
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|ChainResolver
name|chain
init|=
operator|(
name|ChainResolver
operator|)
name|internal
decl_stmt|;
name|List
name|subresolvers
init|=
name|chain
operator|.
name|getResolvers
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystemResolver
name|fsInt1
init|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"int1"
argument_list|,
name|fsInt1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|fsInt1
operator|.
name|getIvyPatterns
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sharedrep/[organisation]/[module]/ivys/ivy-[revision].xml"
argument_list|,
name|fsInt1
operator|.
name|getIvyPatterns
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"int2"
argument_list|,
operator|(
operator|(
name|DependencyResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|strategy
operator|=
name|fsInt1
operator|.
name|getLatestStrategy
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|strategy
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|strategy
operator|instanceof
name|LatestTimeStrategy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"libraries"
argument_list|,
name|settings
operator|.
name|getResolver
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"unknown"
argument_list|,
literal|"lib"
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"internal"
argument_list|,
name|settings
operator|.
name|getResolver
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"apache"
argument_list|,
literal|"ant"
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"int1"
argument_list|,
name|settings
operator|.
name|getResolver
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"apache"
argument_list|,
literal|"ivy"
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"int1"
argument_list|,
name|settings
operator|.
name|getResolver
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"apache"
argument_list|,
literal|"ivyde"
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNoOrgInModule
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
try|try
block|{
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-no-org-in-module.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no organisation in module is supposed to raise an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"bad exception message: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"'organisation'"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testNoNameInModule
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
try|try
block|{
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-no-name-in-module.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"no name in module is supposed to raise an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"bad exception message: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"'name'"
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testTypedef
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-typedef.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|mock
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"mock3"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mock
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mock
operator|instanceof
name|MockResolver
argument_list|)
expr_stmt|;
name|DependencyResolver
name|internal
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"internal"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|internal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|internal
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|ChainResolver
name|chain
init|=
operator|(
name|ChainResolver
operator|)
name|internal
decl_stmt|;
name|List
name|subresolvers
init|=
name|chain
operator|.
name|getResolvers
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mock1"
argument_list|,
operator|(
operator|(
name|DependencyResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mock2"
argument_list|,
operator|(
operator|(
name|DependencyResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|MockResolver
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|subresolvers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|instanceof
name|MockResolver
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStatuses
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-status.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bronze"
argument_list|,
name|settings
operator|.
name|getStatusManager
argument_list|()
operator|.
name|getDefaultStatus
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|settings
operator|.
name|getStatusManager
argument_list|()
operator|.
name|getPriority
argument_list|(
literal|"gold"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|settings
operator|.
name|getStatusManager
argument_list|()
operator|.
name|getPriority
argument_list|(
literal|"silver"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|settings
operator|.
name|getStatusManager
argument_list|()
operator|.
name|getPriority
argument_list|(
literal|"bronze"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|settings
operator|.
name|getStatusManager
argument_list|()
operator|.
name|isIntegration
argument_list|(
literal|"gold"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|settings
operator|.
name|getStatusManager
argument_list|()
operator|.
name|isIntegration
argument_list|(
literal|"silver"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|settings
operator|.
name|getStatusManager
argument_list|()
operator|.
name|isIntegration
argument_list|(
literal|"bronze"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testConflictManager
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-conflict-manager.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"latest-time"
argument_list|,
name|settings
operator|.
name|getConflictManager
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"apache"
argument_list|,
literal|"ivyde"
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"all"
argument_list|,
name|settings
operator|.
name|getConflictManager
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"apache"
argument_list|,
literal|"ant"
argument_list|)
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCache
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-cache.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|File
name|defaultCache
init|=
name|settings
operator|.
name|getDefaultCache
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|defaultCache
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mycache"
argument_list|,
name|defaultCache
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|defaultCache
argument_list|,
literal|"repository"
argument_list|)
argument_list|,
name|settings
operator|.
name|getRepositoryCacheRoot
argument_list|(
name|defaultCache
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|defaultCache
argument_list|,
literal|"resolution"
argument_list|)
argument_list|,
name|settings
operator|.
name|getResolutionCacheRoot
argument_list|(
name|defaultCache
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"artifact-lock"
argument_list|,
name|settings
operator|.
name|getDefaultLockStrategy
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"[module]/ivys/ivy-[revision].xml"
argument_list|,
name|settings
operator|.
name|getCacheIvyPattern
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"[module]/[type]s/[artifact]-[revision].[ext]"
argument_list|,
name|settings
operator|.
name|getCacheArtifactPattern
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testVersionMatchers1
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-vmatcher1.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|VersionMatcher
name|mock
init|=
name|settings
operator|.
name|getVersionMatcher
argument_list|(
literal|"vmock"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mock
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mock
operator|instanceof
name|MockVersionMatcher
argument_list|)
expr_stmt|;
name|VersionMatcher
name|v
init|=
name|settings
operator|.
name|getVersionMatcher
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|v
operator|instanceof
name|ChainVersionMatcher
argument_list|)
expr_stmt|;
name|ChainVersionMatcher
name|chain
init|=
operator|(
name|ChainVersionMatcher
operator|)
name|v
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|chain
operator|.
name|getMatchers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|chain
operator|.
name|getMatchers
argument_list|()
operator|.
name|contains
argument_list|(
name|mock
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|chain
operator|.
name|getMatchers
argument_list|()
operator|.
name|contains
argument_list|(
name|settings
operator|.
name|getVersionMatcher
argument_list|(
literal|"exact"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|chain
operator|.
name|getMatchers
argument_list|()
operator|.
name|contains
argument_list|(
name|settings
operator|.
name|getVersionMatcher
argument_list|(
literal|"latest"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testVersionMatchers2
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-vmatcher2.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|VersionMatcher
name|mock
init|=
name|settings
operator|.
name|getVersionMatcher
argument_list|(
literal|"vmock"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mock
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mock
operator|instanceof
name|MockVersionMatcher
argument_list|)
expr_stmt|;
name|VersionMatcher
name|v
init|=
name|settings
operator|.
name|getVersionMatcher
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|v
operator|instanceof
name|ChainVersionMatcher
argument_list|)
expr_stmt|;
name|ChainVersionMatcher
name|chain
init|=
operator|(
name|ChainVersionMatcher
operator|)
name|v
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|chain
operator|.
name|getMatchers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|chain
operator|.
name|getMatchers
argument_list|()
operator|.
name|contains
argument_list|(
name|mock
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRef
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-ref.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|internal
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"internal"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|internal
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|internal
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|ChainResolver
name|chain
init|=
operator|(
name|ChainResolver
operator|)
name|internal
decl_stmt|;
name|List
name|subresolvers
init|=
name|chain
operator|.
name|getResolvers
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystemResolver
name|fsInt1
init|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"fs"
argument_list|,
name|fsInt1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|ivyPatterns
init|=
name|fsInt1
operator|.
name|getIvyPatterns
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sharedrep/[organisation]/[module]/ivys/ivy-[revision].xml"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|external
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"external"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|external
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|external
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|chain
operator|=
operator|(
name|ChainResolver
operator|)
name|external
expr_stmt|;
name|subresolvers
operator|=
name|chain
operator|.
name|getResolvers
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystemResolver
name|fsInt2
init|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"fs"
argument_list|,
name|fsInt2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ivyPatterns
operator|=
name|fsInt2
operator|.
name|getIvyPatterns
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sharedrep/[organisation]/[module]/ivys/ivy-[revision].xml"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testMacro
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-macro.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|def
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|def
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|def
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|ChainResolver
name|chain
init|=
operator|(
name|ChainResolver
operator|)
name|def
decl_stmt|;
name|List
name|subresolvers
init|=
name|chain
operator|.
name|getResolvers
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystemResolver
name|fsInt1
init|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"default-fs1"
argument_list|,
name|fsInt1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|ivyPatterns
init|=
name|fsInt1
operator|.
name|getIvyPatterns
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"path/to/myrep/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|FileSystemResolver
name|fsInt2
init|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"default-fs2"
argument_list|,
name|fsInt2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ivyPatterns
operator|=
name|fsInt2
operator|.
name|getIvyPatterns
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"path/to/secondrep/[organisation]/[module]/[type]s/ivy-[revision].xml"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|other
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"other"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|other
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|chain
operator|=
operator|(
name|ChainResolver
operator|)
name|other
expr_stmt|;
name|subresolvers
operator|=
name|chain
operator|.
name|getResolvers
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|fsInt2
operator|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"other-fs2"
argument_list|,
name|fsInt2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ivyPatterns
operator|=
name|fsInt2
operator|.
name|getIvyPatterns
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"path/to/secondrep/[module]/[type]s/ivy-[revision].xml"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testMacroAndRef
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test case for IVY-319
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-macro+ref.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|shared
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"shared"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|shared
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|shared
operator|instanceof
name|FileSystemResolver
argument_list|)
expr_stmt|;
name|DependencyResolver
name|mychain
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"mychain"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|mychain
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mychain
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|ChainResolver
name|chain
init|=
operator|(
name|ChainResolver
operator|)
name|mychain
decl_stmt|;
name|List
name|subresolvers
init|=
name|chain
operator|.
name|getResolvers
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|shared
operator|=
operator|(
name|DependencyResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"shared"
argument_list|,
name|shared
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|shared
operator|instanceof
name|FileSystemResolver
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testInclude
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-include.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|def
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|def
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|def
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|ChainResolver
name|chain
init|=
operator|(
name|ChainResolver
operator|)
name|def
decl_stmt|;
name|List
name|subresolvers
init|=
name|chain
operator|.
name|getResolvers
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystemResolver
name|fsInt1
init|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"default-fs1"
argument_list|,
name|fsInt1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|ivyPatterns
init|=
name|fsInt1
operator|.
name|getIvyPatterns
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"path/to/myrep/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|DependencyResolver
name|inc
init|=
name|settings
operator|.
name|getResolver
argument_list|(
literal|"includeworks"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|inc
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|inc
operator|instanceof
name|ChainResolver
argument_list|)
expr_stmt|;
name|chain
operator|=
operator|(
name|ChainResolver
operator|)
name|inc
expr_stmt|;
name|subresolvers
operator|=
name|chain
operator|.
name|getResolvers
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|subresolvers
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|subresolvers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|fsInt1
operator|=
operator|(
name|FileSystemResolver
operator|)
name|subresolvers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"includeworks-fs1"
argument_list|,
name|fsInt1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ivyPatterns
operator|=
name|fsInt1
operator|.
name|getIvyPatterns
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|ivyPatterns
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ivyPatterns
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"included/myrep/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]"
argument_list|,
name|ivyPatterns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testParser
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-parser.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleDescriptorParserRegistryTest
operator|.
name|MyParser
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|ModuleDescriptorParserRegistry
operator|.
name|getInstance
argument_list|()
operator|.
name|getParsers
argument_list|()
index|[
literal|0
index|]
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testOutputter
parameter_list|()
throws|throws
name|Exception
block|{
name|IvySettings
name|settings
init|=
operator|new
name|IvySettings
argument_list|()
decl_stmt|;
name|XmlSettingsParser
name|parser
init|=
operator|new
name|XmlSettingsParser
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|XmlSettingsParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"ivysettings-outputter.xml"
argument_list|)
argument_list|)
expr_stmt|;
comment|// System.out.println(Arrays.asList(ivy.getReportOutputters()));
name|ReportOutputter
name|testOutputter
init|=
name|settings
operator|.
name|getReportOutputter
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|testOutputter
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|testOutputter
operator|instanceof
name|MyOutputter
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|MyOutputter
implements|implements
name|ReportOutputter
block|{
specifier|public
name|void
name|output
parameter_list|(
name|ResolveReport
name|report
parameter_list|,
name|ResolutionCacheManager
name|cacheMgr
parameter_list|)
block|{
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"test"
return|;
block|}
block|}
block|}
end_class

end_unit

