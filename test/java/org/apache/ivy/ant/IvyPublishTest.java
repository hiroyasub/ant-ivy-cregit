begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|TestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|xml
operator|.
name|XmlModuleDescriptorParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|DefaultMessageLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|Echo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|IvyPublishTest
block|{
specifier|private
name|File
name|cache
decl_stmt|;
specifier|private
name|IvyPublish
name|publish
decl_stmt|;
specifier|private
name|Project
name|project
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|cleanTestDir
argument_list|()
expr_stmt|;
name|cleanRep
argument_list|()
expr_stmt|;
name|createCache
argument_list|()
expr_stmt|;
name|project
operator|=
name|TestHelper
operator|.
name|newProject
argument_list|()
expr_stmt|;
name|project
operator|.
name|init
argument_list|()
expr_stmt|;
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.settings.file"
argument_list|,
literal|"test/repositories/ivysettings.xml"
argument_list|)
expr_stmt|;
name|project
operator|.
name|setProperty
argument_list|(
literal|"build"
argument_list|,
literal|"build/test/publish"
argument_list|)
expr_stmt|;
name|publish
operator|=
operator|new
name|IvyPublish
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"ivy.cache.dir"
argument_list|,
name|cache
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|Message
operator|.
name|setDefaultLogger
argument_list|(
operator|new
name|DefaultMessageLogger
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createCache
parameter_list|()
block|{
name|cache
operator|=
operator|new
name|File
argument_list|(
literal|"build/cache"
argument_list|)
expr_stmt|;
name|cache
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|cleanCache
argument_list|()
expr_stmt|;
name|cleanTestDir
argument_list|()
expr_stmt|;
name|cleanRep
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|cleanCache
parameter_list|()
block|{
name|FileUtil
operator|.
name|forceDelete
argument_list|(
name|cache
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|cleanTestDir
parameter_list|()
block|{
name|FileUtil
operator|.
name|forceDelete
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish"
argument_list|)
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|forceDelete
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/transactional"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|cleanRep
parameter_list|()
block|{
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|()
decl_stmt|;
name|del
operator|.
name|setProject
argument_list|(
operator|new
name|Project
argument_list|()
argument_list|)
expr_stmt|;
name|del
operator|.
name|setDir
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache"
argument_list|)
argument_list|)
expr_stmt|;
name|del
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeParent
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// publish the parent descriptor first, so that it can be found while
comment|// we are reading the child descriptor.
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|IvyPublish
name|pubParent
init|=
operator|new
name|IvyPublish
argument_list|()
decl_stmt|;
name|pubParent
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setPubrevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.0.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// update=true implies merge=true
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setOrganisation
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setModule
argument_list|(
literal|"resolve-extends"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setRevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setStatus
argument_list|(
literal|"release"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|File
name|published
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-extends/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|published
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|published
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"ivy-extends-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
comment|// strip timestamps for the comparison
if|if
condition|(
name|mergeLine
operator|.
name|contains
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|replaceFirst
argument_list|(
literal|"\\s?publication=\"\\d+\""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
comment|// discard whitespace-only lines
if|if
condition|(
operator|!
operator|(
name|mergeLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
name|expectedLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
argument_list|,
name|mergeLine
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeParentWithoutPublishingParent
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// here we directly publish a module extending ivy-multiconf.xml,
comment|// the module parent is not published not yet in cache
comment|// See : IVY-1248
comment|// update=true implies merge=true
comment|// project.setProperty("ivy.dep.file",
comment|// "test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml");
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setOrganisation
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setModule
argument_list|(
literal|"resolve-extends"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setRevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setStatus
argument_list|(
literal|"release"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|File
name|published
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-extends/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|published
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|published
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"ivy-extends-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
comment|// strip timestamps for the comparison
if|if
condition|(
name|mergeLine
operator|.
name|contains
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|replaceFirst
argument_list|(
literal|"\\s?publication=\"\\d+\""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
comment|// discard whitespace-only lines
if|if
condition|(
operator|!
operator|(
name|mergeLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
name|expectedLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
argument_list|,
name|mergeLine
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeParentWithoutPublishingParentForceDeliver
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// here we directly publish a module extending ivy-multiconf.xml,
comment|// the module parent is not published not yet in cache
comment|// See : IVY-1248
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// update=true implies merge=true
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setOrganisation
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setModule
argument_list|(
literal|"resolve-extends"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setRevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setStatus
argument_list|(
literal|"release"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setForcedeliver
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setSrcivypattern
argument_list|(
literal|"test/repositories/1/apache/resolve-extends/ivys/ivy-deliver-1.2.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|File
name|published
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-extends/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|published
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|published
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"ivy-extends-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
comment|// strip timestamps for the comparison
if|if
condition|(
name|mergeLine
operator|.
name|contains
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|replaceFirst
argument_list|(
literal|"\\s?publication=\"\\d+\""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
comment|// discard whitespace-only lines
if|if
condition|(
operator|!
operator|(
name|mergeLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
name|expectedLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
argument_list|,
name|mergeLine
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeParentWithoutLocationAttribute
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// See : IVY-XXX
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/extends/child1/ivy-child1.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// update=true implies merge=true
comment|// project.setProperty("ivy.dep.file",
comment|// "test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml");
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setStatus
argument_list|(
literal|"release"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"${build}/[artifact].[ext]"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|File
name|published
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/child1/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|published
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|published
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"extends/child1/ivy-child1-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
comment|// strip timestamps for the comparison
if|if
condition|(
name|mergeLine
operator|.
name|contains
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|replaceFirst
argument_list|(
literal|"\\s?publication=\"\\d+\""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
comment|// discard whitespace-only lines
if|if
condition|(
operator|!
operator|(
name|mergeLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
name|expectedLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
argument_list|,
name|mergeLine
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMinimalMerge
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// publish the parent descriptor first, so that it can be found while
comment|// we are reading the child descriptor.
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|IvyPublish
name|pubParent
init|=
operator|new
name|IvyPublish
argument_list|()
decl_stmt|;
name|pubParent
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setPubrevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.0.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// update=true implies merge=true
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-extends-minimal.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setOrganisation
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setModule
argument_list|(
literal|"resolve-extends"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setRevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setStatus
argument_list|(
literal|"release"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-extends-minimal.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|File
name|published
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-minimal/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|published
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|published
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"ivy-extends-minimal-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
comment|// strip timestamps for the comparison
if|if
condition|(
name|mergeLine
operator|.
name|contains
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|replaceFirst
argument_list|(
literal|"\\s?publication=\"\\d+\""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
comment|// discard whitespace-only lines
if|if
condition|(
operator|!
operator|(
name|mergeLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
name|expectedLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
argument_list|,
name|mergeLine
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeExtraAttributes
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// publish the parent descriptor first, so that it can be found while
comment|// we are reading the child descriptor.
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|IvyPublish
name|pubParent
init|=
operator|new
name|IvyPublish
argument_list|()
decl_stmt|;
name|pubParent
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setPubrevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.0.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// update=true implies merge=true
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-extends-extra-attributes.xml"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setOrganisation
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setModule
argument_list|(
literal|"resolve-minimal"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setRevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setStatus
argument_list|(
literal|"release"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"build/test/publish/ivy-extends-extra-attributes.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setForcedeliver
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|File
name|published
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-minimal/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|published
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|published
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"ivy-extends-extra-attributes-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
comment|// strip timestamps for the comparison
if|if
condition|(
name|mergeLine
operator|.
name|contains
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|replaceFirst
argument_list|(
literal|"\\s?publication=\"\\d+\""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
comment|// discard whitespace-only lines
if|if
condition|(
operator|!
operator|(
name|mergeLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
name|expectedLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
argument_list|,
name|mergeLine
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeExtraAttributesFromParent
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// publish the parent descriptor first, so that it can be found while
comment|// we are reading the child descriptor.
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf-extra-attributes.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|IvyPublish
name|pubParent
init|=
operator|new
name|IvyPublish
argument_list|()
decl_stmt|;
name|pubParent
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setPubrevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.0.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// update=true implies merge=true
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-extends-extra-attributes-parent.xml"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setOrganisation
argument_list|(
literal|"apache"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setModule
argument_list|(
literal|"resolve-minimal"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setRevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setStatus
argument_list|(
literal|"release"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"build/test/publish/ivy-extends-extra-attributes.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setForcedeliver
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|File
name|published
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-minimal/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|published
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"resource"
argument_list|)
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|published
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"ivy-extends-extra-attributes-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
comment|// strip timestamps for the comparison
if|if
condition|(
name|mergeLine
operator|.
name|contains
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|replaceFirst
argument_list|(
literal|"\\s?publication=\"\\d+\""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
comment|// discard whitespace-only lines
if|if
condition|(
operator|!
operator|(
name|mergeLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
name|expectedLine
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
argument_list|,
name|mergeLine
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/ivys/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/jars/resolve-simple-1.2.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have updated published ivy version
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/ivys/ivy-1.2.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1.2"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHaltOnMissing
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setHaltonmissing
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"publish with haltonmissing and a missing artifact should raise an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuildException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"missing"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"resolve-simple.jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should not have published the files with "1" resolver
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/ivys/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/jars/resolve-simple-1.2.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHaltOnMissing2
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-publish-multi.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// in this test case one artifact is available, and the other one is missing
comment|// since we use a transactional resolver, no file should be published at all
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/multi1-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"transactional"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setHaltonmissing
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"publish with haltonmissing and a missing artifact should raise an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuildException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"missing"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"multi2.jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should not have published the files with "transactional" resolver
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/transactional/apache/multi/1.2"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHaltOnMissing3
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-publish-multi.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// in this test case one artifact is available, and the other one is missing
comment|// this should be detected early and no file should be published at all
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/multi1-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setHaltonmissing
argument_list|(
literal|true
argument_list|)
expr_stmt|;
try|try
block|{
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"publish with haltonmissing and a missing artifact should raise an exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BuildException
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"missing"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"multi2.jar"
argument_list|)
argument_list|)
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should not have published the files with "transactional" resolver
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/multi"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPublishNotAllConfigs
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setConf
argument_list|(
literal|"compile"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/ivys/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/jars/resolve-simple-1.2.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have updated published ivy version
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/ivys/ivy-1.2.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1.2"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
comment|// should only contain the default configuration
name|String
index|[]
name|configs
init|=
name|md
operator|.
name|getConfigurationsNames
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Number of configurations not correct"
argument_list|,
literal|1
argument_list|,
name|configs
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Compile configuration not present"
argument_list|,
literal|"compile"
argument_list|,
name|configs
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultiPatterns
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-publish-multi.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/1/multi1-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|art
operator|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/2/multi2-1.2.jar"
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"build/test/publish/1/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"build/test/publish/2/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/1/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/multi/ivys/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/multi/jars/multi1-1.2.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/multi/jars/multi2-1.2.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPublishPublicConfigsByWildcard
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-publish-public.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setConf
argument_list|(
literal|"*(public)"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/publish-public-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|addArtifactspattern
argument_list|(
literal|"build/test/publish/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/publish-public/ivys/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/publish-public/jars/publish-public-1.2.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCustom
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-custom.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubdate
argument_list|(
literal|"20060906141243"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-custom-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have do the ivy delivering
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.2.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-custom/ivys/ivy-1.2.xml"
argument_list|)
decl_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
name|dest
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-custom/jars/resolve-custom-1.2.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have updated published ivy version
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|dest
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1.2"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have kept custom attributes
name|assertEquals
argument_list|(
literal|"cval1"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getAttribute
argument_list|(
literal|"custom-info"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cval2"
argument_list|,
name|md
operator|.
name|getConfiguration
argument_list|(
literal|"default"
argument_list|)
operator|.
name|getAttribute
argument_list|(
literal|"custom-conf"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cval3"
argument_list|,
name|md
operator|.
name|getDependencies
argument_list|()
index|[
literal|0
index|]
operator|.
name|getAttribute
argument_list|(
literal|"custom-dep"
argument_list|)
argument_list|)
expr_stmt|;
comment|// should respect the ivy file, with descriptions, ...
name|String
name|expected
init|=
name|FileUtil
operator|.
name|readEntirely
argument_list|(
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|IvyPublishTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"published-ivy-custom.xml"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|updated
init|=
name|FileUtil
operator|.
name|readEntirely
argument_list|(
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|dest
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|updated
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoDeliver
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.3"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setSrcivypattern
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-publish.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-latest-1.3.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/ivys/ivy-1.3.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/jars/resolve-latest-1.3.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// the published ivy version should be ok (ok in ivy-publish file)
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/ivys/ivy-1.3.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1.3"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
comment|// should not have done delivery (replace dynamic revisions with static ones)
name|assertEquals
argument_list|(
literal|"latest.integration"
argument_list|,
name|md
operator|.
name|getDependencies
argument_list|()
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoDeliverWithBranch
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setUpdate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.3"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setPubbranch
argument_list|(
literal|"BRANCH1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setSrcivypattern
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-publish.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-latest-1.3.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/ivys/ivy-1.3.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/jars/resolve-latest-1.3.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// the published ivy version should be ok (ok in ivy-publish file)
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/ivys/ivy-1.3.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BRANCH1"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getBranch
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.3"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
comment|// should not have done delivery (replace dynamic revisions with static ones)
name|assertEquals
argument_list|(
literal|"latest.integration"
argument_list|,
name|md
operator|.
name|getDependencies
argument_list|()
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testForceDeliver
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.3"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setSrcivypattern
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setForcedeliver
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-latest-1.3.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have published the files with "1" resolver
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/ivys/ivy-1.3.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/jars/resolve-latest-1.3.jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// should have updated published ivy version
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-latest/ivys/ivy-1.3.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"1.3"
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test must not publish ivy file with bad revision.      *      * @throws Exception      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|BuildException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testBadNoDeliver
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.3"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setSrcivypattern
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
expr_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
literal|"build/test/publish/ivy-1.3.xml"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-latest-1.3.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadonly
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Echo
name|echo
init|=
operator|new
name|Echo
argument_list|()
decl_stmt|;
name|echo
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setMessage
argument_list|(
literal|"new version"
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setFile
argument_list|(
name|art
argument_list|)
expr_stmt|;
name|echo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/jars/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|dest
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|echo
operator|=
operator|new
name|Echo
argument_list|()
expr_stmt|;
name|echo
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setMessage
argument_list|(
literal|"old version"
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setFile
argument_list|(
name|dest
argument_list|)
expr_stmt|;
name|echo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|dest
operator|.
name|setReadOnly
argument_list|()
expr_stmt|;
try|try
block|{
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"by default, publish should fail when a readonly artifact already exist"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|dest
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|dest
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"old version"
argument_list|,
name|reader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOverwrite
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Echo
name|echo
init|=
operator|new
name|Echo
argument_list|()
decl_stmt|;
name|echo
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setMessage
argument_list|(
literal|"new version"
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setFile
argument_list|(
name|art
argument_list|)
expr_stmt|;
name|echo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/jars/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|dest
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|echo
operator|=
operator|new
name|Echo
argument_list|()
expr_stmt|;
name|echo
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setMessage
argument_list|(
literal|"old version"
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setFile
argument_list|(
name|dest
argument_list|)
expr_stmt|;
name|echo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setOverwrite
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|dest
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|dest
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"new version"
argument_list|,
name|reader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOverwriteReadOnly
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|publish
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/publish/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Echo
name|echo
init|=
operator|new
name|Echo
argument_list|()
decl_stmt|;
name|echo
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setMessage
argument_list|(
literal|"new version"
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setFile
argument_list|(
name|art
argument_list|)
expr_stmt|;
name|echo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache/resolve-simple/jars/resolve-simple-1.2.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|dest
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|echo
operator|=
operator|new
name|Echo
argument_list|()
expr_stmt|;
name|echo
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setMessage
argument_list|(
literal|"old version"
argument_list|)
expr_stmt|;
name|echo
operator|.
name|setFile
argument_list|(
name|dest
argument_list|)
expr_stmt|;
name|echo
operator|.
name|execute
argument_list|()
expr_stmt|;
name|dest
operator|.
name|setReadOnly
argument_list|()
expr_stmt|;
name|publish
operator|.
name|setOverwrite
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|publish
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|dest
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|dest
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"new version"
argument_list|,
name|reader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

