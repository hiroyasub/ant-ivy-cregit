begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|TestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DependencyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|xml
operator|.
name|XmlModuleDescriptorParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|IvyDeliverTest
block|{
specifier|private
name|IvyDeliver
name|deliver
decl_stmt|;
specifier|private
name|Project
name|project
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|cleanTestDir
argument_list|()
expr_stmt|;
name|cleanRetrieveDir
argument_list|()
expr_stmt|;
name|cleanRep
argument_list|()
expr_stmt|;
name|TestHelper
operator|.
name|createCache
argument_list|()
expr_stmt|;
name|project
operator|=
name|TestHelper
operator|.
name|newProject
argument_list|()
expr_stmt|;
name|project
operator|.
name|init
argument_list|()
expr_stmt|;
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.settings.file"
argument_list|,
literal|"test/repositories/ivysettings.xml"
argument_list|)
expr_stmt|;
name|project
operator|.
name|setProperty
argument_list|(
literal|"build"
argument_list|,
literal|"build/test/deliver"
argument_list|)
expr_stmt|;
name|deliver
operator|=
operator|new
name|IvyDeliver
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"ivy.cache.dir"
argument_list|,
name|TestHelper
operator|.
name|cache
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|TestHelper
operator|.
name|cleanCache
argument_list|()
expr_stmt|;
name|cleanTestDir
argument_list|()
expr_stmt|;
name|cleanRetrieveDir
argument_list|()
expr_stmt|;
name|cleanRep
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|cleanTestDir
parameter_list|()
block|{
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|()
decl_stmt|;
name|del
operator|.
name|setProject
argument_list|(
operator|new
name|Project
argument_list|()
argument_list|)
expr_stmt|;
name|del
operator|.
name|setDir
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/deliver"
argument_list|)
argument_list|)
expr_stmt|;
name|del
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|cleanRetrieveDir
parameter_list|()
block|{
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|()
decl_stmt|;
name|del
operator|.
name|setProject
argument_list|(
operator|new
name|Project
argument_list|()
argument_list|)
expr_stmt|;
name|del
operator|.
name|setDir
argument_list|(
operator|new
name|File
argument_list|(
literal|"build/test/retrieve"
argument_list|)
argument_list|)
expr_stmt|;
name|del
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|cleanRep
parameter_list|()
block|{
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|()
decl_stmt|;
name|del
operator|.
name|setProject
argument_list|(
operator|new
name|Project
argument_list|()
argument_list|)
expr_stmt|;
name|del
operator|.
name|setDir
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/apache"
argument_list|)
argument_list|)
expr_stmt|;
name|del
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeParent
parameter_list|()
throws|throws
name|IOException
throws|,
name|ParseException
block|{
comment|// publish the parent descriptor first, so that it can be found while
comment|// we are reading the child descriptor.
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|IvyPublish
name|pubParent
init|=
operator|new
name|IvyPublish
argument_list|()
decl_stmt|;
name|pubParent
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setResolver
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|setPubrevision
argument_list|(
literal|"1.0"
argument_list|)
expr_stmt|;
name|File
name|art
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/resolve-simple-1.0.jar"
argument_list|)
decl_stmt|;
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/repositories/1/org1/mod1.1/jars/mod1.1-1.0.jar"
argument_list|)
argument_list|,
name|art
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|pubParent
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// resolve and deliver the child descriptor
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-extends-multiconf.xml"
argument_list|)
expr_stmt|;
name|res
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/merge/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have delivered the file to the specified destination
name|File
name|delivered
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/merge/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|delivered
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// do a text compare, since we want to test comments as well as structure.
comment|// we could do a better job of this with xmlunit
name|int
name|lineNo
init|=
literal|1
decl_stmt|;
name|BufferedReader
name|merged
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|delivered
argument_list|)
argument_list|)
decl_stmt|;
name|BufferedReader
name|expected
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"ivy-extends-merged.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
for|for
control|(
name|String
name|mergeLine
init|=
name|merged
operator|.
name|readLine
argument_list|()
init|,
name|expectedLine
init|=
name|expected
operator|.
name|readLine
argument_list|()
init|;
name|mergeLine
operator|!=
literal|null
operator|&&
name|expectedLine
operator|!=
literal|null
condition|;
name|mergeLine
operator|=
name|merged
operator|.
name|readLine
argument_list|()
operator|,
name|expectedLine
operator|=
name|expected
operator|.
name|readLine
argument_list|()
control|)
block|{
name|mergeLine
operator|=
name|mergeLine
operator|.
name|trim
argument_list|()
expr_stmt|;
name|expectedLine
operator|=
name|expectedLine
operator|.
name|trim
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|mergeLine
operator|.
name|startsWith
argument_list|(
literal|"<info"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|"published descriptor matches at line["
operator|+
name|lineNo
operator|+
literal|"]"
argument_list|,
name|expectedLine
operator|.
name|trim
argument_list|()
argument_list|,
name|mergeLine
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
operator|++
name|lineNo
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|merged
operator|.
name|close
argument_list|()
expr_stmt|;
name|expected
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"latest.integration"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDynamicConstraintDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotGenerateRevConstraint
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setGenerateRevConstraint
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDynamicConstraintDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithResolveId
parameter_list|()
throws|throws
name|Exception
block|{
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// resolve another ivy file
name|resolve
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-simple"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithResolveIdInAnotherBuild
parameter_list|()
throws|throws
name|Exception
block|{
comment|// create a new build
name|Project
name|other
init|=
name|TestHelper
operator|.
name|newProject
argument_list|()
decl_stmt|;
name|other
operator|.
name|setProperty
argument_list|(
literal|"ivy.settings.file"
argument_list|,
literal|"test/repositories/ivysettings.xml"
argument_list|)
expr_stmt|;
name|other
operator|.
name|setProperty
argument_list|(
literal|"build"
argument_list|,
literal|"build/test/deliver"
argument_list|)
expr_stmt|;
comment|// do a resolve in the new build
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// resolve another ivy file
name|resolve
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-simple"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReplaceBranchInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setPubbranch
argument_list|(
literal|"BRANCH1"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"BRANCH1"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithBranch
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test case for IVY-404
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest-branch.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"TRUNK"
argument_list|,
literal|"2.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReplaceBranch
parameter_list|()
throws|throws
name|Exception
block|{
name|IvyConfigure
name|settings
init|=
operator|new
name|IvyConfigure
argument_list|()
decl_stmt|;
name|settings
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|settings
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// change the default branch to use
name|IvyAntSettings
operator|.
name|getDefaultInstance
argument_list|(
name|settings
argument_list|)
operator|.
name|getConfiguredIvyInstance
argument_list|(
name|settings
argument_list|)
operator|.
name|getSettings
argument_list|()
operator|.
name|setDefaultBranch
argument_list|(
literal|"BRANCH1"
argument_list|)
expr_stmt|;
comment|// resolve a module dependencies
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// deliver this module
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering, including setting the branch according to the
comment|// configured default
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"BRANCH1"
argument_list|,
literal|"2.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"latest.integration"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDynamicConstraintDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithExtraAttributes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test case for IVY-415
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest-extra.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|Map
name|extraAtt
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|extraAtt
operator|.
name|put
argument_list|(
literal|"myExtraAtt"
argument_list|,
literal|"myValue"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|,
name|extraAtt
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithDynEvicted
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-dyn-evicted.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|IvyRetrieve
name|ret
init|=
operator|new
name|IvyRetrieve
argument_list|()
decl_stmt|;
name|ret
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setPattern
argument_list|(
literal|"build/test/retrieve/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|ret
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|list
init|=
operator|new
name|File
argument_list|(
literal|"build/test/retrieve"
argument_list|)
decl_stmt|;
name|String
index|[]
name|files
init|=
name|list
operator|.
name|list
argument_list|()
decl_stmt|;
name|HashSet
name|actualFileSet
init|=
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|files
argument_list|)
argument_list|)
decl_stmt|;
name|HashSet
name|expectedFileSet
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
for|for
control|(
name|DependencyDescriptor
name|dd
range|:
name|dds
control|)
block|{
name|String
name|name
init|=
name|dd
operator|.
name|getDependencyId
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|rev
init|=
name|dd
operator|.
name|getDependencyRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
decl_stmt|;
name|String
name|ext
init|=
literal|"jar"
decl_stmt|;
name|String
name|artifact
init|=
name|name
operator|+
literal|"-"
operator|+
name|rev
operator|+
literal|"."
operator|+
name|ext
decl_stmt|;
name|expectedFileSet
operator|.
name|add
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"Delivered Ivy descriptor inconsistent with retrieved artifacts"
argument_list|,
name|expectedFileSet
argument_list|,
name|actualFileSet
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithDynEvicted2
parameter_list|()
throws|throws
name|Exception
block|{
comment|// same as previous but dynamic dependency is placed after the one causing the conflict
comment|// test case for IVY-707
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-dyn-evicted2.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|)
argument_list|,
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|IvyRetrieve
name|ret
init|=
operator|new
name|IvyRetrieve
argument_list|()
decl_stmt|;
name|ret
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setPattern
argument_list|(
literal|"build/test/retrieve/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|ret
operator|.
name|execute
argument_list|()
expr_stmt|;
name|File
name|list
init|=
operator|new
name|File
argument_list|(
literal|"build/test/retrieve"
argument_list|)
decl_stmt|;
name|String
index|[]
name|files
init|=
name|list
operator|.
name|list
argument_list|()
decl_stmt|;
name|HashSet
name|actualFileSet
init|=
operator|new
name|HashSet
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|files
argument_list|)
argument_list|)
decl_stmt|;
name|HashSet
name|expectedFileSet
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
for|for
control|(
name|DependencyDescriptor
name|dd
range|:
name|dds
control|)
block|{
name|String
name|name
init|=
name|dd
operator|.
name|getDependencyId
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|rev
init|=
name|dd
operator|.
name|getDependencyRevisionId
argument_list|()
operator|.
name|getRevision
argument_list|()
decl_stmt|;
name|String
name|ext
init|=
literal|"jar"
decl_stmt|;
name|String
name|artifact
init|=
name|name
operator|+
literal|"-"
operator|+
name|rev
operator|+
literal|"."
operator|+
name|ext
decl_stmt|;
name|expectedFileSet
operator|.
name|add
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|"Delivered Ivy descriptor inconsistent with retrieved artifacts"
argument_list|,
name|expectedFileSet
argument_list|,
name|actualFileSet
argument_list|)
expr_stmt|;
name|list
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReplaceImportedConfigurations
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-import-confs.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|deliveredFileContent
init|=
name|FileUtil
operator|.
name|readEntirely
argument_list|(
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|deliveredIvyFile
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"import not replaced: import can still be found in file"
argument_list|,
operator|!
name|deliveredFileContent
operator|.
name|contains
argument_list|(
literal|"import"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"import not replaced: conf1 cannot be found in file"
argument_list|,
name|deliveredFileContent
operator|.
name|contains
argument_list|(
literal|"conf1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReplaceVariables
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-with-variables.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|res
operator|.
name|getIvyInstance
argument_list|()
operator|.
name|getSettings
argument_list|()
operator|.
name|setVariable
argument_list|(
literal|"myvar"
argument_list|,
literal|"myvalue"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|deliveredFileContent
init|=
name|FileUtil
operator|.
name|readEntirely
argument_list|(
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|deliveredIvyFile
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"variable not replaced: myvar can still be found in file"
argument_list|,
operator|!
name|deliveredFileContent
operator|.
name|contains
argument_list|(
literal|"myvar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"variable not replaced: myvalue cannot be found in file"
argument_list|,
name|deliveredFileContent
operator|.
name|contains
argument_list|(
literal|"myvalue"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoReplaceDynamicRev
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setReplacedynamicrev
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"resolve-latest"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"latest.integration"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDifferentRevisionsForSameModule
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-different-revisions.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|res
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|res
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|res
operator|.
name|execute
argument_list|()
expr_stmt|;
name|deliver
operator|.
name|setPubrevision
argument_list|(
literal|"1.2"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|setDeliverpattern
argument_list|(
literal|"build/test/deliver/ivy-[revision].xml"
argument_list|)
expr_stmt|;
name|deliver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// should have done the ivy delivering
name|File
name|deliveredIvyFile
init|=
operator|new
name|File
argument_list|(
literal|"build/test/deliver/ivy-1.2.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|deliveredIvyFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ModuleDescriptor
name|md
init|=
name|XmlModuleDescriptorParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|deliveredIvyFile
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"apache"
argument_list|,
literal|"different-revs"
argument_list|,
literal|"1.2"
argument_list|)
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|dds
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|)
argument_list|,
name|dds
index|[
literal|0
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.1"
argument_list|,
literal|"1.0"
argument_list|)
argument_list|,
name|dds
index|[
literal|1
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"1.1"
argument_list|)
argument_list|,
name|dds
index|[
literal|2
index|]
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

