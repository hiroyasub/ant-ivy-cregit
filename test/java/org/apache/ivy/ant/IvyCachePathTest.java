begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|TestHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|types
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|IvyCachePathTest
block|{
specifier|private
name|IvyCachePath
name|path
decl_stmt|;
specifier|private
name|Project
name|project
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|TestHelper
operator|.
name|createCache
argument_list|()
expr_stmt|;
name|project
operator|=
name|TestHelper
operator|.
name|newProject
argument_list|()
expr_stmt|;
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.settings.file"
argument_list|,
literal|"test/repositories/ivysettings.xml"
argument_list|)
expr_stmt|;
name|path
operator|=
operator|new
name|IvyCachePath
argument_list|()
expr_stmt|;
name|path
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"ivy.cache.dir"
argument_list|,
name|TestHelper
operator|.
name|cache
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|TestHelper
operator|.
name|cleanCache
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"simple-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"simple-pathid"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getArchiveFileInCache
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInline1
parameter_list|()
throws|throws
name|Exception
block|{
comment|// we first resolve another ivy file
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|getArchiveFileInCache
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
comment|// then we resolve a dependency directly
name|path
operator|.
name|setOrganisation
argument_list|(
literal|"org1"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setModule
argument_list|(
literal|"mod1.2"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setRevision
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setInline
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"simple-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"simple-pathid"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getArchiveFileInCache
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInline2
parameter_list|()
throws|throws
name|Exception
block|{
comment|// we first resolve a dependency directly
name|path
operator|.
name|setOrganisation
argument_list|(
literal|"org1"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setModule
argument_list|(
literal|"mod1.2"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setRevision
argument_list|(
literal|"2.0"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setInline
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"simple-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"simple-pathid"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getArchiveFileInCache
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
comment|// we then resolve another ivy file
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|getArchiveFileInCache
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.2"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyConf
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-108.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"emptyconf-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setConf
argument_list|(
literal|"empty"
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"emptyconf-pathid"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test must fail with default haltonfailure setting.      *      * @throws Exception if something goes wrong      */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|BuildException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testFailure
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-failure.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"failure-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHaltOnFailure
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-failure.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"haltfailure-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setHaltonfailure
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithResolveId
parameter_list|()
throws|throws
name|Exception
block|{
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// resolve another ivy file
name|resolve
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
name|path
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"withresolveid-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"withresolveid-pathid"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getArchiveFileInCache
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithResolveIdWithoutResolve
parameter_list|()
throws|throws
name|Exception
block|{
name|Project
name|otherProject
init|=
name|TestHelper
operator|.
name|newProject
argument_list|()
decl_stmt|;
name|otherProject
operator|.
name|setProperty
argument_list|(
literal|"ivy.settings.file"
argument_list|,
literal|"test/repositories/ivysettings.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|otherProject
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// resolve another ivy file
name|resolve
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
name|path
operator|.
name|setResolveId
argument_list|(
literal|"withResolveId"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"withresolveid-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-simple.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"withresolveid-pathid"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|getArchiveFileInCache
argument_list|(
literal|"org1"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"2.0"
argument_list|,
literal|"mod1.2"
argument_list|,
literal|"jar"
argument_list|,
literal|"jar"
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWithResolveIdAndMissingConfs
parameter_list|()
throws|throws
name|Exception
block|{
name|Project
name|otherProject
init|=
name|TestHelper
operator|.
name|newProject
argument_list|()
decl_stmt|;
name|otherProject
operator|.
name|setProperty
argument_list|(
literal|"ivy.settings.file"
argument_list|,
literal|"test/repositories/ivysettings.xml"
argument_list|)
expr_stmt|;
name|IvyResolve
name|resolve
init|=
operator|new
name|IvyResolve
argument_list|()
decl_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|otherProject
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setResolveId
argument_list|(
literal|"testWithResolveIdAndMissingConfs"
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setConf
argument_list|(
literal|"default"
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|// resolve another ivy file
name|resolve
operator|=
operator|new
name|IvyResolve
argument_list|()
expr_stmt|;
name|resolve
operator|.
name|setProject
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-latest.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|resolve
operator|.
name|execute
argument_list|()
expr_stmt|;
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setResolveId
argument_list|(
literal|"testWithResolveIdAndMissingConfs"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"withresolveid-pathid"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setConf
argument_list|(
literal|"default,compile"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setFile
argument_list|(
operator|new
name|File
argument_list|(
literal|"test/java/org/apache/ivy/ant/ivy-multiconf.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUnpack
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/repositories/1/packaging/module1/ivys/ivy-1.0.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"testUnpack"
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"testUnpack"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOSGi
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/repositories/1/packaging/module5/ivys/ivy-1.0.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"testOSGi"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setOsgi
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"testOSGi"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cacheDir
init|=
name|path
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultRepositoryCacheBasedir
argument_list|()
decl_stmt|;
name|File
name|unpacked
init|=
operator|new
name|File
argument_list|(
name|cacheDir
argument_list|,
literal|"packaging/module3/jar_unpackeds/module3-1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-antlr.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-apache-bcel.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-apache-bsf.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-apache-log4j.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOSGi2
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/repositories/1/packaging/module6/ivys/ivy-1.0.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"testOSGi"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setOsgi
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"testOSGi"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cacheDir
init|=
name|path
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultRepositoryCacheBasedir
argument_list|()
decl_stmt|;
name|File
name|unpacked
init|=
operator|new
name|File
argument_list|(
name|cacheDir
argument_list|,
literal|"packaging/module4/jar_unpackeds/module4-1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|unpacked
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPackedOSGi
parameter_list|()
throws|throws
name|Exception
block|{
name|project
operator|.
name|setProperty
argument_list|(
literal|"ivy.dep.file"
argument_list|,
literal|"test/repositories/1/packaging/module8/ivys/ivy-1.0.xml"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setPathid
argument_list|(
literal|"testOSGi"
argument_list|)
expr_stmt|;
name|path
operator|.
name|setOsgi
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|path
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Object
name|ref
init|=
name|project
operator|.
name|getReference
argument_list|(
literal|"testOSGi"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|ref
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ref
operator|instanceof
name|Path
argument_list|)
expr_stmt|;
name|Path
name|p
init|=
operator|(
name|Path
operator|)
name|ref
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|p
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|File
name|cacheDir
init|=
name|path
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultRepositoryCacheBasedir
argument_list|()
decl_stmt|;
name|File
name|unpacked
init|=
operator|new
name|File
argument_list|(
name|cacheDir
argument_list|,
literal|"packaging/module7/jar_unpackeds/module7-1.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-antlr.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-apache-bcel.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-apache-bsf.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|File
argument_list|(
name|unpacked
argument_list|,
literal|"lib/ant-apache-log4j.jar"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|p
operator|.
name|list
argument_list|()
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|File
name|getArchiveFileInCache
parameter_list|(
name|String
name|organisation
parameter_list|,
name|String
name|module
parameter_list|,
name|String
name|revision
parameter_list|,
name|String
name|artifact
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|ext
parameter_list|)
block|{
return|return
name|TestHelper
operator|.
name|getArchiveFileInCache
argument_list|(
name|path
operator|.
name|getIvyInstance
argument_list|()
argument_list|,
name|organisation
argument_list|,
name|module
argument_list|,
name|revision
argument_list|,
name|artifact
argument_list|,
name|type
argument_list|,
name|ext
argument_list|)
return|;
block|}
block|}
end_class

end_unit

