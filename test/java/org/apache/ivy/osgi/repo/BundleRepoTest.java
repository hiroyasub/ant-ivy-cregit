begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|repo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|TransformerConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXTransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|TransformerHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|core
operator|.
name|ExecutionEnvironmentProfileProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|obr
operator|.
name|xml
operator|.
name|OBRXMLParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|obr
operator|.
name|xml
operator|.
name|OBRXMLWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|repository
operator|.
name|file
operator|.
name|FileRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|FileSystemResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|BundleRepoTest
extends|extends
name|TestCase
block|{
specifier|private
name|File
name|bundlerepo
init|=
operator|new
name|File
argument_list|(
literal|"test/test-repo/bundlerepo"
argument_list|)
decl_stmt|;
specifier|private
name|File
name|ivyrepo
init|=
operator|new
name|File
argument_list|(
literal|"test/test-repo/ivyrepo"
argument_list|)
decl_stmt|;
specifier|public
name|void
name|testFS
parameter_list|()
throws|throws
name|Exception
block|{
name|FSManifestIterable
name|it
init|=
operator|new
name|FSManifestIterable
argument_list|(
name|bundlerepo
argument_list|)
decl_stmt|;
name|BundleRepoDescriptor
name|repo
init|=
operator|new
name|BundleRepoDescriptor
argument_list|(
name|bundlerepo
operator|.
name|toURI
argument_list|()
argument_list|,
name|ExecutionEnvironmentProfileProvider
operator|.
name|getInstance
argument_list|()
argument_list|)
decl_stmt|;
name|repo
operator|.
name|populate
argument_list|(
name|it
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|BundleRepoDescriptor
name|repo2
init|=
name|OBRXMLParser
operator|.
name|parse
argument_list|(
name|bundlerepo
operator|.
name|toURI
argument_list|()
argument_list|,
operator|new
name|FileInputStream
argument_list|(
operator|new
name|File
argument_list|(
name|bundlerepo
argument_list|,
literal|"repo.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|repo
argument_list|,
name|repo2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFileRepo
parameter_list|()
throws|throws
name|Exception
block|{
name|RepositoryManifestIterable
name|it
init|=
operator|new
name|RepositoryManifestIterable
argument_list|(
operator|new
name|FileRepository
argument_list|(
name|bundlerepo
operator|.
name|getAbsoluteFile
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|BundleRepoDescriptor
name|repo
init|=
operator|new
name|BundleRepoDescriptor
argument_list|(
name|bundlerepo
operator|.
name|toURI
argument_list|()
argument_list|,
name|ExecutionEnvironmentProfileProvider
operator|.
name|getInstance
argument_list|()
argument_list|)
decl_stmt|;
name|repo
operator|.
name|populate
argument_list|(
name|it
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|BundleRepoDescriptor
name|repo2
init|=
name|OBRXMLParser
operator|.
name|parse
argument_list|(
name|bundlerepo
operator|.
name|toURI
argument_list|()
argument_list|,
operator|new
name|FileInputStream
argument_list|(
operator|new
name|File
argument_list|(
name|bundlerepo
argument_list|,
literal|"repo.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|repo
argument_list|,
name|repo2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testResolver
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystemResolver
name|fileSystemResolver
init|=
operator|new
name|FileSystemResolver
argument_list|()
decl_stmt|;
name|fileSystemResolver
operator|.
name|setName
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|fileSystemResolver
operator|.
name|addIvyPattern
argument_list|(
name|ivyrepo
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"/[organisation]/[module]/[revision]/ivy.xml"
argument_list|)
expr_stmt|;
name|fileSystemResolver
operator|.
name|addArtifactPattern
argument_list|(
name|ivyrepo
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"/[organisation]/[module]/[revision]/[type]s/[artifact]-[revision].[ext]"
argument_list|)
expr_stmt|;
name|fileSystemResolver
operator|.
name|setSettings
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|)
expr_stmt|;
name|ResolverManifestIterable
name|it
init|=
operator|new
name|ResolverManifestIterable
argument_list|(
name|fileSystemResolver
argument_list|)
decl_stmt|;
name|BundleRepoDescriptor
name|repo
init|=
operator|new
name|BundleRepoDescriptor
argument_list|(
name|ivyrepo
operator|.
name|toURI
argument_list|()
argument_list|,
name|ExecutionEnvironmentProfileProvider
operator|.
name|getInstance
argument_list|()
argument_list|)
decl_stmt|;
name|repo
operator|.
name|populate
argument_list|(
name|it
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|BundleRepoDescriptor
name|repo2
init|=
name|OBRXMLParser
operator|.
name|parse
argument_list|(
name|ivyrepo
operator|.
name|toURI
argument_list|()
argument_list|,
operator|new
name|FileInputStream
argument_list|(
operator|new
name|File
argument_list|(
name|ivyrepo
argument_list|,
literal|"repo.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|repo
argument_list|,
name|repo2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testXMLSerialisation
parameter_list|()
throws|throws
name|SAXException
throws|,
name|ParseException
throws|,
name|IOException
block|{
name|FSManifestIterable
name|it
init|=
operator|new
name|FSManifestIterable
argument_list|(
name|bundlerepo
argument_list|)
decl_stmt|;
name|BundleRepoDescriptor
name|repo
init|=
operator|new
name|BundleRepoDescriptor
argument_list|(
name|bundlerepo
operator|.
name|toURI
argument_list|()
argument_list|,
name|ExecutionEnvironmentProfileProvider
operator|.
name|getInstance
argument_list|()
argument_list|)
decl_stmt|;
name|repo
operator|.
name|populate
argument_list|(
name|it
operator|.
name|iterator
argument_list|()
argument_list|)
expr_stmt|;
name|SAXTransformerFactory
name|tf
init|=
operator|(
name|SAXTransformerFactory
operator|)
name|SAXTransformerFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|TransformerHandler
name|hd
decl_stmt|;
try|try
block|{
name|hd
operator|=
name|tf
operator|.
name|newTransformerHandler
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TransformerConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|BuildException
argument_list|(
literal|"Sax configuration error: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|StreamResult
name|stream
init|=
operator|new
name|StreamResult
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|hd
operator|.
name|setResult
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|OBRXMLWriter
operator|.
name|writeManifests
argument_list|(
name|it
operator|.
name|iterator
argument_list|()
argument_list|,
name|hd
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|in
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|BundleRepoDescriptor
name|repo2
init|=
name|OBRXMLParser
operator|.
name|parse
argument_list|(
name|bundlerepo
operator|.
name|toURI
argument_list|()
argument_list|,
name|in
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|repo
argument_list|,
name|repo2
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

