begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|ivy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DefaultArtifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DependencyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|AbstractModuleDescriptorParserTester
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|parser
operator|.
name|xml
operator|.
name|XmlModuleDescriptorParserTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|repository
operator|.
name|url
operator|.
name|URLResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|FileUtil
import|;
end_import

begin_class
specifier|public
class|class
name|OsgiManifestParserTest
extends|extends
name|AbstractModuleDescriptorParserTester
block|{
specifier|private
name|URL
name|getTestResource
parameter_list|(
name|String
name|resource
parameter_list|)
throws|throws
name|MalformedURLException
block|{
return|return
operator|new
name|File
argument_list|(
literal|"test/test-ivy/"
operator|+
name|resource
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
return|;
block|}
specifier|public
name|void
name|testAccept
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|OsgiManifestParser
operator|.
name|getInstance
argument_list|()
operator|.
name|accept
argument_list|(
operator|new
name|URLResource
argument_list|(
name|getTestResource
argument_list|(
literal|"osgi/eclipse/plugins/test-simple/META-INF/MANIFEST.MF"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|OsgiManifestParser
operator|.
name|getInstance
argument_list|()
operator|.
name|accept
argument_list|(
operator|new
name|URLResource
argument_list|(
name|XmlModuleDescriptorParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"test.xml"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSimple
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ModuleDescriptor
name|md
init|=
name|OsgiManifestParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|getTestResource
argument_list|(
literal|"osgi/eclipse/plugins/test-simple/META-INF/MANIFEST.MF"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertSimpleModuleDescriptor
argument_list|(
name|md
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSimpleFromJar
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ModuleDescriptor
name|md
init|=
name|OsgiManifestParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|getTestResource
argument_list|(
literal|"test-simple.jar"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertSimpleModuleDescriptor
argument_list|(
name|md
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFull
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ModuleDescriptor
name|md
init|=
name|OsgiManifestParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|getTestResource
argument_list|(
literal|"osgi/eclipse/plugins/test-full/META-INF/MANIFEST.MF"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertSimpleModuleDescriptor
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertDependencies
argument_list|(
name|md
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFullFromJar
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ModuleDescriptor
name|md
init|=
name|OsgiManifestParser
operator|.
name|getInstance
argument_list|()
operator|.
name|parseDescriptor
argument_list|(
operator|new
name|IvySettings
argument_list|()
argument_list|,
name|getTestResource
argument_list|(
literal|"test-full.jar"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertSimpleModuleDescriptor
argument_list|(
name|md
argument_list|)
expr_stmt|;
name|assertDependencies
argument_list|(
name|md
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJB
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ModuleRevisionId
name|mrid
init|=
operator|new
name|ModuleRevisionId
argument_list|(
operator|new
name|ModuleId
argument_list|(
literal|"org"
argument_list|,
literal|"name"
argument_list|)
argument_list|,
literal|"revisionId"
argument_list|)
decl_stmt|;
specifier|final
name|Artifact
name|artifact
init|=
operator|new
name|DefaultArtifact
argument_list|(
name|mrid
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|,
literal|"META-INF/MANIFEST"
argument_list|,
literal|"manifest"
argument_list|,
literal|"MF"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertSimpleModuleDescriptor
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|ModuleRevisionId
name|mrid
init|=
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"datatools.connectivity.ui"
argument_list|,
literal|"1.0.1.200708231"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|md
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|md
operator|.
name|getConfigurations
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|md
operator|.
name|getConfigurations
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|md
operator|.
name|getConfiguration
argument_list|(
literal|"default"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|md
operator|.
name|getAllArtifacts
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|md
operator|.
name|getAllArtifacts
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
specifier|final
name|Artifact
index|[]
name|artifact
init|=
name|md
operator|.
name|getArtifacts
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artifact
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mrid
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getModuleRevisionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.eclipse.datatools.connectivity.ui"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getExt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jar"
argument_list|,
name|artifact
index|[
literal|0
index|]
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertDependencies
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|DependencyDescriptor
index|[]
name|dds
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|dds
argument_list|)
expr_stmt|;
name|Set
comment|/*<ModuleRevisionId> */
name|actual
init|=
operator|new
name|HashSet
comment|/*<ModuleRevisionId> */
argument_list|()
decl_stmt|;
name|DependencyDescriptor
index|[]
name|deps
init|=
name|md
operator|.
name|getDependencies
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|deps
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|DependencyDescriptor
name|dd
init|=
name|deps
index|[
name|i
index|]
decl_stmt|;
name|actual
operator|.
name|add
argument_list|(
name|dd
operator|.
name|getDependencyRevisionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Set
comment|/*<ModuleRevisionId> */
name|expected
init|=
operator|new
name|HashSet
comment|/*<ModuleRevisionId> */
argument_list|()
decl_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"core.runtime"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"core.resources"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"ui"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"ui.views"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"datatools.connectivity"
argument_list|,
literal|"[0.9.1,1.5.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"ui.navigator"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"core.expressions"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"com.ibm"
argument_list|,
literal|"icu"
argument_list|,
literal|"[3.4.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"ltk.core.refactoring"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"datatools.help"
argument_list|,
literal|"[1.0.0,2.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"help"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|.
name|add
argument_list|(
name|ModuleRevisionId
operator|.
name|newInstance
argument_list|(
literal|"org.eclipse"
argument_list|,
literal|"help.base"
argument_list|,
literal|"[3.2.0,4.0.0)"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|readEntirely
parameter_list|(
name|String
name|resource
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|FileUtil
operator|.
name|readEntirely
argument_list|(
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|ClassLoader
operator|.
name|getSystemResource
argument_list|(
name|resource
argument_list|)
operator|.
name|openStream
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

