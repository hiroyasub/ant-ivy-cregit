begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|filter
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|filter
operator|.
name|CompareFilter
operator|.
name|Operator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|OSGiFilterTest
block|{
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ParseException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testParserFailureNoParens
parameter_list|()
throws|throws
name|ParseException
block|{
name|OSGiFilterParser
operator|.
name|parse
argument_list|(
literal|"c>2"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ParseException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testParserFailureEmpty
parameter_list|()
throws|throws
name|ParseException
block|{
name|OSGiFilterParser
operator|.
name|parse
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ParseException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testParserFailureSingleParens
parameter_list|()
throws|throws
name|ParseException
block|{
name|OSGiFilterParser
operator|.
name|parse
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParser
parameter_list|()
throws|throws
name|Exception
block|{
name|OSGiFilter
name|cgt2
init|=
operator|new
name|CompareFilter
argument_list|(
literal|"c"
argument_list|,
name|Operator
operator|.
name|GREATER_THAN
argument_list|,
literal|"2"
argument_list|)
decl_stmt|;
name|checkParse
argument_list|(
name|cgt2
argument_list|,
literal|"(c>2)"
argument_list|)
expr_stmt|;
name|OSGiFilter
name|twoeqd
init|=
operator|new
name|CompareFilter
argument_list|(
literal|"2"
argument_list|,
name|Operator
operator|.
name|EQUALS
argument_list|,
literal|"d"
argument_list|)
decl_stmt|;
name|checkParse
argument_list|(
name|twoeqd
argument_list|,
literal|"(2=d)"
argument_list|)
expr_stmt|;
name|OSGiFilter
name|foodotbarge0dot0
init|=
operator|new
name|CompareFilter
argument_list|(
literal|"foo.bar"
argument_list|,
name|Operator
operator|.
name|GREATER_OR_EQUAL
argument_list|,
literal|"0.0"
argument_list|)
decl_stmt|;
name|checkParse
argument_list|(
name|foodotbarge0dot0
argument_list|,
literal|"(foo.bar>=0.0)"
argument_list|)
expr_stmt|;
name|OSGiFilter
name|and
init|=
operator|new
name|AndFilter
argument_list|(
operator|new
name|OSGiFilter
index|[]
block|{
name|foodotbarge0dot0
block|}
argument_list|)
decl_stmt|;
name|checkParse
argument_list|(
name|and
argument_list|,
literal|"(&(foo.bar>=0.0))"
argument_list|)
expr_stmt|;
name|OSGiFilter
name|and2
init|=
operator|new
name|AndFilter
argument_list|(
operator|new
name|OSGiFilter
index|[]
block|{
name|cgt2
block|,
name|twoeqd
block|,
name|foodotbarge0dot0
block|}
argument_list|)
decl_stmt|;
name|checkParse
argument_list|(
name|and2
argument_list|,
literal|"(&(c>2)(2=d)(foo.bar>=0.0))"
argument_list|)
expr_stmt|;
name|OSGiFilter
name|spaceAfterAnd
init|=
operator|new
name|AndFilter
argument_list|(
operator|new
name|OSGiFilter
index|[]
block|{
name|twoeqd
block|}
argument_list|)
decl_stmt|;
name|checkParse
argument_list|(
name|spaceAfterAnd
argument_list|,
literal|"(& (2=d))"
argument_list|)
expr_stmt|;
name|OSGiFilter
name|version350
init|=
operator|new
name|CompareFilter
argument_list|(
literal|"version"
argument_list|,
name|Operator
operator|.
name|GREATER_OR_EQUAL
argument_list|,
literal|"3.5.0"
argument_list|)
decl_stmt|;
name|OSGiFilter
name|version400
init|=
operator|new
name|CompareFilter
argument_list|(
literal|"version"
argument_list|,
name|Operator
operator|.
name|GREATER_OR_EQUAL
argument_list|,
literal|"4.0.0"
argument_list|)
decl_stmt|;
name|OSGiFilter
name|notVersion400
init|=
operator|new
name|NotFilter
argument_list|(
name|version400
argument_list|)
decl_stmt|;
name|OSGiFilter
name|bundle
init|=
operator|new
name|CompareFilter
argument_list|(
literal|"bundle"
argument_list|,
name|Operator
operator|.
name|EQUALS
argument_list|,
literal|"org.eclipse.core.runtime"
argument_list|)
decl_stmt|;
name|OSGiFilter
name|andEverythingWithSpace
init|=
operator|new
name|AndFilter
argument_list|(
operator|new
name|OSGiFilter
index|[]
block|{
name|version350
block|,
name|notVersion400
block|,
name|bundle
block|}
argument_list|)
decl_stmt|;
name|checkParse
argument_list|(
name|andEverythingWithSpace
argument_list|,
literal|"(&     (version>=3.5.0)     (!(version>=4.0.0))     (bundle=org.eclipse.core.runtime)    )"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkParse
parameter_list|(
name|OSGiFilter
name|expected
parameter_list|,
name|String
name|toParse
parameter_list|)
throws|throws
name|ParseException
block|{
name|OSGiFilter
name|parsed
init|=
name|OSGiFilterParser
operator|.
name|parse
argument_list|(
name|toParse
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|parsed
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

