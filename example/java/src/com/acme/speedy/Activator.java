begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|com
operator|.
name|acme
operator|.
name|speedy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_class
specifier|public
class|class
name|Activator
implements|implements
name|BundleActivator
block|{
specifier|private
name|ServiceTracker
name|simpleLogServiceTracker
decl_stmt|;
specifier|private
name|SimpleLogService
name|simpleLogService
decl_stmt|;
comment|/* 	 * (non-Javadoc) 	 * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext) 	 */
specifier|public
name|void
name|start
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
comment|// register the service
name|context
operator|.
name|registerService
argument_list|(
name|SimpleLogService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|SimpleLogServiceImpl
argument_list|()
argument_list|,
operator|new
name|Hashtable
argument_list|()
argument_list|)
expr_stmt|;
comment|// create a tracker and track the log service
name|simpleLogServiceTracker
operator|=
operator|new
name|ServiceTracker
argument_list|(
name|context
argument_list|,
name|SimpleLogService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|simpleLogServiceTracker
operator|.
name|open
argument_list|()
expr_stmt|;
comment|// grab the service
name|simpleLogService
operator|=
operator|(
name|SimpleLogService
operator|)
name|simpleLogServiceTracker
operator|.
name|getService
argument_list|()
expr_stmt|;
if|if
condition|(
name|simpleLogService
operator|!=
literal|null
condition|)
name|simpleLogService
operator|.
name|log
argument_list|(
literal|"Andale! Andale! Arriba! Arriba! Yii-hah!"
argument_list|)
expr_stmt|;
block|}
comment|/* 	 * (non-Javadoc) 	 * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext) 	 */
specifier|public
name|void
name|stop
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|simpleLogService
operator|!=
literal|null
condition|)
name|simpleLogService
operator|.
name|log
argument_list|(
literal|"Gracias, Adios! Hasta la vista! YEE-HEE!!!"
argument_list|)
expr_stmt|;
comment|// close the service tracker
name|simpleLogServiceTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|simpleLogServiceTracker
operator|=
literal|null
expr_stmt|;
name|simpleLogService
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

