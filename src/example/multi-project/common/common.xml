<project name="common" 
         xmlns:ivy="antlib:fr.jayasoft.ivy.ant">

	  <property file="${common.dir}/build.properties"/>

    <path id="lib.path.id">
        <fileset dir="${lib.dir}" />
    </path>
    <path id="run.path.id">
        <path refid="lib.path.id" />
        <path location="${classes.dir}" />
    </path>

    <target name="configure">
        <ivy:configure file="${common.dir}/ivyconf.xml" />
    </target>
	
    <!-- ================================= 
          target: resolve              
         ================================= -->
    <target name="resolve" depends="configure, clean-lib" description="--> retrieve dependencies with ivy">
        <mkdir dir="${lib.dir}"/> <!-- not usually necessary, ivy creates the directory IF there are dependencies -->
        <ivy:retrieve />
    </target>
    
    <!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.dir}"/>
    </target>
    
    <!-- ================================= 
          target: compile              
         ================================= -->
    <target name="compile" depends="resolve" description="--> compile the project">
        <mkdir dir="${classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="lib.path.id" debug="true" />
    </target>
    
    <!-- ================================= 
          target: run
         ================================= -->
    <target name="run" depends="version, compile" description="--> compile and run the project">
        <java classpathref="run.path.id" classname="${main.class.name}"/>
    </target>
    
    <target name="new-version">
        <propertyfile file="${basedir}/version.properties">
	        <entry  key="version" type="int" operation="+" default="0" />
		    </propertyfile>
    </target>

    <target name="version">
        <mkdir dir="${classes.dir}"/>
		    <copy file="${basedir}/version.properties" tofile="${classes.dir}/${ant.project.name}.properties" overwrite="true" />
        <property file="${classes.dir}/${ant.project.name}.properties" />
    </target>

    <!-- ================================= 
          target: jar              
         ================================= -->
    <target name="jar" depends="version, compile" description="--> make a jar file for this project">
        <jar destfile="${jar.file}">
            <fileset dir="${classes.dir}" />
        </jar>
    </target>

    <!-- ================================= 
          target: publish              
         ================================= -->
    <target name="publish" depends="clean-build, new-version, jar" description="--> publish this project in the ivy repository">
        <property name="revision" value="${version}"/>
    		<ivy:publish artifactspattern="${build.dir}/[artifact].[ext]" 
    			           resolver="projects"
    			           pubrevision="${revision}" 
    			           status="release"
    		/>
        <echo message="project ${ant.project.name} released with version ${revision}" />
    </target>

    <!-- ================================= 
          target: clean-lib              
         ================================= -->
    <target name="clean-lib" description="--> clean the project libraries directory (dependencies)">
        <delete includeemptydirs="true" dir="${lib.dir}"/>
    </target>

    <!-- ================================= 
          target: clean-build              
         ================================= -->
    <target name="clean-build" description="--> clean the project built files">
        <delete includeemptydirs="true" dir="${build.dir}"/>
    </target>

    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" depends="clean-build, clean-lib" description="--> clean the project and reset version number">
      <delete file="${basedir}/version.properties"/>
    </target>
</project>
