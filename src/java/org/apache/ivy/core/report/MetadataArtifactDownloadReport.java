begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|report
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|Artifact
import|;
end_import

begin_class
specifier|public
class|class
name|MetadataArtifactDownloadReport
extends|extends
name|ArtifactDownloadReport
block|{
specifier|private
name|boolean
name|isSearched
decl_stmt|;
specifier|private
name|File
name|originalLocalFile
decl_stmt|;
specifier|public
name|MetadataArtifactDownloadReport
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
block|{
name|super
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns<code>true</code> if the resolution of this metadata artifact required at least one      * access to the repository, or<code>false</code> if only provisioned data was used.      *       * @return<code>true</code> if the resolution of this metadata artifact required at least one      *         access to the repository      */
specifier|public
name|boolean
name|isSearched
parameter_list|()
block|{
return|return
name|isSearched
return|;
block|}
specifier|public
name|void
name|setSearched
parameter_list|(
name|boolean
name|isSearched
parameter_list|)
block|{
name|this
operator|.
name|isSearched
operator|=
name|isSearched
expr_stmt|;
block|}
comment|/**      * Returns the location on the local filesystem where the original metadata artifact is      * provisioned, or<code>null</code> if the provisioning failed.      *       * @return the location on the local filesystem where the original metadata artifact is      *         provisioned.      */
specifier|public
name|File
name|getOriginalLocalFile
parameter_list|()
block|{
return|return
name|originalLocalFile
return|;
block|}
specifier|public
name|void
name|setOriginalLocalFile
parameter_list|(
name|File
name|originalLocalFile
parameter_list|)
block|{
name|this
operator|.
name|originalLocalFile
operator|=
name|originalLocalFile
expr_stmt|;
block|}
block|}
end_class

end_unit

