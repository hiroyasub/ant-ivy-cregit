begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|retrieve
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|cache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|filter
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|filter
operator|.
name|FilterHelper
import|;
end_import

begin_comment
comment|/**  * A set of options used during retrieve related tasks  *   * @see RetrieveEngine  * @author Xavier Hanin  */
end_comment

begin_class
specifier|public
class|class
name|RetrieveOptions
block|{
comment|/** 	 * The names of configurations to retrieve. 	 * If the array consists only of '*', then all configurations of  	 * the module will be retrieved. 	 */
specifier|private
name|String
index|[]
name|confs
init|=
operator|new
name|String
index|[]
block|{
literal|"*"
block|}
decl_stmt|;
comment|/** 	 * The cache manager to retrieve files from. 	 * If null, the default cache manager of the current Ivy instance will be used. 	 */
specifier|private
name|CacheManager
name|cache
init|=
literal|null
decl_stmt|;
comment|/** 	 * The pattern to which ivy files should be retrieved.  	 * If destIvyPattern is null no ivy files will be copied. 	 */
specifier|private
name|String
name|destIvyPattern
init|=
literal|null
decl_stmt|;
comment|/** 	 * The filter to apply before retrieving artifacts. 	 */
specifier|private
name|Filter
name|artifactFilter
init|=
name|FilterHelper
operator|.
name|NO_FILTER
decl_stmt|;
comment|/** 	 * True if a synchronisation of the destination directory should be done, 	 * false if a simple copy is enough. 	 * Synchronisation means that after the retrieve only files which have been 	 * retrieved will be present in the destination directory, which means  	 * that some files may be deleted. 	 */
specifier|private
name|boolean
name|sync
init|=
literal|false
decl_stmt|;
comment|/** 	 * True if the original files should be used insteaad of their cache copy. 	 */
specifier|private
name|boolean
name|useOrigin
init|=
literal|false
decl_stmt|;
comment|/** 	 * True if symbolic links should be created instead of plain copy. 	 * Works only on OS supporting symbolic links. 	 */
specifier|private
name|boolean
name|makeSymlinks
init|=
literal|false
decl_stmt|;
comment|/** 	 * The id used to store the resolve information. 	 */
specifier|private
name|String
name|resolveId
decl_stmt|;
specifier|public
name|Filter
name|getArtifactFilter
parameter_list|()
block|{
return|return
name|artifactFilter
return|;
block|}
specifier|public
name|RetrieveOptions
name|setArtifactFilter
parameter_list|(
name|Filter
name|artifactFilter
parameter_list|)
block|{
name|this
operator|.
name|artifactFilter
operator|=
name|artifactFilter
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CacheManager
name|getCache
parameter_list|()
block|{
return|return
name|cache
return|;
block|}
specifier|public
name|RetrieveOptions
name|setCache
parameter_list|(
name|CacheManager
name|cacheManager
parameter_list|)
block|{
name|this
operator|.
name|cache
operator|=
name|cacheManager
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
index|[]
name|getConfs
parameter_list|()
block|{
return|return
name|confs
return|;
block|}
specifier|public
name|RetrieveOptions
name|setConfs
parameter_list|(
name|String
index|[]
name|confs
parameter_list|)
block|{
name|this
operator|.
name|confs
operator|=
name|confs
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getDestIvyPattern
parameter_list|()
block|{
return|return
name|destIvyPattern
return|;
block|}
specifier|public
name|RetrieveOptions
name|setDestIvyPattern
parameter_list|(
name|String
name|destIvyPattern
parameter_list|)
block|{
name|this
operator|.
name|destIvyPattern
operator|=
name|destIvyPattern
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|boolean
name|isMakeSymlinks
parameter_list|()
block|{
return|return
name|makeSymlinks
return|;
block|}
specifier|public
name|RetrieveOptions
name|setMakeSymlinks
parameter_list|(
name|boolean
name|makeSymlinks
parameter_list|)
block|{
name|this
operator|.
name|makeSymlinks
operator|=
name|makeSymlinks
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|boolean
name|isSync
parameter_list|()
block|{
return|return
name|sync
return|;
block|}
specifier|public
name|RetrieveOptions
name|setSync
parameter_list|(
name|boolean
name|sync
parameter_list|)
block|{
name|this
operator|.
name|sync
operator|=
name|sync
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|boolean
name|isUseOrigin
parameter_list|()
block|{
return|return
name|useOrigin
return|;
block|}
specifier|public
name|RetrieveOptions
name|setUseOrigin
parameter_list|(
name|boolean
name|useOrigin
parameter_list|)
block|{
name|this
operator|.
name|useOrigin
operator|=
name|useOrigin
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getResolveId
parameter_list|()
block|{
return|return
name|resolveId
return|;
block|}
specifier|public
name|RetrieveOptions
name|setResolveId
parameter_list|(
name|String
name|resolveId
parameter_list|)
block|{
name|this
operator|.
name|resolveId
operator|=
name|resolveId
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

