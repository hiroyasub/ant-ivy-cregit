begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|sort
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DependencyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|Message
import|;
end_import

begin_comment
comment|/**  * A default implementation of the reporter used in the sort. The reporting is isolated here to make  * it easier to test, and to have a place where adding different type of reporting (silent, warning,  * exceptions)  */
end_comment

begin_class
specifier|public
class|class
name|DefaultNonMatchingVersionReporter
implements|implements
name|NonMatchingVersionReporter
block|{
specifier|public
name|void
name|reportNonMatchingVersion
parameter_list|(
name|DependencyDescriptor
name|descriptor
parameter_list|,
name|ModuleDescriptor
name|md
parameter_list|)
block|{
name|ModuleRevisionId
name|dependencyRevisionId
init|=
name|descriptor
operator|.
name|getDependencyRevisionId
argument_list|()
decl_stmt|;
name|ModuleRevisionId
name|parentRevisionId
init|=
name|descriptor
operator|.
name|getParentRevisionId
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentRevisionId
operator|==
literal|null
condition|)
block|{
comment|// There are some rare case where DependencyDescriptor have no parent.
comment|// This is should not be used in the SortEngine, but if it is, we show a decent trace.
name|Message
operator|.
name|warn
argument_list|(
literal|"Non matching revision detected.  Dependency "
operator|+
name|dependencyRevisionId
operator|+
literal|" doesn't match "
operator|+
name|md
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|ModuleId
name|parentModuleId
init|=
name|parentRevisionId
operator|.
name|getModuleId
argument_list|()
decl_stmt|;
name|Message
operator|.
name|warn
argument_list|(
literal|"Non matching revision detected.  "
operator|+
name|parentModuleId
operator|+
literal|" depends on "
operator|+
name|dependencyRevisionId
operator|+
literal|", doesn't match "
operator|+
name|md
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

