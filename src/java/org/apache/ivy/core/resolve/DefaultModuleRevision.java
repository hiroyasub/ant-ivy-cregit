begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|DependencyResolver
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|DefaultModuleRevision
implements|implements
name|ResolvedModuleRevision
block|{
specifier|private
name|DependencyResolver
name|resolver
decl_stmt|;
specifier|private
name|DependencyResolver
name|artifactResolver
decl_stmt|;
specifier|private
name|ModuleDescriptor
name|descriptor
decl_stmt|;
specifier|private
name|boolean
name|isDownloaded
decl_stmt|;
specifier|private
name|boolean
name|isSearched
decl_stmt|;
specifier|public
name|DefaultModuleRevision
parameter_list|(
name|DependencyResolver
name|resolver
parameter_list|,
name|DependencyResolver
name|artifactResolver
parameter_list|,
name|ModuleDescriptor
name|descriptor
parameter_list|,
name|boolean
name|searched
parameter_list|,
name|boolean
name|downloaded
parameter_list|)
block|{
name|this
operator|.
name|resolver
operator|=
name|resolver
expr_stmt|;
name|this
operator|.
name|artifactResolver
operator|=
name|artifactResolver
expr_stmt|;
name|this
operator|.
name|descriptor
operator|=
name|descriptor
expr_stmt|;
name|isSearched
operator|=
name|searched
expr_stmt|;
name|isDownloaded
operator|=
name|downloaded
expr_stmt|;
block|}
specifier|public
name|DependencyResolver
name|getResolver
parameter_list|()
block|{
return|return
name|resolver
return|;
block|}
specifier|public
name|DependencyResolver
name|getArtifactResolver
parameter_list|()
block|{
return|return
name|artifactResolver
return|;
block|}
specifier|public
name|ModuleDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|public
name|ModuleRevisionId
name|getId
parameter_list|()
block|{
return|return
name|descriptor
operator|.
name|getResolvedModuleRevisionId
argument_list|()
return|;
block|}
specifier|public
name|Date
name|getPublicationDate
parameter_list|()
block|{
return|return
name|descriptor
operator|.
name|getResolvedPublicationDate
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|ResolvedModuleRevision
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
operator|(
operator|(
name|ResolvedModuleRevision
operator|)
name|obj
operator|)
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
name|getId
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getId
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isDownloaded
parameter_list|()
block|{
return|return
name|isDownloaded
return|;
block|}
specifier|public
name|boolean
name|isSearched
parameter_list|()
block|{
return|return
name|isSearched
return|;
block|}
specifier|public
specifier|static
name|ResolvedModuleRevision
name|searchedRmr
parameter_list|(
specifier|final
name|ResolvedModuleRevision
name|rmr
parameter_list|)
block|{
comment|// delegate all to previously found except isSearched
return|return
operator|new
name|ResolvedModuleRevision
argument_list|()
block|{
specifier|public
name|boolean
name|isSearched
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isDownloaded
parameter_list|()
block|{
return|return
name|rmr
operator|.
name|isDownloaded
argument_list|()
return|;
block|}
specifier|public
name|ModuleDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|rmr
operator|.
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
name|Date
name|getPublicationDate
parameter_list|()
block|{
return|return
name|rmr
operator|.
name|getPublicationDate
argument_list|()
return|;
block|}
specifier|public
name|ModuleRevisionId
name|getId
parameter_list|()
block|{
return|return
name|rmr
operator|.
name|getId
argument_list|()
return|;
block|}
specifier|public
name|DependencyResolver
name|getResolver
parameter_list|()
block|{
return|return
name|rmr
operator|.
name|getResolver
argument_list|()
return|;
block|}
specifier|public
name|DependencyResolver
name|getArtifactResolver
parameter_list|()
block|{
return|return
name|rmr
operator|.
name|getArtifactResolver
argument_list|()
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

