begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|repo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|repository
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|util
operator|.
name|ResolverHelper
import|;
end_import

begin_class
specifier|public
class|class
name|RepositoryManifestIterable
extends|extends
name|AbstractFSManifestIterable
block|{
specifier|private
specifier|final
name|Repository
name|repo
decl_stmt|;
comment|/**      * Default constructor      *       * @param root      *            the root directory of the file system to lookup      */
specifier|public
name|RepositoryManifestIterable
parameter_list|(
name|Repository
name|repo
parameter_list|)
block|{
name|this
operator|.
name|repo
operator|=
name|repo
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|InputStream
name|getInputStream
parameter_list|(
name|String
name|f
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|repo
operator|.
name|getResource
argument_list|(
name|f
argument_list|)
operator|.
name|openStream
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|listBundleFiles
parameter_list|(
name|String
name|dir
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|asList
argument_list|(
name|ResolverHelper
operator|.
name|listAll
argument_list|(
name|repo
argument_list|,
name|dir
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|listDirs
parameter_list|(
name|String
name|dir
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|asList
argument_list|(
name|ResolverHelper
operator|.
name|listAll
argument_list|(
name|repo
argument_list|,
name|dir
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|asList
parameter_list|(
name|String
index|[]
name|array
parameter_list|)
block|{
return|return
name|array
operator|==
literal|null
condition|?
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
else|:
name|Arrays
operator|.
expr|<
name|String
operator|>
name|asList
argument_list|(
name|array
argument_list|)
return|;
block|}
block|}
end_class

end_unit

