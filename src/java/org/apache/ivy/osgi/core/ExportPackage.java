begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|util
operator|.
name|Version
import|;
end_import

begin_class
specifier|public
class|class
name|ExportPackage
extends|extends
name|BundleCapability
block|{
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|uses
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|ExportPackage
parameter_list|(
name|String
name|name
parameter_list|,
name|Version
name|version
parameter_list|)
block|{
name|super
argument_list|(
name|BundleInfo
operator|.
name|PACKAGE_TYPE
argument_list|,
name|name
argument_list|,
name|version
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addUse
parameter_list|(
name|String
name|pkg
parameter_list|)
block|{
name|uses
operator|.
name|add
argument_list|(
name|pkg
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Version
name|getVersion
parameter_list|()
block|{
return|return
name|super
operator|.
name|getVersion
argument_list|()
operator|==
literal|null
condition|?
name|BundleInfo
operator|.
name|DEFAULT_VERSION
else|:
name|super
operator|.
name|getVersion
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getUses
parameter_list|()
block|{
return|return
name|uses
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
specifier|final
name|int
name|prime
init|=
literal|31
decl_stmt|;
name|int
name|result
init|=
name|super
operator|.
name|hashCode
argument_list|()
decl_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|uses
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|uses
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ExportPackage
name|other
init|=
operator|(
name|ExportPackage
operator|)
name|obj
decl_stmt|;
return|return
name|uses
operator|==
literal|null
condition|?
name|other
operator|.
name|uses
operator|==
literal|null
else|:
name|uses
operator|.
name|equals
argument_list|(
name|other
operator|.
name|uses
argument_list|)
return|;
block|}
block|}
end_class

end_unit

