begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipOutputStream
import|;
end_import

begin_comment
comment|/**  * Class derived from code posted here: http://forums.sun.com/thread.jspa?messageID=2160923  */
end_comment

begin_class
specifier|public
class|class
name|ZipUtil
block|{
specifier|public
specifier|static
name|void
name|zip
parameter_list|(
name|File
name|sourceDir
parameter_list|,
name|OutputStream
name|targetStream
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|sourceDir
operator|.
name|isFile
argument_list|()
operator|&&
operator|!
name|sourceDir
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
return|return;
block|}
specifier|final
name|ZipOutputStream
name|cpZipOutputStream
init|=
operator|new
name|ZipOutputStream
argument_list|(
name|targetStream
argument_list|)
decl_stmt|;
name|cpZipOutputStream
operator|.
name|setLevel
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|zipFiles
argument_list|(
name|sourceDir
argument_list|,
name|sourceDir
argument_list|,
name|cpZipOutputStream
argument_list|)
expr_stmt|;
name|cpZipOutputStream
operator|.
name|finish
argument_list|()
expr_stmt|;
name|cpZipOutputStream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|zipFiles
parameter_list|(
name|File
name|rootDir
parameter_list|,
name|File
name|currDir
parameter_list|,
name|ZipOutputStream
name|zos
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|currDir
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
for|for
control|(
name|File
name|file
range|:
name|currDir
operator|.
name|listFiles
argument_list|()
control|)
block|{
name|zipFiles
argument_list|(
name|rootDir
argument_list|,
name|file
argument_list|,
name|zos
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
specifier|final
name|String
name|strAbsPath
init|=
name|currDir
operator|.
name|getPath
argument_list|()
decl_stmt|;
specifier|final
name|String
name|strZipEntryName
init|=
name|strAbsPath
operator|.
name|substring
argument_list|(
name|rootDir
operator|.
name|getPath
argument_list|()
operator|.
name|length
argument_list|()
operator|+
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|byte
index|[]
name|b
init|=
operator|new
name|byte
index|[
operator|(
name|int
operator|)
operator|(
name|currDir
operator|.
name|length
argument_list|()
operator|)
index|]
decl_stmt|;
specifier|final
name|FileInputStream
name|fis
init|=
operator|new
name|FileInputStream
argument_list|(
name|currDir
argument_list|)
decl_stmt|;
name|fis
operator|.
name|read
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|fis
operator|.
name|close
argument_list|()
expr_stmt|;
specifier|final
name|ZipEntry
name|entry
init|=
operator|new
name|ZipEntry
argument_list|(
name|strZipEntryName
argument_list|)
decl_stmt|;
name|zos
operator|.
name|putNextEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|zos
operator|.
name|write
argument_list|(
name|b
argument_list|,
literal|0
argument_list|,
operator|(
name|int
operator|)
name|currDir
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|zos
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

