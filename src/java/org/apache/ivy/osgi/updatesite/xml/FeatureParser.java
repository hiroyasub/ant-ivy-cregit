begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|updatesite
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|util
operator|.
name|DelegetingHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|util
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|XMLHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|FeatureParser
block|{
specifier|public
specifier|static
name|EclipseFeature
name|parse
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
throws|,
name|SAXException
block|{
name|FeatureHandler
name|handler
init|=
operator|new
name|FeatureHandler
argument_list|()
decl_stmt|;
try|try
block|{
name|XMLHelper
operator|.
name|parse
argument_list|(
name|in
argument_list|,
literal|null
argument_list|,
name|handler
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|handler
operator|.
name|feature
return|;
block|}
specifier|static
class|class
name|FeatureHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|FEATURE
init|=
literal|"feature"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COLOCATION_AFFINITY
init|=
literal|"colocation-affinity"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PRIMARY
init|=
literal|"primary"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EXCLUSIVE
init|=
literal|"exclusive"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PLUGIN
init|=
literal|"plugin"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|APPLICATION
init|=
literal|"application"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARCH
init|=
literal|"arch"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NL
init|=
literal|"nl"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|WS
init|=
literal|"ws"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OS
init|=
literal|"os"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ID
init|=
literal|"id"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROVIDER_NAME
init|=
literal|"provider-name"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LABEL
init|=
literal|"label"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|IMAGE
init|=
literal|"image"
decl_stmt|;
name|EclipseFeature
name|feature
decl_stmt|;
specifier|public
name|FeatureHandler
parameter_list|()
block|{
name|super
argument_list|(
name|FEATURE
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|DescriptionHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|setDescription
argument_list|(
name|child
operator|.
name|getBufferedChars
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|LicenseHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|setLicense
argument_list|(
name|child
operator|.
name|getBufferedChars
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|CopyrightHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|setCopyright
argument_list|(
name|child
operator|.
name|getBufferedChars
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|PluginHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|addPlugin
argument_list|(
operator|(
operator|(
name|PluginHandler
operator|)
name|child
operator|)
operator|.
name|plugin
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|RequiresHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
name|Iterator
name|itRequire
init|=
operator|(
operator|(
name|RequiresHandler
operator|)
name|child
operator|)
operator|.
name|requires
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|itRequire
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|feature
operator|.
name|addRequire
argument_list|(
operator|(
name|Require
operator|)
name|itRequire
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|UrlHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|feature
operator|=
operator|new
name|EclipseFeature
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|ID
argument_list|)
argument_list|,
operator|new
name|Version
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|VERSION
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setOS
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|OS
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setWS
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|WS
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setNL
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|NL
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setArch
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|ARCH
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setApplication
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|APPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setPlugin
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PLUGIN
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setExclusive
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|EXCLUSIVE
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setPrimary
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PRIMARY
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setColocationAffinity
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|COLOCATION_AFFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setProviderName
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PROVIDER_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setLabel
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|LABEL
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setImage
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|IMAGE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|PluginHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|PLUGIN
init|=
literal|"plugin"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FILTER
init|=
literal|"filter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FRAGMENT
init|=
literal|"fragment"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|UNPACK
init|=
literal|"unpack"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ID
init|=
literal|"id"
decl_stmt|;
specifier|private
name|EclipsePlugin
name|plugin
decl_stmt|;
specifier|public
name|PluginHandler
parameter_list|()
block|{
name|super
argument_list|(
name|PLUGIN
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|plugin
operator|=
operator|new
name|EclipsePlugin
argument_list|()
expr_stmt|;
name|plugin
operator|.
name|setId
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|ID
argument_list|)
argument_list|)
expr_stmt|;
name|plugin
operator|.
name|setVersion
argument_list|(
operator|new
name|Version
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|VERSION
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|plugin
operator|.
name|setUnpack
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|UNPACK
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|plugin
operator|.
name|setFragment
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FRAGMENT
argument_list|)
argument_list|)
expr_stmt|;
name|plugin
operator|.
name|setFilter
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FILTER
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|DescriptionHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DESCRIPTION
init|=
literal|"description"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|public
name|DescriptionHandler
parameter_list|()
block|{
name|super
argument_list|(
name|DESCRIPTION
argument_list|)
expr_stmt|;
name|setBufferingChar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|url
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|URL
argument_list|)
decl_stmt|;
block|}
block|}
specifier|static
class|class
name|LicenseHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|LICENSE
init|=
literal|"license"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|public
name|LicenseHandler
parameter_list|()
block|{
name|super
argument_list|(
name|LICENSE
argument_list|)
expr_stmt|;
name|setBufferingChar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|url
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|URL
argument_list|)
decl_stmt|;
block|}
block|}
specifier|static
class|class
name|CopyrightHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|COPYRIGHT
init|=
literal|"copyright"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|public
name|CopyrightHandler
parameter_list|()
block|{
name|super
argument_list|(
name|COPYRIGHT
argument_list|)
expr_stmt|;
name|setBufferingChar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|url
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|URL
argument_list|)
decl_stmt|;
block|}
block|}
specifier|static
class|class
name|RequiresHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|REQUIRES
init|=
literal|"requires"
decl_stmt|;
name|List
name|requires
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
specifier|public
name|RequiresHandler
parameter_list|()
block|{
name|super
argument_list|(
name|REQUIRES
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|ImportHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
name|requires
operator|.
name|add
argument_list|(
operator|(
operator|(
name|ImportHandler
operator|)
name|child
operator|)
operator|.
name|require
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|ImportHandler
extends|extends
name|DelegetingHandler
block|{
name|Require
name|require
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|IMPORT
init|=
literal|"import"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FILTER
init|=
literal|"filter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MATCH
init|=
literal|"match"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PLUGIN
init|=
literal|"plugin"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FEATURE
init|=
literal|"feature"
decl_stmt|;
specifier|public
name|ImportHandler
parameter_list|()
block|{
name|super
argument_list|(
name|IMPORT
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|require
operator|=
operator|new
name|Require
argument_list|()
expr_stmt|;
name|require
operator|.
name|setFeature
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FEATURE
argument_list|)
argument_list|)
expr_stmt|;
name|require
operator|.
name|setPlugin
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PLUGIN
argument_list|)
argument_list|)
expr_stmt|;
name|require
operator|.
name|setVersion
argument_list|(
operator|new
name|Version
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|VERSION
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|require
operator|.
name|setMatch
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|MATCH
argument_list|)
argument_list|)
expr_stmt|;
name|require
operator|.
name|setFilter
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FILTER
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|IncludesHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|INCLUDES
init|=
literal|"includes"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FILTER
init|=
literal|"filter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OPTIONAL
init|=
literal|"optional"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ID
init|=
literal|"id"
decl_stmt|;
specifier|public
name|IncludesHandler
parameter_list|()
block|{
name|super
argument_list|(
name|INCLUDES
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|id
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|ID
argument_list|)
decl_stmt|;
name|String
name|version
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|VERSION
argument_list|)
decl_stmt|;
name|String
name|optional
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|OPTIONAL
argument_list|)
decl_stmt|;
name|String
name|filter
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|FILTER
argument_list|)
decl_stmt|;
block|}
block|}
specifier|static
class|class
name|InstallHandlerHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|INSTALL_HANDLER
init|=
literal|"install-handler"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LIBRARY
init|=
literal|"library"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|HANDLER
init|=
literal|"handler"
decl_stmt|;
specifier|public
name|InstallHandlerHandler
parameter_list|()
block|{
name|super
argument_list|(
name|INSTALL_HANDLER
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|handler
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|HANDLER
argument_list|)
decl_stmt|;
name|String
name|library
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|LIBRARY
argument_list|)
decl_stmt|;
name|String
name|url
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|URL
argument_list|)
decl_stmt|;
block|}
block|}
specifier|static
class|class
name|UrlHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|public
name|UrlHandler
parameter_list|()
block|{
name|super
argument_list|(
name|URL
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|UpdateHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|DiscoveryHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DelegetingHandler
name|child
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|UpdateHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|UPDATE
init|=
literal|"update"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LABEL
init|=
literal|"label"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|public
name|UpdateHandler
parameter_list|()
block|{
name|super
argument_list|(
name|UPDATE
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|label
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|LABEL
argument_list|)
decl_stmt|;
name|String
name|url
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|URL
argument_list|)
decl_stmt|;
block|}
block|}
specifier|static
class|class
name|DiscoveryHandler
extends|extends
name|DelegetingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DISCOVERY
init|=
literal|"discovery"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|URL
init|=
literal|"url"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LABEL
init|=
literal|"label"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TYPE
init|=
literal|"type"
decl_stmt|;
specifier|public
name|DiscoveryHandler
parameter_list|()
block|{
name|super
argument_list|(
name|DISCOVERY
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|type
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|TYPE
argument_list|)
decl_stmt|;
name|String
name|label
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|LABEL
argument_list|)
decl_stmt|;
name|String
name|url
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|URL
argument_list|)
decl_stmt|;
block|}
block|}
block|}
end_class

end_unit

