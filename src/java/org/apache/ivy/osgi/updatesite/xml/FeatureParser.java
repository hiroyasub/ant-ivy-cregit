begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|updatesite
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|util
operator|.
name|DelegatingHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|osgi
operator|.
name|util
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|XMLHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|FeatureParser
block|{
specifier|public
specifier|static
name|EclipseFeature
name|parse
parameter_list|(
name|InputStream
name|in
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
throws|,
name|SAXException
block|{
name|FeatureHandler
name|handler
init|=
operator|new
name|FeatureHandler
argument_list|()
decl_stmt|;
try|try
block|{
name|XMLHelper
operator|.
name|parse
argument_list|(
name|in
argument_list|,
literal|null
argument_list|,
name|handler
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|handler
operator|.
name|feature
return|;
block|}
specifier|static
class|class
name|FeatureHandler
extends|extends
name|DelegatingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|FEATURE
init|=
literal|"feature"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COLOCATION_AFFINITY
init|=
literal|"colocation-affinity"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PRIMARY
init|=
literal|"primary"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EXCLUSIVE
init|=
literal|"exclusive"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PLUGIN
init|=
literal|"plugin"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|APPLICATION
init|=
literal|"application"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ARCH
init|=
literal|"arch"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NL
init|=
literal|"nl"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|WS
init|=
literal|"ws"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OS
init|=
literal|"os"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ID
init|=
literal|"id"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROVIDER_NAME
init|=
literal|"provider-name"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LABEL
init|=
literal|"label"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|IMAGE
init|=
literal|"image"
decl_stmt|;
name|EclipseFeature
name|feature
decl_stmt|;
specifier|public
name|FeatureHandler
parameter_list|()
block|{
name|super
argument_list|(
name|FEATURE
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|DescriptionHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|<
name|DescriptionHandler
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|DescriptionHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|setDescription
argument_list|(
name|child
operator|.
name|getBufferedChars
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|LicenseHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|<
name|LicenseHandler
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|LicenseHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|setLicense
argument_list|(
name|child
operator|.
name|getBufferedChars
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|CopyrightHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|<
name|CopyrightHandler
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|CopyrightHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|setCopyright
argument_list|(
name|child
operator|.
name|getBufferedChars
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|PluginHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|<
name|PluginHandler
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|PluginHandler
name|child
parameter_list|)
block|{
name|feature
operator|.
name|addPlugin
argument_list|(
name|child
operator|.
name|plugin
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|RequiresHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|<
name|RequiresHandler
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|RequiresHandler
name|child
parameter_list|)
block|{
for|for
control|(
name|Require
name|require
range|:
name|child
operator|.
name|requires
control|)
block|{
name|feature
operator|.
name|addRequire
argument_list|(
name|require
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
comment|//            addChild(new UrlHandler(), new ChildElementHandler<UrlHandler>() {
comment|//                public void childHanlded(UrlHandler child) {
comment|//                }
comment|//            });
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|id
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|ID
argument_list|)
decl_stmt|;
name|String
name|version
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|VERSION
argument_list|)
decl_stmt|;
try|try
block|{
name|feature
operator|=
operator|new
name|EclipseFeature
argument_list|(
name|id
argument_list|,
operator|new
name|Version
argument_list|(
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
literal|"Incorrect version on feature '"
operator|+
name|id
operator|+
literal|"': "
operator|+
name|version
operator|+
literal|" ("
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|")"
argument_list|)
throw|;
block|}
name|feature
operator|.
name|setOS
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|OS
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setWS
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|WS
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setNL
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|NL
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setArch
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|ARCH
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setApplication
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|APPLICATION
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setPlugin
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PLUGIN
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setExclusive
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|EXCLUSIVE
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setPrimary
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PRIMARY
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setColocationAffinity
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|COLOCATION_AFFINITY
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setProviderName
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PROVIDER_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setLabel
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|LABEL
argument_list|)
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setImage
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|IMAGE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|PluginHandler
extends|extends
name|DelegatingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|PLUGIN
init|=
literal|"plugin"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FILTER
init|=
literal|"filter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FRAGMENT
init|=
literal|"fragment"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|UNPACK
init|=
literal|"unpack"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ID
init|=
literal|"id"
decl_stmt|;
specifier|private
name|EclipsePlugin
name|plugin
decl_stmt|;
specifier|public
name|PluginHandler
parameter_list|()
block|{
name|super
argument_list|(
name|PLUGIN
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|plugin
operator|=
operator|new
name|EclipsePlugin
argument_list|()
expr_stmt|;
name|String
name|id
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|ID
argument_list|)
decl_stmt|;
name|String
name|version
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|VERSION
argument_list|)
decl_stmt|;
name|plugin
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
try|try
block|{
name|plugin
operator|.
name|setVersion
argument_list|(
operator|new
name|Version
argument_list|(
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
literal|"Incorrect version on feature's plugin '"
operator|+
name|id
operator|+
literal|"': "
operator|+
name|version
operator|+
literal|" ("
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|")"
argument_list|)
throw|;
block|}
name|plugin
operator|.
name|setUnpack
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|UNPACK
argument_list|)
argument_list|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
name|plugin
operator|.
name|setFragment
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FRAGMENT
argument_list|)
argument_list|)
expr_stmt|;
name|plugin
operator|.
name|setFilter
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FILTER
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|DescriptionHandler
extends|extends
name|DelegatingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DESCRIPTION
init|=
literal|"description"
decl_stmt|;
comment|//        private static final String URL = "url";
specifier|public
name|DescriptionHandler
parameter_list|()
block|{
name|super
argument_list|(
name|DESCRIPTION
argument_list|)
expr_stmt|;
name|setBufferingChar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
comment|//            String url = atts.getValue(URL);
block|}
block|}
specifier|private
specifier|static
class|class
name|LicenseHandler
extends|extends
name|DelegatingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|LICENSE
init|=
literal|"license"
decl_stmt|;
comment|//        private static final String URL = "url";
specifier|public
name|LicenseHandler
parameter_list|()
block|{
name|super
argument_list|(
name|LICENSE
argument_list|)
expr_stmt|;
name|setBufferingChar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
comment|//            String url = atts.getValue(URL);
block|}
block|}
specifier|private
specifier|static
class|class
name|CopyrightHandler
extends|extends
name|DelegatingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|COPYRIGHT
init|=
literal|"copyright"
decl_stmt|;
comment|//        private static final String URL = "url";
specifier|public
name|CopyrightHandler
parameter_list|()
block|{
name|super
argument_list|(
name|COPYRIGHT
argument_list|)
expr_stmt|;
name|setBufferingChar
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
comment|//            String url = atts.getValue(URL);
block|}
block|}
specifier|static
class|class
name|RequiresHandler
extends|extends
name|DelegatingHandler
block|{
specifier|private
specifier|static
specifier|final
name|String
name|REQUIRES
init|=
literal|"requires"
decl_stmt|;
name|List
argument_list|<
name|Require
argument_list|>
name|requires
init|=
operator|new
name|ArrayList
argument_list|<
name|Require
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|RequiresHandler
parameter_list|()
block|{
name|super
argument_list|(
name|REQUIRES
argument_list|)
expr_stmt|;
name|addChild
argument_list|(
operator|new
name|ImportHandler
argument_list|()
argument_list|,
operator|new
name|ChildElementHandler
argument_list|<
name|ImportHandler
argument_list|>
argument_list|()
block|{
specifier|public
name|void
name|childHanlded
parameter_list|(
name|ImportHandler
name|child
parameter_list|)
block|{
name|requires
operator|.
name|add
argument_list|(
name|child
operator|.
name|require
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|ImportHandler
extends|extends
name|DelegatingHandler
block|{
name|Require
name|require
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|IMPORT
init|=
literal|"import"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FILTER
init|=
literal|"filter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MATCH
init|=
literal|"match"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION
init|=
literal|"version"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PLUGIN
init|=
literal|"plugin"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FEATURE
init|=
literal|"feature"
decl_stmt|;
specifier|public
name|ImportHandler
parameter_list|()
block|{
name|super
argument_list|(
name|IMPORT
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|handleAttributes
parameter_list|(
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|require
operator|=
operator|new
name|Require
argument_list|()
expr_stmt|;
name|String
name|version
init|=
name|atts
operator|.
name|getValue
argument_list|(
name|VERSION
argument_list|)
decl_stmt|;
name|require
operator|.
name|setFeature
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FEATURE
argument_list|)
argument_list|)
expr_stmt|;
name|require
operator|.
name|setPlugin
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|PLUGIN
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|require
operator|.
name|setVersion
argument_list|(
operator|new
name|Version
argument_list|(
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
literal|"Incorrect version on feature's import: "
operator|+
name|version
operator|+
literal|" ("
operator|+
name|e
operator|.
name|getMessage
argument_list|()
operator|+
literal|")"
argument_list|)
throw|;
block|}
name|require
operator|.
name|setMatch
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|MATCH
argument_list|)
argument_list|)
expr_stmt|;
name|require
operator|.
name|setFilter
argument_list|(
name|atts
operator|.
name|getValue
argument_list|(
name|FILTER
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|//    private static class IncludesHandler extends DelegetingHandler {
comment|//
comment|//        private static final String INCLUDES = "includes";
comment|//
comment|//        private static final String FILTER = "filter";
comment|//
comment|//        private static final String OPTIONAL = "optional";
comment|//
comment|//        private static final String VERSION = "version";
comment|//
comment|//        private static final String ID = "id";
comment|//
comment|//        public IncludesHandler() {
comment|//            super(INCLUDES);
comment|//        }
comment|//
comment|//        protected void handleAttributes(Attributes atts) throws SAXException {
comment|//            String id = atts.getValue(ID);
comment|//            String version = atts.getValue(VERSION);
comment|//            String optional = atts.getValue(OPTIONAL);
comment|//            String filter = atts.getValue(FILTER);
comment|//        }
comment|//
comment|//    }
comment|//    private static class InstallHandlerHandler extends DelegetingHandler {
comment|//
comment|//        private static final String INSTALL_HANDLER = "install-handler";
comment|//
comment|//        private static final String URL = "url";
comment|//
comment|//        private static final String LIBRARY = "library";
comment|//
comment|//        private static final String HANDLER = "handler";
comment|//
comment|//        public InstallHandlerHandler() {
comment|//            super(INSTALL_HANDLER);
comment|//        }
comment|//
comment|//        protected void handleAttributes(Attributes atts) throws SAXException {
comment|//            String handler = atts.getValue(HANDLER);
comment|//            String library = atts.getValue(LIBRARY);
comment|//            String url = atts.getValue(URL);
comment|//        }
comment|//
comment|//    }
comment|//    private static class UrlHandler extends DelegetingHandler {
comment|//
comment|//        private static final String URL = "url";
comment|//
comment|//        public UrlHandler() {
comment|//            super(URL);
comment|//            addChild(new UpdateHandler(), new ChildElementHandler<UpdateHandler>() {
comment|//                public void childHanlded(UpdateHandler child) {
comment|//                }
comment|//            });
comment|//            addChild(new DiscoveryHandler(), new ChildElementHandler<DiscoveryHandler>() {
comment|//                public void childHanlded(DiscoveryHandler child) {
comment|//                }
comment|//            });
comment|//        }
comment|//
comment|//    }
comment|//    private static class UpdateHandler extends DelegetingHandler {
comment|//
comment|//        private static final String UPDATE = "update";
comment|//
comment|//        private static final String LABEL = "label";
comment|//
comment|//        private static final String URL = "url";
comment|//
comment|//        public UpdateHandler() {
comment|//            super(UPDATE);
comment|//        }
comment|//
comment|//        protected void handleAttributes(Attributes atts) throws SAXException {
comment|//            String label = atts.getValue(LABEL);
comment|//            String url = atts.getValue(URL);
comment|//        }
comment|//
comment|//    }
comment|//    private static class DiscoveryHandler extends DelegetingHandler {
comment|//
comment|//        private static final String DISCOVERY = "discovery";
comment|//
comment|//        private static final String URL = "url";
comment|//
comment|//        private static final String LABEL = "label";
comment|//
comment|//        private static final String TYPE = "type";
comment|//
comment|//        public DiscoveryHandler() {
comment|//            super(DISCOVERY);
comment|//        }
comment|//
comment|//        protected void handleAttributes(Attributes atts) throws SAXException {
comment|//            String type = atts.getValue(TYPE);
comment|//            String label = atts.getValue(LABEL);
comment|//            String url = atts.getValue(URL);
comment|//        }
comment|//
comment|//    }
block|}
end_class

end_unit

