begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|packager
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|IvyPatternHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|repository
operator|.
name|Resource
import|;
end_import

begin_comment
comment|/**  * Represents an artifact built by a {@link PackagerResolver}.  */
end_comment

begin_class
specifier|public
class|class
name|BuiltFileResource
implements|implements
name|Resource
block|{
comment|/**      * Where the build file should put built artifacts (relative to the build directory). Value is:      * {@value}      */
specifier|public
specifier|static
specifier|final
name|String
name|BUILT_ARTIFACT_PATTERN
init|=
literal|"artifacts/[type]s/[artifact].[ext]"
decl_stmt|;
specifier|private
specifier|final
name|File
name|file
decl_stmt|;
specifier|public
name|BuiltFileResource
parameter_list|(
name|File
name|file
parameter_list|)
block|{
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
block|}
specifier|public
name|BuiltFileResource
parameter_list|(
name|File
name|dir
parameter_list|,
name|Artifact
name|artifact
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|File
argument_list|(
name|dir
argument_list|,
name|IvyPatternHelper
operator|.
name|substitute
argument_list|(
name|BUILT_ARTIFACT_PATTERN
argument_list|,
name|artifact
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|Resource
name|clone
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|BuiltFileResource
argument_list|(
operator|new
name|File
argument_list|(
name|name
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|getLastModified
parameter_list|()
block|{
return|return
name|file
operator|.
name|lastModified
argument_list|()
return|;
block|}
specifier|public
name|long
name|getContentLength
parameter_list|()
block|{
return|return
name|file
operator|.
name|length
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|exists
parameter_list|()
block|{
return|return
name|file
operator|.
name|exists
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getName
argument_list|()
return|;
block|}
specifier|public
name|File
name|getFile
parameter_list|()
block|{
return|return
name|file
return|;
block|}
specifier|public
name|boolean
name|isLocal
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
specifier|public
name|InputStream
name|openStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
return|;
block|}
block|}
end_class

end_unit

