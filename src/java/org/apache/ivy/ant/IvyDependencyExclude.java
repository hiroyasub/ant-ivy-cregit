begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|DefaultExcludeRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ArtifactId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|IvySettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|matcher
operator|.
name|PatternMatcher
import|;
end_import

begin_class
specifier|public
class|class
name|IvyDependencyExclude
block|{
specifier|private
name|String
name|org
decl_stmt|;
specifier|private
name|String
name|module
decl_stmt|;
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|type
decl_stmt|;
specifier|private
name|String
name|ext
decl_stmt|;
specifier|private
name|String
name|matcher
decl_stmt|;
specifier|public
name|void
name|setOrg
parameter_list|(
name|String
name|org
parameter_list|)
block|{
name|this
operator|.
name|org
operator|=
name|org
expr_stmt|;
block|}
specifier|public
name|void
name|setModule
parameter_list|(
name|String
name|module
parameter_list|)
block|{
name|this
operator|.
name|module
operator|=
name|module
expr_stmt|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|void
name|setExt
parameter_list|(
name|String
name|ext
parameter_list|)
block|{
name|this
operator|.
name|ext
operator|=
name|ext
expr_stmt|;
block|}
specifier|public
name|void
name|setMatcher
parameter_list|(
name|String
name|matcher
parameter_list|)
block|{
name|this
operator|.
name|matcher
operator|=
name|matcher
expr_stmt|;
block|}
name|DefaultExcludeRule
name|asRule
parameter_list|(
name|IvySettings
name|settings
parameter_list|)
block|{
name|String
name|matcherName
init|=
operator|(
name|matcher
operator|==
literal|null
operator|)
condition|?
name|PatternMatcher
operator|.
name|EXACT
else|:
name|matcher
decl_stmt|;
name|String
name|orgPattern
init|=
operator|(
name|org
operator|==
literal|null
operator|)
condition|?
name|PatternMatcher
operator|.
name|ANY_EXPRESSION
else|:
name|org
decl_stmt|;
name|String
name|modulePattern
init|=
operator|(
name|module
operator|==
literal|null
operator|)
condition|?
name|PatternMatcher
operator|.
name|ANY_EXPRESSION
else|:
name|module
decl_stmt|;
name|String
name|namePattern
init|=
operator|(
name|name
operator|==
literal|null
operator|)
condition|?
name|PatternMatcher
operator|.
name|ANY_EXPRESSION
else|:
name|name
decl_stmt|;
name|String
name|typePattern
init|=
operator|(
name|type
operator|==
literal|null
operator|)
condition|?
name|PatternMatcher
operator|.
name|ANY_EXPRESSION
else|:
name|type
decl_stmt|;
name|String
name|extPattern
init|=
operator|(
name|ext
operator|==
literal|null
operator|)
condition|?
name|typePattern
else|:
name|ext
decl_stmt|;
name|ArtifactId
name|aid
init|=
operator|new
name|ArtifactId
argument_list|(
operator|new
name|ModuleId
argument_list|(
name|orgPattern
argument_list|,
name|modulePattern
argument_list|)
argument_list|,
name|namePattern
argument_list|,
name|typePattern
argument_list|,
name|extPattern
argument_list|)
decl_stmt|;
return|return
operator|new
name|DefaultExcludeRule
argument_list|(
name|aid
argument_list|,
name|settings
operator|.
name|getMatcher
argument_list|(
name|matcherName
argument_list|)
argument_list|,
literal|null
argument_list|)
return|;
block|}
block|}
end_class

end_unit

