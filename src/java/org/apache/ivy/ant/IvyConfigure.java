begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|ant
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|ant
operator|.
name|IvyAntSettings
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|taskdefs
operator|.
name|Property
import|;
end_import

begin_comment
comment|/**  * Configure Ivy with an ivysettings.xml file  *   * @deprecated Use the IvyAntSettings instead.  */
end_comment

begin_class
specifier|public
class|class
name|IvyConfigure
extends|extends
name|IvyTask
block|{
specifier|private
name|IvyAntSettings
name|antSettings
init|=
operator|new
name|IvyAntSettings
argument_list|()
decl_stmt|;
specifier|public
name|void
name|doExecute
parameter_list|()
throws|throws
name|BuildException
block|{
name|log
argument_list|(
literal|"ivy:configure is deprecated, please use the data type ivy:settings instead"
argument_list|,
name|Project
operator|.
name|MSG_WARN
argument_list|)
expr_stmt|;
comment|// ivyConfigure used to export properties in the ant script.
comment|// ivy:settings doesn't.
try|try
block|{
name|loadDefaultProperties
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|BuildException
argument_list|(
literal|"impossible to load ivy default properties file: "
operator|+
name|ex
argument_list|,
name|ex
argument_list|)
throw|;
block|}
name|antSettings
operator|.
name|registerAsDefault
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|loadDefaultProperties
parameter_list|()
block|{
name|Property
name|prop
init|=
operator|new
name|Property
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|BuildException
block|{
name|Properties
name|props
init|=
name|antSettings
operator|.
name|getDefaultProperties
argument_list|()
decl_stmt|;
name|addProperties
argument_list|(
name|props
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|prop
operator|.
name|setProject
argument_list|(
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
name|prop
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|addConfiguredCredentials
parameter_list|(
name|Credentials
name|c
parameter_list|)
block|{
name|antSettings
operator|.
name|addConfiguredCredentials
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setFile
parameter_list|(
name|File
name|file
parameter_list|)
block|{
name|antSettings
operator|.
name|setFile
argument_list|(
name|file
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setHost
parameter_list|(
name|String
name|host
parameter_list|)
block|{
name|antSettings
operator|.
name|setHost
argument_list|(
name|host
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setPasswd
parameter_list|(
name|String
name|passwd
parameter_list|)
block|{
name|antSettings
operator|.
name|setPasswd
argument_list|(
name|passwd
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setProject
parameter_list|(
name|Project
name|prj
parameter_list|)
block|{
name|super
operator|.
name|setProject
argument_list|(
name|prj
argument_list|)
expr_stmt|;
name|antSettings
operator|.
name|setProject
argument_list|(
name|prj
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setRealm
parameter_list|(
name|String
name|realm
parameter_list|)
block|{
name|antSettings
operator|.
name|setRealm
argument_list|(
name|realm
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setUrl
parameter_list|(
name|String
name|confUrl
parameter_list|)
throws|throws
name|MalformedURLException
block|{
name|antSettings
operator|.
name|setUrl
argument_list|(
name|confUrl
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setUsername
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|antSettings
operator|.
name|setUsername
argument_list|(
name|userName
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

