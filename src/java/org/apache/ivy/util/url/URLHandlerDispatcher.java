begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|url
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|settings
operator|.
name|TimeoutConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|CopyProgressListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * An implementation of {@link URLHandler} which uses an underlying {@link URLHandler} per protocol  * and a fallback default {@link URLHandler} for dealing with downloads, uploads and  * general reachability checks  */
end_comment

begin_class
specifier|public
class|class
name|URLHandlerDispatcher
implements|implements
name|TimeoutConstrainedURLHandler
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|URLHandler
argument_list|>
name|handlers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|private
name|URLHandler
name|defaultHandler
init|=
operator|new
name|BasicURLHandler
argument_list|()
decl_stmt|;
specifier|public
name|URLHandlerDispatcher
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isReachable
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
block|{
return|return
name|this
operator|.
name|isReachable
argument_list|(
name|url
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isReachable
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|int
name|timeout
parameter_list|)
block|{
return|return
name|this
operator|.
name|isReachable
argument_list|(
name|url
argument_list|,
name|createTimeoutConstraints
argument_list|(
name|timeout
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|boolean
name|isReachable
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|TimeoutConstraint
name|timeoutConstraint
parameter_list|)
block|{
specifier|final
name|URLHandler
name|handler
init|=
name|this
operator|.
name|getHandler
argument_list|(
name|url
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|TimeoutConstrainedURLHandler
condition|)
block|{
return|return
operator|(
operator|(
name|TimeoutConstrainedURLHandler
operator|)
name|handler
operator|)
operator|.
name|isReachable
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
argument_list|)
return|;
block|}
return|return
name|handler
operator|.
name|isReachable
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
operator|!=
literal|null
condition|?
name|timeoutConstraint
operator|.
name|getConnectionTimeout
argument_list|()
else|:
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getContentLength
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
block|{
return|return
name|this
operator|.
name|getContentLength
argument_list|(
name|url
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getContentLength
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|int
name|timeout
parameter_list|)
block|{
return|return
name|this
operator|.
name|getContentLength
argument_list|(
name|url
argument_list|,
name|createTimeoutConstraints
argument_list|(
name|timeout
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|long
name|getContentLength
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|TimeoutConstraint
name|timeoutConstraint
parameter_list|)
block|{
specifier|final
name|URLHandler
name|handler
init|=
name|this
operator|.
name|getHandler
argument_list|(
name|url
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|TimeoutConstrainedURLHandler
condition|)
block|{
return|return
operator|(
operator|(
name|TimeoutConstrainedURLHandler
operator|)
name|handler
operator|)
operator|.
name|getContentLength
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
argument_list|)
return|;
block|}
return|return
name|handler
operator|.
name|getContentLength
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
operator|!=
literal|null
condition|?
name|timeoutConstraint
operator|.
name|getConnectionTimeout
argument_list|()
else|:
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLastModified
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
block|{
return|return
name|this
operator|.
name|getLastModified
argument_list|(
name|url
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLastModified
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|int
name|timeout
parameter_list|)
block|{
return|return
name|this
operator|.
name|getLastModified
argument_list|(
name|url
argument_list|,
name|createTimeoutConstraints
argument_list|(
name|timeout
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|long
name|getLastModified
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|TimeoutConstraint
name|timeoutConstraint
parameter_list|)
block|{
specifier|final
name|URLHandler
name|handler
init|=
name|this
operator|.
name|getHandler
argument_list|(
name|url
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|TimeoutConstrainedURLHandler
condition|)
block|{
return|return
operator|(
operator|(
name|TimeoutConstrainedURLHandler
operator|)
name|handler
operator|)
operator|.
name|getLastModified
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
argument_list|)
return|;
block|}
return|return
name|handler
operator|.
name|getLastModified
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
operator|!=
literal|null
condition|?
name|timeoutConstraint
operator|.
name|getConnectionTimeout
argument_list|()
else|:
literal|0
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|URLInfo
name|getURLInfo
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
block|{
return|return
name|this
operator|.
name|getURLInfo
argument_list|(
name|url
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|URLInfo
name|getURLInfo
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|int
name|timeout
parameter_list|)
block|{
return|return
name|this
operator|.
name|getURLInfo
argument_list|(
name|url
argument_list|,
name|createTimeoutConstraints
argument_list|(
name|timeout
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|URLInfo
name|getURLInfo
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|TimeoutConstraint
name|timeoutConstraint
parameter_list|)
block|{
specifier|final
name|URLHandler
name|handler
init|=
name|this
operator|.
name|getHandler
argument_list|(
name|url
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|TimeoutConstrainedURLHandler
condition|)
block|{
return|return
operator|(
operator|(
name|TimeoutConstrainedURLHandler
operator|)
name|handler
operator|)
operator|.
name|getURLInfo
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
argument_list|)
return|;
block|}
return|return
name|handler
operator|.
name|getURLInfo
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
operator|!=
literal|null
condition|?
name|timeoutConstraint
operator|.
name|getConnectionTimeout
argument_list|()
else|:
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|openStream
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|openStream
argument_list|(
name|url
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|InputStream
name|openStream
parameter_list|(
specifier|final
name|URL
name|url
parameter_list|,
specifier|final
name|TimeoutConstraint
name|timeoutConstraint
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|URLHandler
name|handler
init|=
name|this
operator|.
name|getHandler
argument_list|(
name|url
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|TimeoutConstrainedURLHandler
condition|)
block|{
return|return
operator|(
operator|(
name|TimeoutConstrainedURLHandler
operator|)
name|handler
operator|)
operator|.
name|openStream
argument_list|(
name|url
argument_list|,
name|timeoutConstraint
argument_list|)
return|;
block|}
return|return
name|handler
operator|.
name|openStream
argument_list|(
name|url
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|download
parameter_list|(
specifier|final
name|URL
name|src
parameter_list|,
specifier|final
name|File
name|dest
parameter_list|,
specifier|final
name|CopyProgressListener
name|l
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|download
argument_list|(
name|src
argument_list|,
name|dest
argument_list|,
name|l
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|void
name|download
parameter_list|(
specifier|final
name|URL
name|src
parameter_list|,
specifier|final
name|File
name|dest
parameter_list|,
specifier|final
name|CopyProgressListener
name|listener
parameter_list|,
specifier|final
name|TimeoutConstraint
name|timeoutConstraint
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|URLHandler
name|handler
init|=
name|this
operator|.
name|getHandler
argument_list|(
name|src
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|TimeoutConstrainedURLHandler
condition|)
block|{
operator|(
operator|(
name|TimeoutConstrainedURLHandler
operator|)
name|handler
operator|)
operator|.
name|download
argument_list|(
name|src
argument_list|,
name|dest
argument_list|,
name|listener
argument_list|,
name|timeoutConstraint
argument_list|)
expr_stmt|;
return|return;
block|}
name|handler
operator|.
name|download
argument_list|(
name|src
argument_list|,
name|dest
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|upload
parameter_list|(
specifier|final
name|File
name|src
parameter_list|,
specifier|final
name|URL
name|dest
parameter_list|,
specifier|final
name|CopyProgressListener
name|l
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|upload
argument_list|(
name|src
argument_list|,
name|dest
argument_list|,
name|l
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Override
specifier|public
name|void
name|upload
parameter_list|(
specifier|final
name|File
name|src
parameter_list|,
specifier|final
name|URL
name|dest
parameter_list|,
specifier|final
name|CopyProgressListener
name|listener
parameter_list|,
specifier|final
name|TimeoutConstraint
name|timeoutConstraint
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|URLHandler
name|handler
init|=
name|this
operator|.
name|getHandler
argument_list|(
name|dest
operator|.
name|getProtocol
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|handler
operator|instanceof
name|TimeoutConstrainedURLHandler
condition|)
block|{
operator|(
operator|(
name|TimeoutConstrainedURLHandler
operator|)
name|handler
operator|)
operator|.
name|upload
argument_list|(
name|src
argument_list|,
name|dest
argument_list|,
name|listener
argument_list|,
name|timeoutConstraint
argument_list|)
expr_stmt|;
return|return;
block|}
name|handler
operator|.
name|upload
argument_list|(
name|src
argument_list|,
name|dest
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|void
name|setRequestMethod
parameter_list|(
name|int
name|requestMethod
parameter_list|)
block|{
name|defaultHandler
operator|.
name|setRequestMethod
argument_list|(
name|requestMethod
argument_list|)
expr_stmt|;
for|for
control|(
name|URLHandler
name|handler
range|:
name|handlers
operator|.
name|values
argument_list|()
control|)
block|{
name|handler
operator|.
name|setRequestMethod
argument_list|(
name|requestMethod
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|void
name|setDownloader
parameter_list|(
name|String
name|protocol
parameter_list|,
name|URLHandler
name|downloader
parameter_list|)
block|{
name|handlers
operator|.
name|put
argument_list|(
name|protocol
argument_list|,
name|downloader
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|URLHandler
name|getHandler
parameter_list|(
name|String
name|protocol
parameter_list|)
block|{
name|URLHandler
name|downloader
init|=
name|handlers
operator|.
name|get
argument_list|(
name|protocol
argument_list|)
decl_stmt|;
return|return
name|downloader
operator|==
literal|null
condition|?
name|defaultHandler
else|:
name|downloader
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|URLHandler
name|getDefault
parameter_list|()
block|{
return|return
name|defaultHandler
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|void
name|setDefault
parameter_list|(
name|URLHandler
name|default1
parameter_list|)
block|{
name|defaultHandler
operator|=
name|default1
expr_stmt|;
block|}
specifier|private
specifier|static
name|TimeoutConstraint
name|createTimeoutConstraints
parameter_list|(
specifier|final
name|int
name|connectionTimeout
parameter_list|)
block|{
return|return
operator|new
name|TimeoutConstraint
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|int
name|getConnectionTimeout
parameter_list|()
block|{
return|return
name|connectionTimeout
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getReadTimeout
parameter_list|()
block|{
return|return
operator|-
literal|1
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

