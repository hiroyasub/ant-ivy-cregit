begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|cache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|deliver
operator|.
name|DeliverOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|deliver
operator|.
name|PublishingDependencyRevisionResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|Artifact
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|descriptor
operator|.
name|ModuleDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|module
operator|.
name|id
operator|.
name|ModuleRevisionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|publish
operator|.
name|PublishOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|report
operator|.
name|ArtifactDownloadReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|report
operator|.
name|ResolveReport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|IvyNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolveOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|resolve
operator|.
name|ResolvedModuleRevision
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|retrieve
operator|.
name|RetrieveOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|search
operator|.
name|ModuleEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|search
operator|.
name|OrganisationEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|core
operator|.
name|search
operator|.
name|RevisionEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|matcher
operator|.
name|PatternMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|plugins
operator|.
name|resolver
operator|.
name|DependencyResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|filter
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|util
operator|.
name|filter
operator|.
name|FilterHelper
import|;
end_import

begin_comment
comment|/**  * This class can be used for easy migration from Ivy 1.4 API. Indeed, Ivy 2.0 API has changed  * substantially, so it can take time to migrate existing code using Ivy 1.4 API to the new API.  * Using this class it's really easy: replace your instance of Ivy by an instance of this class. For  * instance, where you were doing: Ivy ivy = new Ivy(); do instead: Ivy14 ivy = new Ivy14(); And  * that should be enough in most cases!  */
end_comment

begin_class
specifier|public
class|class
name|Ivy14
block|{
specifier|private
name|Ivy
name|_ivy
decl_stmt|;
specifier|public
name|Ivy14
parameter_list|()
block|{
name|this
argument_list|(
name|Ivy
operator|.
name|newInstance
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Ivy14
parameter_list|(
name|Ivy
name|ivy
parameter_list|)
block|{
name|_ivy
operator|=
name|ivy
expr_stmt|;
block|}
specifier|public
name|boolean
name|check
parameter_list|(
name|URL
name|ivyFile
parameter_list|,
name|String
name|resolvername
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|check
argument_list|(
name|ivyFile
argument_list|,
name|resolvername
argument_list|)
return|;
block|}
specifier|public
name|void
name|configure
parameter_list|(
name|File
name|settingsFile
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|_ivy
operator|.
name|configure
argument_list|(
name|settingsFile
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|configure
parameter_list|(
name|URL
name|settingsURL
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|_ivy
operator|.
name|configure
argument_list|(
name|settingsURL
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|configureDefault
parameter_list|()
throws|throws
name|ParseException
throws|,
name|IOException
block|{
name|_ivy
operator|.
name|configureDefault
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|deliver
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
name|revision
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destIvyPattern
parameter_list|,
name|String
name|status
parameter_list|,
name|Date
name|pubdate
parameter_list|,
name|PublishingDependencyRevisionResolver
name|pdrResolver
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|resolveDynamicRevisions
parameter_list|)
throws|throws
name|IOException
throws|,
name|ParseException
block|{
name|_ivy
operator|.
name|deliver
argument_list|(
name|mrid
argument_list|,
name|revision
argument_list|,
name|destIvyPattern
argument_list|,
operator|new
name|DeliverOptions
argument_list|(
name|status
argument_list|,
name|pubdate
argument_list|,
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|,
name|pdrResolver
argument_list|,
name|validate
argument_list|,
name|resolveDynamicRevisions
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|deliver
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
name|revision
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destIvyPattern
parameter_list|,
name|String
name|status
parameter_list|,
name|Date
name|pubdate
parameter_list|,
name|PublishingDependencyRevisionResolver
name|pdrResolver
parameter_list|,
name|boolean
name|validate
parameter_list|)
throws|throws
name|IOException
throws|,
name|ParseException
block|{
name|deliver
argument_list|(
name|mrid
argument_list|,
name|revision
argument_list|,
name|cache
argument_list|,
name|destIvyPattern
argument_list|,
name|status
argument_list|,
name|pubdate
argument_list|,
name|pdrResolver
argument_list|,
name|validate
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
name|determineArtifactsToCopy
parameter_list|(
name|ModuleId
name|moduleId
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destFilePattern
parameter_list|,
name|String
name|destIvyPattern
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|getRetrieveEngine
argument_list|()
operator|.
name|determineArtifactsToCopy
argument_list|(
operator|new
name|ModuleRevisionId
argument_list|(
name|moduleId
argument_list|,
name|Ivy
operator|.
name|getWorkingRevision
argument_list|()
argument_list|)
argument_list|,
name|destFilePattern
argument_list|,
operator|new
name|RetrieveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|)
operator|.
name|setDestIvyPattern
argument_list|(
name|destIvyPattern
argument_list|)
operator|.
name|setArtifactFilter
argument_list|(
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Map
name|determineArtifactsToCopy
parameter_list|(
name|ModuleId
name|moduleId
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destFilePattern
parameter_list|,
name|String
name|destIvyPattern
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|getRetrieveEngine
argument_list|()
operator|.
name|determineArtifactsToCopy
argument_list|(
operator|new
name|ModuleRevisionId
argument_list|(
name|moduleId
argument_list|,
name|Ivy
operator|.
name|getWorkingRevision
argument_list|()
argument_list|)
argument_list|,
name|destFilePattern
argument_list|,
operator|new
name|RetrieveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|)
operator|.
name|setDestIvyPattern
argument_list|(
name|destIvyPattern
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ArtifactDownloadReport
name|download
parameter_list|(
name|Artifact
name|artifact
parameter_list|,
name|File
name|cache
parameter_list|,
name|boolean
name|useOrigin
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|getResolveEngine
argument_list|()
operator|.
name|download
argument_list|(
name|artifact
argument_list|,
name|_ivy
operator|.
name|getCacheManager
argument_list|(
name|cache
argument_list|)
argument_list|,
name|useOrigin
argument_list|)
return|;
block|}
specifier|public
name|void
name|downloadArtifacts
parameter_list|(
name|ResolveReport
name|report
parameter_list|,
name|CacheManager
name|cacheManager
parameter_list|,
name|boolean
name|useOrigin
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
block|{
name|_ivy
operator|.
name|getResolveEngine
argument_list|()
operator|.
name|downloadArtifacts
argument_list|(
name|report
argument_list|,
name|cacheManager
argument_list|,
name|useOrigin
argument_list|,
name|artifactFilter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ResolvedModuleRevision
name|findModule
parameter_list|(
name|ModuleRevisionId
name|id
parameter_list|)
block|{
name|ResolveOptions
name|options
init|=
operator|new
name|ResolveOptions
argument_list|()
decl_stmt|;
name|options
operator|.
name|setValidate
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|options
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|_ivy
operator|.
name|getResolveEngine
argument_list|()
operator|.
name|findModule
argument_list|(
name|id
argument_list|,
name|options
argument_list|)
return|;
block|}
specifier|public
name|IvyNode
index|[]
name|getDependencies
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|ResolveReport
name|report
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|transitive
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|getResolveEngine
argument_list|()
operator|.
name|getDependencies
argument_list|(
name|md
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
literal|false
argument_list|,
name|transitive
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|FilterHelper
operator|.
name|NO_FILTER
argument_list|)
argument_list|,
name|report
argument_list|)
return|;
block|}
specifier|public
name|IvyNode
index|[]
name|getDependencies
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|ResolveReport
name|report
parameter_list|,
name|boolean
name|validate
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|getResolveEngine
argument_list|()
operator|.
name|getDependencies
argument_list|(
name|md
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|FilterHelper
operator|.
name|NO_FILTER
argument_list|)
argument_list|,
name|report
argument_list|)
return|;
block|}
specifier|public
name|IvyNode
index|[]
name|getDependencies
parameter_list|(
name|URL
name|ivySource
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|getResolveEngine
argument_list|()
operator|.
name|getDependencies
argument_list|(
name|ivySource
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|FilterHelper
operator|.
name|NO_FILTER
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|String
name|getVariable
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|getVariable
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|install
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
name|from
parameter_list|,
name|String
name|to
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|overwrite
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|matcherName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|_ivy
operator|.
name|install
argument_list|(
name|mrid
argument_list|,
name|from
argument_list|,
name|to
argument_list|,
name|transitive
argument_list|,
name|validate
argument_list|,
name|overwrite
argument_list|,
name|artifactFilter
argument_list|,
name|cache
argument_list|,
name|matcherName
argument_list|)
return|;
block|}
specifier|public
name|void
name|interrupt
parameter_list|()
block|{
name|_ivy
operator|.
name|interrupt
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|interrupt
parameter_list|(
name|Thread
name|operatingThread
parameter_list|)
block|{
name|_ivy
operator|.
name|interrupt
argument_list|(
name|operatingThread
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isInterrupted
parameter_list|()
block|{
return|return
name|_ivy
operator|.
name|isInterrupted
argument_list|()
return|;
block|}
specifier|public
name|ModuleEntry
index|[]
name|listModuleEntries
parameter_list|(
name|OrganisationEntry
name|org
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|listModuleEntries
argument_list|(
name|org
argument_list|)
return|;
block|}
specifier|public
name|ModuleId
index|[]
name|listModules
parameter_list|(
name|ModuleId
name|criteria
parameter_list|,
name|PatternMatcher
name|matcher
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|listModules
argument_list|(
name|criteria
argument_list|,
name|matcher
argument_list|)
return|;
block|}
specifier|public
name|ModuleRevisionId
index|[]
name|listModules
parameter_list|(
name|ModuleRevisionId
name|criteria
parameter_list|,
name|PatternMatcher
name|matcher
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|listModules
argument_list|(
name|criteria
argument_list|,
name|matcher
argument_list|)
return|;
block|}
specifier|public
name|String
index|[]
name|listModules
parameter_list|(
name|String
name|org
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|listModules
argument_list|(
name|org
argument_list|)
return|;
block|}
specifier|public
name|OrganisationEntry
index|[]
name|listOrganisationEntries
parameter_list|()
block|{
return|return
name|_ivy
operator|.
name|listOrganisationEntries
argument_list|()
return|;
block|}
specifier|public
name|String
index|[]
name|listOrganisations
parameter_list|()
block|{
return|return
name|_ivy
operator|.
name|listOrganisations
argument_list|()
return|;
block|}
specifier|public
name|RevisionEntry
index|[]
name|listRevisionEntries
parameter_list|(
name|ModuleEntry
name|module
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|listRevisionEntries
argument_list|(
name|module
argument_list|)
return|;
block|}
specifier|public
name|String
index|[]
name|listRevisions
parameter_list|(
name|String
name|org
parameter_list|,
name|String
name|module
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|listRevisions
argument_list|(
name|org
argument_list|,
name|module
argument_list|)
return|;
block|}
specifier|public
name|String
index|[]
name|listTokenValues
parameter_list|(
name|String
name|token
parameter_list|,
name|Map
name|otherTokenValues
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|listTokenValues
argument_list|(
name|token
argument_list|,
name|otherTokenValues
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|publish
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|,
name|DependencyResolver
name|resolver
parameter_list|,
name|Collection
name|srcArtifactPattern
parameter_list|,
name|String
name|srcIvyPattern
parameter_list|,
name|Artifact
index|[]
name|extraArtifacts
parameter_list|,
name|boolean
name|overwrite
parameter_list|,
name|String
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|_ivy
operator|.
name|getPublishEngine
argument_list|()
operator|.
name|publish
argument_list|(
name|md
argument_list|,
name|srcArtifactPattern
argument_list|,
name|resolver
argument_list|,
operator|new
name|PublishOptions
argument_list|()
operator|.
name|setSrcIvyPattern
argument_list|(
name|srcIvyPattern
argument_list|)
operator|.
name|setExtraArtifacts
argument_list|(
name|extraArtifacts
argument_list|)
operator|.
name|setOverwrite
argument_list|(
name|overwrite
argument_list|)
operator|.
name|setConfs
argument_list|(
name|splitConfs
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|publish
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
name|pubrevision
parameter_list|,
name|File
name|cache
parameter_list|,
name|Collection
name|srcArtifactPattern
parameter_list|,
name|String
name|resolverName
parameter_list|,
name|String
name|srcIvyPattern
parameter_list|,
name|String
name|status
parameter_list|,
name|Date
name|pubdate
parameter_list|,
name|Artifact
index|[]
name|extraArtifacts
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|overwrite
parameter_list|,
name|boolean
name|update
parameter_list|,
name|String
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|_ivy
operator|.
name|publish
argument_list|(
name|mrid
argument_list|,
name|srcArtifactPattern
argument_list|,
name|resolverName
argument_list|,
operator|new
name|PublishOptions
argument_list|()
operator|.
name|setCache
argument_list|(
name|_ivy
operator|.
name|getCacheManager
argument_list|(
name|cache
operator|==
literal|null
condition|?
name|_ivy
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultCache
argument_list|()
else|:
name|cache
argument_list|)
argument_list|)
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
operator|.
name|setPubdate
argument_list|(
name|pubdate
argument_list|)
operator|.
name|setPubrevision
argument_list|(
name|pubrevision
argument_list|)
operator|.
name|setSrcIvyPattern
argument_list|(
name|srcIvyPattern
argument_list|)
operator|.
name|setExtraArtifacts
argument_list|(
name|extraArtifacts
argument_list|)
operator|.
name|setUpdate
argument_list|(
name|update
argument_list|)
operator|.
name|setValidate
argument_list|(
name|validate
argument_list|)
operator|.
name|setOverwrite
argument_list|(
name|overwrite
argument_list|)
operator|.
name|setConfs
argument_list|(
name|splitConfs
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|publish
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
name|pubrevision
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|srcArtifactPattern
parameter_list|,
name|String
name|resolverName
parameter_list|,
name|String
name|srcIvyPattern
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|overwrite
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|_ivy
operator|.
name|publish
argument_list|(
name|mrid
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
name|srcArtifactPattern
argument_list|)
argument_list|,
name|resolverName
argument_list|,
operator|new
name|PublishOptions
argument_list|()
operator|.
name|setCache
argument_list|(
name|_ivy
operator|.
name|getCacheManager
argument_list|(
name|cache
operator|==
literal|null
condition|?
name|_ivy
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultCache
argument_list|()
else|:
name|cache
argument_list|)
argument_list|)
operator|.
name|setPubrevision
argument_list|(
name|pubrevision
argument_list|)
operator|.
name|setSrcIvyPattern
argument_list|(
name|srcIvyPattern
argument_list|)
operator|.
name|setValidate
argument_list|(
name|validate
argument_list|)
operator|.
name|setOverwrite
argument_list|(
name|overwrite
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|publish
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
name|pubrevision
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|srcArtifactPattern
parameter_list|,
name|String
name|resolverName
parameter_list|,
name|String
name|srcIvyPattern
parameter_list|,
name|boolean
name|validate
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|_ivy
operator|.
name|publish
argument_list|(
name|mrid
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
name|srcArtifactPattern
argument_list|)
argument_list|,
name|resolverName
argument_list|,
operator|new
name|PublishOptions
argument_list|()
operator|.
name|setCache
argument_list|(
name|_ivy
operator|.
name|getCacheManager
argument_list|(
name|cache
operator|==
literal|null
condition|?
name|_ivy
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultCache
argument_list|()
else|:
name|cache
argument_list|)
argument_list|)
operator|.
name|setPubrevision
argument_list|(
name|pubrevision
argument_list|)
operator|.
name|setSrcIvyPattern
argument_list|(
name|srcIvyPattern
argument_list|)
operator|.
name|setValidate
argument_list|(
name|validate
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|publish
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
name|pubrevision
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|srcArtifactPattern
parameter_list|,
name|String
name|resolverName
parameter_list|,
name|String
name|srcIvyPattern
parameter_list|,
name|String
name|status
parameter_list|,
name|Date
name|pubdate
parameter_list|,
name|Artifact
index|[]
name|extraArtifacts
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|overwrite
parameter_list|,
name|boolean
name|update
parameter_list|,
name|String
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|_ivy
operator|.
name|publish
argument_list|(
name|mrid
argument_list|,
name|Collections
operator|.
name|singleton
argument_list|(
name|srcArtifactPattern
argument_list|)
argument_list|,
name|resolverName
argument_list|,
operator|new
name|PublishOptions
argument_list|()
operator|.
name|setCache
argument_list|(
name|_ivy
operator|.
name|getCacheManager
argument_list|(
name|cache
operator|==
literal|null
condition|?
name|_ivy
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultCache
argument_list|()
else|:
name|cache
argument_list|)
argument_list|)
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
operator|.
name|setPubdate
argument_list|(
name|pubdate
argument_list|)
operator|.
name|setPubrevision
argument_list|(
name|pubrevision
argument_list|)
operator|.
name|setSrcIvyPattern
argument_list|(
name|srcIvyPattern
argument_list|)
operator|.
name|setExtraArtifacts
argument_list|(
name|extraArtifacts
argument_list|)
operator|.
name|setUpdate
argument_list|(
name|update
argument_list|)
operator|.
name|setValidate
argument_list|(
name|validate
argument_list|)
operator|.
name|setOverwrite
argument_list|(
name|overwrite
argument_list|)
operator|.
name|setConfs
argument_list|(
name|splitConfs
argument_list|(
name|conf
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|File
name|ivySource
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|ivySource
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|boolean
name|useOrigin
parameter_list|,
name|boolean
name|download
parameter_list|,
name|boolean
name|outputReport
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
throws|,
name|FileNotFoundException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|md
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
name|transitive
argument_list|,
name|useOrigin
argument_list|,
name|download
argument_list|,
name|outputReport
argument_list|,
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|ResolveOptions
name|newResolveOptions
parameter_list|(
name|String
index|[]
name|confs
parameter_list|,
name|String
name|revision
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|boolean
name|useOrigin
parameter_list|,
name|boolean
name|download
parameter_list|,
name|boolean
name|outputReport
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
block|{
return|return
operator|new
name|ResolveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setRevision
argument_list|(
name|revision
argument_list|)
operator|.
name|setCache
argument_list|(
name|_ivy
operator|.
name|getCacheManager
argument_list|(
name|cache
operator|==
literal|null
condition|?
name|_ivy
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultCache
argument_list|()
else|:
name|cache
argument_list|)
argument_list|)
operator|.
name|setValidate
argument_list|(
name|validate
argument_list|)
operator|.
name|setUseCacheOnly
argument_list|(
name|useCacheOnly
argument_list|)
operator|.
name|setTransitive
argument_list|(
name|transitive
argument_list|)
operator|.
name|setUseOrigin
argument_list|(
name|useOrigin
argument_list|)
operator|.
name|setDownload
argument_list|(
name|download
argument_list|)
operator|.
name|setOutputReport
argument_list|(
name|outputReport
argument_list|)
operator|.
name|setArtifactFilter
argument_list|(
name|artifactFilter
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|boolean
name|download
parameter_list|,
name|boolean
name|outputReport
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
throws|,
name|FileNotFoundException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|md
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
name|transitive
argument_list|,
literal|false
argument_list|,
name|download
argument_list|,
name|outputReport
argument_list|,
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
throws|,
name|FileNotFoundException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|md
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
name|transitive
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|ModuleDescriptor
name|md
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
throws|,
name|FileNotFoundException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|md
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|boolean
name|changing
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|boolean
name|useOrigin
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|mrid
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
name|transitive
argument_list|,
name|useOrigin
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|artifactFilter
argument_list|)
argument_list|,
name|changing
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|boolean
name|changing
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|mrid
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
name|transitive
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|artifactFilter
argument_list|)
argument_list|,
name|changing
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|ModuleRevisionId
name|mrid
parameter_list|,
name|String
index|[]
name|confs
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|mrid
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
literal|null
argument_list|,
name|_ivy
operator|.
name|getSettings
argument_list|()
operator|.
name|getDefaultCache
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|FilterHelper
operator|.
name|NO_FILTER
argument_list|)
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|URL
name|ivySource
parameter_list|,
name|String
name|revision
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|boolean
name|useOrigin
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|ivySource
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
name|revision
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
name|transitive
argument_list|,
name|useOrigin
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|URL
name|ivySource
parameter_list|,
name|String
name|revision
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|boolean
name|transitive
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|ivySource
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
name|revision
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
name|transitive
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|URL
name|ivySource
parameter_list|,
name|String
name|revision
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|ivySource
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
name|revision
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|URL
name|ivySource
parameter_list|,
name|String
name|revision
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|,
name|boolean
name|useCacheOnly
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|ivySource
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
name|revision
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
name|useCacheOnly
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|FilterHelper
operator|.
name|NO_FILTER
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|URL
name|ivySource
parameter_list|,
name|String
name|revision
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|Date
name|date
parameter_list|,
name|boolean
name|validate
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|ivySource
argument_list|,
name|newResolveOptions
argument_list|(
name|confs
argument_list|,
name|revision
argument_list|,
name|cache
argument_list|,
name|date
argument_list|,
name|validate
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
name|FilterHelper
operator|.
name|NO_FILTER
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResolveReport
name|resolve
parameter_list|(
name|URL
name|ivySource
parameter_list|)
throws|throws
name|ParseException
throws|,
name|IOException
block|{
return|return
name|_ivy
operator|.
name|resolve
argument_list|(
name|ivySource
argument_list|)
return|;
block|}
specifier|public
name|int
name|retrieve
parameter_list|(
name|ModuleId
name|moduleId
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destFilePattern
parameter_list|,
name|String
name|destIvyPattern
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|,
name|boolean
name|sync
parameter_list|,
name|boolean
name|useOrigin
parameter_list|,
name|boolean
name|makeSymlinks
parameter_list|)
block|{
try|try
block|{
return|return
name|_ivy
operator|.
name|retrieve
argument_list|(
operator|new
name|ModuleRevisionId
argument_list|(
name|moduleId
argument_list|,
name|Ivy
operator|.
name|getWorkingRevision
argument_list|()
argument_list|)
argument_list|,
name|destFilePattern
argument_list|,
operator|new
name|RetrieveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|)
operator|.
name|setDestIvyPattern
argument_list|(
name|destIvyPattern
argument_list|)
operator|.
name|setArtifactFilter
argument_list|(
name|artifactFilter
argument_list|)
operator|.
name|setSync
argument_list|(
name|sync
argument_list|)
operator|.
name|setUseOrigin
argument_list|(
name|useOrigin
argument_list|)
operator|.
name|setMakeSymlinks
argument_list|(
name|makeSymlinks
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|int
name|retrieve
parameter_list|(
name|ModuleId
name|moduleId
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destFilePattern
parameter_list|,
name|String
name|destIvyPattern
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|,
name|boolean
name|sync
parameter_list|,
name|boolean
name|useOrigin
parameter_list|)
block|{
try|try
block|{
return|return
name|_ivy
operator|.
name|retrieve
argument_list|(
operator|new
name|ModuleRevisionId
argument_list|(
name|moduleId
argument_list|,
name|Ivy
operator|.
name|getWorkingRevision
argument_list|()
argument_list|)
argument_list|,
name|destFilePattern
argument_list|,
operator|new
name|RetrieveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|)
operator|.
name|setDestIvyPattern
argument_list|(
name|destIvyPattern
argument_list|)
operator|.
name|setArtifactFilter
argument_list|(
name|artifactFilter
argument_list|)
operator|.
name|setSync
argument_list|(
name|sync
argument_list|)
operator|.
name|setUseOrigin
argument_list|(
name|useOrigin
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|int
name|retrieve
parameter_list|(
name|ModuleId
name|moduleId
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destFilePattern
parameter_list|,
name|String
name|destIvyPattern
parameter_list|,
name|Filter
name|artifactFilter
parameter_list|)
block|{
try|try
block|{
return|return
name|_ivy
operator|.
name|retrieve
argument_list|(
operator|new
name|ModuleRevisionId
argument_list|(
name|moduleId
argument_list|,
name|Ivy
operator|.
name|getWorkingRevision
argument_list|()
argument_list|)
argument_list|,
name|destFilePattern
argument_list|,
operator|new
name|RetrieveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|)
operator|.
name|setDestIvyPattern
argument_list|(
name|destIvyPattern
argument_list|)
operator|.
name|setArtifactFilter
argument_list|(
name|artifactFilter
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|int
name|retrieve
parameter_list|(
name|ModuleId
name|moduleId
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destFilePattern
parameter_list|,
name|String
name|destIvyPattern
parameter_list|)
block|{
try|try
block|{
return|return
name|_ivy
operator|.
name|retrieve
argument_list|(
operator|new
name|ModuleRevisionId
argument_list|(
name|moduleId
argument_list|,
name|Ivy
operator|.
name|getWorkingRevision
argument_list|()
argument_list|)
argument_list|,
name|destFilePattern
argument_list|,
operator|new
name|RetrieveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|)
operator|.
name|setDestIvyPattern
argument_list|(
name|destIvyPattern
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|int
name|retrieve
parameter_list|(
name|ModuleId
name|moduleId
parameter_list|,
name|String
index|[]
name|confs
parameter_list|,
name|File
name|cache
parameter_list|,
name|String
name|destFilePattern
parameter_list|)
block|{
try|try
block|{
return|return
name|_ivy
operator|.
name|retrieve
argument_list|(
operator|new
name|ModuleRevisionId
argument_list|(
name|moduleId
argument_list|,
name|Ivy
operator|.
name|getWorkingRevision
argument_list|()
argument_list|)
argument_list|,
name|destFilePattern
argument_list|,
operator|new
name|RetrieveOptions
argument_list|()
operator|.
name|setConfs
argument_list|(
name|confs
argument_list|)
operator|.
name|setCache
argument_list|(
name|CacheManager
operator|.
name|getInstance
argument_list|(
name|_ivy
operator|.
name|getSettings
argument_list|()
argument_list|,
name|cache
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|setVariable
parameter_list|(
name|String
name|varName
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|_ivy
operator|.
name|setVariable
argument_list|(
name|varName
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
name|sortModuleDescriptors
parameter_list|(
name|Collection
name|moduleDescriptors
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|sortModuleDescriptors
argument_list|(
name|moduleDescriptors
argument_list|)
return|;
block|}
specifier|public
name|List
name|sortNodes
parameter_list|(
name|Collection
name|nodes
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|sortNodes
argument_list|(
name|nodes
argument_list|)
return|;
block|}
specifier|public
name|String
name|substitute
parameter_list|(
name|String
name|str
parameter_list|)
block|{
return|return
name|_ivy
operator|.
name|substitute
argument_list|(
name|str
argument_list|)
return|;
block|}
specifier|private
name|String
index|[]
name|splitConfs
parameter_list|(
name|String
name|conf
parameter_list|)
block|{
if|if
condition|(
name|conf
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|conf
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
name|String
index|[]
name|confs
init|=
name|conf
operator|.
name|split
argument_list|(
literal|","
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|confs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|confs
index|[
name|i
index|]
operator|=
name|confs
index|[
name|i
index|]
operator|.
name|trim
argument_list|()
expr_stmt|;
block|}
return|return
name|confs
return|;
block|}
block|}
end_class

end_unit

