begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|ivy
operator|.
name|extendable
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|UnmodifiableExtendableItem
implements|implements
name|ExtendableItem
block|{
specifier|private
name|Map
name|_attributes
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
name|_unmodifiableAttributesView
init|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|_attributes
argument_list|)
decl_stmt|;
specifier|private
name|Map
name|_stdAttributes
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
name|_unmodifiableStdAttributesView
init|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|_stdAttributes
argument_list|)
decl_stmt|;
specifier|private
name|Map
name|_extraAttributes
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
specifier|private
name|Map
name|_unmodifiableExtraAttributesView
init|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|_extraAttributes
argument_list|)
decl_stmt|;
specifier|public
name|UnmodifiableExtendableItem
parameter_list|(
name|Map
name|stdAttributes
parameter_list|,
name|Map
name|extraAttributes
parameter_list|)
block|{
if|if
condition|(
name|stdAttributes
operator|!=
literal|null
condition|)
block|{
name|_attributes
operator|.
name|putAll
argument_list|(
name|stdAttributes
argument_list|)
expr_stmt|;
name|_stdAttributes
operator|.
name|putAll
argument_list|(
name|stdAttributes
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|extraAttributes
operator|!=
literal|null
condition|)
block|{
name|_attributes
operator|.
name|putAll
argument_list|(
name|extraAttributes
argument_list|)
expr_stmt|;
name|_extraAttributes
operator|.
name|putAll
argument_list|(
name|extraAttributes
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getAttribute
parameter_list|(
name|String
name|attName
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|_attributes
operator|.
name|get
argument_list|(
name|attName
argument_list|)
return|;
block|}
specifier|public
name|String
name|getExtraAttribute
parameter_list|(
name|String
name|attName
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|_extraAttributes
operator|.
name|get
argument_list|(
name|attName
argument_list|)
return|;
block|}
specifier|public
name|String
name|getStandardAttribute
parameter_list|(
name|String
name|attName
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|_stdAttributes
operator|.
name|get
argument_list|(
name|attName
argument_list|)
return|;
block|}
specifier|protected
name|void
name|setExtraAttribute
parameter_list|(
name|String
name|attName
parameter_list|,
name|String
name|attValue
parameter_list|)
block|{
name|setAttribute
argument_list|(
name|attName
argument_list|,
name|attValue
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setStandardAttribute
parameter_list|(
name|String
name|attName
parameter_list|,
name|String
name|attValue
parameter_list|)
block|{
name|setAttribute
argument_list|(
name|attName
argument_list|,
name|attValue
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|setAttribute
parameter_list|(
name|String
name|attName
parameter_list|,
name|String
name|attValue
parameter_list|,
name|boolean
name|extra
parameter_list|)
block|{
if|if
condition|(
name|extra
condition|)
block|{
name|_extraAttributes
operator|.
name|put
argument_list|(
name|attName
argument_list|,
name|attValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|_stdAttributes
operator|.
name|put
argument_list|(
name|attName
argument_list|,
name|attValue
argument_list|)
expr_stmt|;
block|}
name|_attributes
operator|.
name|put
argument_list|(
name|attName
argument_list|,
name|attValue
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
name|getAttributes
parameter_list|()
block|{
return|return
name|_unmodifiableAttributesView
return|;
block|}
specifier|public
name|Map
name|getStandardAttributes
parameter_list|()
block|{
return|return
name|_unmodifiableStdAttributesView
return|;
block|}
specifier|public
name|Map
name|getExtraAttributes
parameter_list|()
block|{
return|return
name|_unmodifiableExtraAttributesView
return|;
block|}
block|}
end_class

end_unit

