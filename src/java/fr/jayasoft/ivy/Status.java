begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * @author x.hanin  *  */
end_comment

begin_class
specifier|public
class|class
name|Status
block|{
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_STATUS
init|=
literal|"integration"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|STATUSES
init|=
operator|new
name|String
index|[]
block|{
literal|"release"
block|,
literal|"milestone"
block|,
literal|"integration"
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
index|[]
name|IS_INTEGRATION
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|true
block|}
decl_stmt|;
specifier|private
specifier|static
name|Map
name|_statusPriorityMap
decl_stmt|;
specifier|private
specifier|static
name|Map
name|_statusIntegrationMap
decl_stmt|;
static|static
block|{
name|_statusPriorityMap
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|STATUSES
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|_statusPriorityMap
operator|.
name|put
argument_list|(
name|STATUSES
index|[
name|i
index|]
argument_list|,
operator|new
name|Integer
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|_statusIntegrationMap
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|IS_INTEGRATION
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|_statusIntegrationMap
operator|.
name|put
argument_list|(
name|STATUSES
index|[
name|i
index|]
argument_list|,
operator|new
name|Boolean
argument_list|(
name|IS_INTEGRATION
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|int
name|getPriority
parameter_list|(
name|String
name|status
parameter_list|)
block|{
name|Integer
name|priority
init|=
operator|(
name|Integer
operator|)
name|_statusPriorityMap
operator|.
name|get
argument_list|(
name|status
argument_list|)
decl_stmt|;
if|if
condition|(
name|priority
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"unknown status "
operator|+
name|status
argument_list|)
throw|;
block|}
return|return
name|priority
operator|.
name|intValue
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isIntegration
parameter_list|(
name|String
name|status
parameter_list|)
block|{
name|Boolean
name|isIntegration
init|=
operator|(
name|Boolean
operator|)
name|_statusIntegrationMap
operator|.
name|get
argument_list|(
name|status
argument_list|)
decl_stmt|;
if|if
condition|(
name|isIntegration
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"unknown status "
operator|+
name|status
argument_list|)
throw|;
block|}
return|return
name|isIntegration
operator|.
name|booleanValue
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|String
name|getDeliveryStatusListString
parameter_list|()
block|{
comment|// TODO : use constants
return|return
literal|"milestone,release"
return|;
block|}
block|}
end_class

end_unit

