begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
package|;
end_package

begin_comment
comment|/**  * @author x.hanin  *  */
end_comment

begin_class
specifier|public
class|class
name|ModuleId
block|{
specifier|private
name|String
name|_organisation
decl_stmt|;
specifier|private
name|String
name|_name
decl_stmt|;
specifier|public
name|ModuleId
parameter_list|(
name|String
name|organisation
parameter_list|,
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"null name not allowed"
argument_list|)
throw|;
block|}
name|_organisation
operator|=
name|organisation
expr_stmt|;
name|_name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|_name
return|;
block|}
specifier|public
name|String
name|getOrganisation
parameter_list|()
block|{
return|return
name|_organisation
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|ModuleId
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ModuleId
name|other
init|=
operator|(
name|ModuleId
operator|)
name|obj
decl_stmt|;
return|return
name|other
operator|.
name|_organisation
operator|.
name|equals
argument_list|(
name|_organisation
argument_list|)
operator|&&
name|other
operator|.
name|_name
operator|.
name|equals
argument_list|(
name|_name
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|hash
init|=
literal|31
decl_stmt|;
name|hash
operator|=
name|hash
operator|*
literal|13
operator|+
name|_organisation
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|hash
operator|=
name|hash
operator|*
literal|13
operator|+
name|_name
operator|.
name|hashCode
argument_list|()
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"[ "
operator|+
name|_organisation
operator|+
literal|" | "
operator|+
name|_name
operator|+
literal|" ]"
return|;
block|}
block|}
end_class

end_unit

