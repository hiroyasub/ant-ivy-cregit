begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|conflict
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|IvyNode
import|;
end_import

begin_class
specifier|public
class|class
name|FixedConflictManager
extends|extends
name|AbstractConflictManager
block|{
specifier|private
name|Collection
name|_revs
decl_stmt|;
specifier|public
name|FixedConflictManager
parameter_list|(
name|String
index|[]
name|revs
parameter_list|)
block|{
name|_revs
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|revs
argument_list|)
expr_stmt|;
name|setName
argument_list|(
literal|"fixed"
operator|+
name|_revs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Collection
name|resolveConflicts
parameter_list|(
name|IvyNode
name|parent
parameter_list|,
name|Collection
name|conflicts
parameter_list|)
block|{
name|Collection
name|resolved
init|=
operator|new
name|ArrayList
argument_list|(
name|conflicts
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|conflicts
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|IvyNode
name|node
init|=
operator|(
name|IvyNode
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|String
name|revision
init|=
name|node
operator|.
name|getResolvedId
argument_list|()
operator|.
name|getRevision
argument_list|()
decl_stmt|;
if|if
condition|(
name|_revs
operator|.
name|contains
argument_list|(
name|revision
argument_list|)
condition|)
block|{
name|resolved
operator|.
name|add
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|resolved
return|;
block|}
specifier|public
name|Collection
name|getRevs
parameter_list|()
block|{
return|return
name|_revs
return|;
block|}
block|}
end_class

end_unit

