begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the licence found in LICENCE.TXT in the root directory of the project.  * Copyright Jayasoft 2005 - All rights reserved  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|url
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ListIterator
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|AbstractRepository
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|TransferEvent
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|url
operator|.
name|ApacheURLLister
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|util
operator|.
name|CopyProgressEvent
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|util
operator|.
name|CopyProgressListener
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|util
operator|.
name|FileUtil
import|;
end_import

begin_class
specifier|public
class|class
name|URLRepository
extends|extends
name|AbstractRepository
block|{
specifier|private
specifier|final
name|CopyProgressListener
name|_progress
init|=
operator|new
name|CopyProgressListener
argument_list|()
block|{
specifier|public
name|void
name|start
parameter_list|(
name|CopyProgressEvent
name|evt
parameter_list|)
block|{
name|fireTransferStarted
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|progress
parameter_list|(
name|CopyProgressEvent
name|evt
parameter_list|)
block|{
name|fireTransferProgress
argument_list|(
name|evt
operator|.
name|getBuffer
argument_list|()
argument_list|,
name|evt
operator|.
name|getReadBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|end
parameter_list|(
name|CopyProgressEvent
name|evt
parameter_list|)
block|{
name|fireTransferCompleted
argument_list|(
name|evt
operator|.
name|getBuffer
argument_list|()
argument_list|,
name|evt
operator|.
name|getReadBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
specifier|public
name|Resource
name|getResource
parameter_list|(
name|String
name|source
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|URLResource
argument_list|(
operator|new
name|URL
argument_list|(
name|source
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|void
name|get
parameter_list|(
name|String
name|source
parameter_list|,
name|File
name|destination
parameter_list|)
throws|throws
name|IOException
block|{
name|fireTransferInitiated
argument_list|(
name|getResource
argument_list|(
name|source
argument_list|)
argument_list|,
name|TransferEvent
operator|.
name|REQUEST_GET
argument_list|)
expr_stmt|;
try|try
block|{
name|FileUtil
operator|.
name|copy
argument_list|(
operator|new
name|URL
argument_list|(
name|source
argument_list|)
argument_list|,
name|destination
argument_list|,
name|_progress
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|fireTransferError
argument_list|(
name|ex
argument_list|)
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|ex
parameter_list|)
block|{
name|fireTransferError
argument_list|(
name|ex
argument_list|)
expr_stmt|;
throw|throw
name|ex
throw|;
block|}
block|}
specifier|public
name|void
name|put
parameter_list|(
name|File
name|source
parameter_list|,
name|String
name|destination
parameter_list|,
name|boolean
name|overwrite
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"URL repository is not able to put files for the moment"
argument_list|)
throw|;
block|}
specifier|private
name|ApacheURLLister
name|_lister
init|=
operator|new
name|ApacheURLLister
argument_list|()
decl_stmt|;
specifier|public
name|List
name|list
parameter_list|(
name|String
name|parent
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|parent
operator|.
name|startsWith
argument_list|(
literal|"http"
argument_list|)
condition|)
block|{
name|List
name|urls
init|=
name|_lister
operator|.
name|listAll
argument_list|(
operator|new
name|URL
argument_list|(
name|parent
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|urls
operator|!=
literal|null
condition|)
block|{
name|List
name|ret
init|=
operator|new
name|ArrayList
argument_list|(
name|urls
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|ListIterator
name|iter
init|=
name|urls
operator|.
name|listIterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|URL
name|url
init|=
operator|(
name|URL
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|ret
operator|.
name|add
argument_list|(
name|url
operator|.
name|toExternalForm
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
block|}
if|else if
condition|(
name|parent
operator|.
name|startsWith
argument_list|(
literal|"file"
argument_list|)
condition|)
block|{
name|String
name|path
init|=
operator|new
name|URL
argument_list|(
name|parent
argument_list|)
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|file
operator|.
name|exists
argument_list|()
operator|&&
name|file
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|String
index|[]
name|files
init|=
name|file
operator|.
name|list
argument_list|()
decl_stmt|;
name|List
name|ret
init|=
operator|new
name|ArrayList
argument_list|(
name|files
operator|.
name|length
argument_list|)
decl_stmt|;
name|URL
name|context
init|=
name|path
operator|.
name|endsWith
argument_list|(
literal|"/"
argument_list|)
condition|?
operator|new
name|URL
argument_list|(
name|parent
argument_list|)
else|:
operator|new
name|URL
argument_list|(
name|parent
operator|+
literal|"/"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|files
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|ret
operator|.
name|add
argument_list|(
operator|new
name|URL
argument_list|(
name|context
argument_list|,
name|files
index|[
name|i
index|]
argument_list|)
operator|.
name|toExternalForm
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
else|else
block|{
return|return
name|Collections
operator|.
name|EMPTY_LIST
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

