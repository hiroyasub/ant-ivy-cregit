begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the licence found in LICENCE.TXT in the root directory of the project.  * Copyright Jayasoft 2005 - All rights reserved  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|url
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|url
operator|.
name|URLHandlerRegistry
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|util
operator|.
name|Message
import|;
end_import

begin_class
specifier|public
class|class
name|URLResource
implements|implements
name|Resource
block|{
specifier|private
name|URL
name|_url
decl_stmt|;
specifier|private
name|boolean
name|_init
init|=
literal|false
decl_stmt|;
specifier|private
name|long
name|_lastModified
decl_stmt|;
specifier|private
name|long
name|_contentLength
decl_stmt|;
specifier|private
name|boolean
name|_exists
decl_stmt|;
specifier|public
name|URLResource
parameter_list|(
name|URL
name|url
parameter_list|)
block|{
name|_url
operator|=
name|url
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|_url
operator|.
name|toExternalForm
argument_list|()
return|;
block|}
specifier|public
name|long
name|getLastModified
parameter_list|()
block|{
if|if
condition|(
operator|!
name|_init
condition|)
block|{
name|init
argument_list|()
expr_stmt|;
block|}
return|return
name|_lastModified
return|;
block|}
specifier|private
name|void
name|init
parameter_list|()
block|{
name|URLConnection
name|con
init|=
literal|null
decl_stmt|;
try|try
block|{
name|_lastModified
operator|=
literal|0
expr_stmt|;
name|_contentLength
operator|=
literal|0
expr_stmt|;
name|_exists
operator|=
name|URLHandlerRegistry
operator|.
name|getDefault
argument_list|()
operator|.
name|isReachable
argument_list|(
name|_url
argument_list|)
expr_stmt|;
if|if
condition|(
name|_exists
condition|)
block|{
name|con
operator|=
name|_url
operator|.
name|openConnection
argument_list|()
expr_stmt|;
name|_lastModified
operator|=
name|con
operator|.
name|getLastModified
argument_list|()
expr_stmt|;
name|_contentLength
operator|=
name|con
operator|.
name|getContentLength
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Message
operator|.
name|verbose
argument_list|(
literal|"impossible to open connection to "
operator|+
name|_url
operator|+
literal|":"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|_exists
operator|=
literal|false
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|con
operator|instanceof
name|HttpURLConnection
condition|)
block|{
operator|(
operator|(
name|HttpURLConnection
operator|)
name|con
operator|)
operator|.
name|disconnect
argument_list|()
expr_stmt|;
block|}
block|}
name|_init
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|long
name|getContentLength
parameter_list|()
block|{
if|if
condition|(
operator|!
name|_init
condition|)
block|{
name|init
argument_list|()
expr_stmt|;
block|}
return|return
name|_contentLength
return|;
block|}
specifier|public
name|boolean
name|exists
parameter_list|()
block|{
if|if
condition|(
operator|!
name|_init
condition|)
block|{
name|init
argument_list|()
expr_stmt|;
block|}
return|return
name|_exists
return|;
block|}
specifier|public
name|URL
name|getURL
parameter_list|()
block|{
return|return
name|_url
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

