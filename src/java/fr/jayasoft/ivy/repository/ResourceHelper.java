begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the licence found in LICENCE.TXT in the root directory of the project.  * Copyright Jayasoft 2005 - All rights reserved  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|file
operator|.
name|FileResource
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|repository
operator|.
name|url
operator|.
name|URLResource
import|;
end_import

begin_class
specifier|public
class|class
name|ResourceHelper
block|{
specifier|public
specifier|static
name|boolean
name|equals
parameter_list|(
name|Resource
name|res
parameter_list|,
name|File
name|f
parameter_list|)
block|{
if|if
condition|(
name|res
operator|==
literal|null
operator|&&
name|f
operator|==
literal|null
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|res
operator|==
literal|null
operator|||
name|f
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|res
operator|instanceof
name|FileResource
condition|)
block|{
return|return
operator|new
name|File
argument_list|(
name|res
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|f
argument_list|)
return|;
block|}
if|else if
condition|(
name|res
operator|instanceof
name|URLResource
condition|)
block|{
try|try
block|{
return|return
name|f
operator|.
name|toURL
argument_list|()
operator|.
name|toExternalForm
argument_list|()
operator|.
name|equals
argument_list|(
name|res
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

