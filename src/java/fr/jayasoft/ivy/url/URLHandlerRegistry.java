begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * version 1.3.1  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|url
package|;
end_package

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|util
operator|.
name|Message
import|;
end_import

begin_comment
comment|/**  * @author Xavier Hanin  *  */
end_comment

begin_class
specifier|public
class|class
name|URLHandlerRegistry
block|{
specifier|private
specifier|static
name|URLHandler
name|_default
init|=
operator|new
name|BasicURLHandler
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|URLHandler
name|getDefault
parameter_list|()
block|{
return|return
name|_default
return|;
block|}
specifier|public
specifier|static
name|void
name|setDefault
parameter_list|(
name|URLHandler
name|def
parameter_list|)
block|{
name|_default
operator|=
name|def
expr_stmt|;
block|}
comment|/**      * This method is used to get appropriate http downloader      * dependening on Jakarta Commons HttpClient      * availability in classpath, or simply use jdk url      * handling in other cases.      *       * @param realm      * @param host      * @param userName      * @param passwd      *       * @return most accurate http downloader      */
specifier|public
specifier|static
name|URLHandler
name|getHttp
parameter_list|(
name|String
name|realm
parameter_list|,
name|String
name|host
parameter_list|,
name|String
name|userName
parameter_list|,
name|String
name|passwd
parameter_list|)
block|{
try|try
block|{
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.commons.httpclient.HttpClient"
argument_list|)
expr_stmt|;
name|Message
operator|.
name|verbose
argument_list|(
literal|"jakarta commons httpclient detected: using it for http downloading"
argument_list|)
expr_stmt|;
return|return
operator|new
name|HttpClientHandler
argument_list|(
name|realm
argument_list|,
name|host
argument_list|,
name|userName
argument_list|,
name|passwd
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
name|Message
operator|.
name|verbose
argument_list|(
literal|"jakarta commons httpclient not found: using jdk url handling"
argument_list|)
expr_stmt|;
return|return
operator|new
name|BasicURLHandler
argument_list|(
name|realm
argument_list|,
name|host
argument_list|,
name|userName
argument_list|,
name|passwd
argument_list|)
return|;
block|}
block|}
comment|/**      * This method is used to get appropriate http downloader      * dependening on Jakarta Commons HttpClient      * availability in classpath, or simply use jdk url      * handling in other cases.      *       * @param realm      * @param host      * @param userName      * @param passwd      *       * @return most accurate http downloader      */
specifier|public
specifier|static
name|URLHandler
name|getHttp
parameter_list|()
block|{
return|return
name|getHttp
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
block|}
end_class

end_unit

