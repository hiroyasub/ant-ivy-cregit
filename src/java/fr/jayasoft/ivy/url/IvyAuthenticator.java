begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * version 1.3.1  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|url
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Authenticator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|PasswordAuthentication
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|util
operator|.
name|Message
import|;
end_import

begin_comment
comment|/**  *   * @author Christian Riege  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|IvyAuthenticator
extends|extends
name|Authenticator
block|{
comment|/**      * A Map of Credentials objects keyed by the 'key' of the Credentials.      */
specifier|private
specifier|final
specifier|static
name|Map
name|keyring
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
comment|/**      * The sole instance.      */
specifier|public
specifier|final
specifier|static
name|IvyAuthenticator
name|INSTANCE
init|=
operator|new
name|IvyAuthenticator
argument_list|()
decl_stmt|;
comment|/**      * Private c'tor to prevent instantiation. Also installs this as the default      * Authenticator to use by the JVM.      */
specifier|private
name|IvyAuthenticator
parameter_list|()
block|{
comment|// Install this as the default Authenticator object.
name|Authenticator
operator|.
name|setDefault
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
comment|// API ******************************************************************
name|void
name|addCredentials
parameter_list|(
name|String
name|realm
parameter_list|,
name|String
name|host
parameter_list|,
name|String
name|userName
parameter_list|,
name|String
name|passwd
parameter_list|)
block|{
name|Credentials
name|c
init|=
operator|new
name|Credentials
argument_list|(
name|realm
argument_list|,
name|host
argument_list|,
name|userName
argument_list|,
name|passwd
argument_list|)
decl_stmt|;
name|keyring
operator|.
name|put
argument_list|(
name|c
operator|.
name|getKey
argument_list|()
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
comment|// Overriding Authenticator *********************************************
specifier|protected
name|PasswordAuthentication
name|getPasswordAuthentication
parameter_list|()
block|{
specifier|final
name|String
name|key
init|=
name|buildKey
argument_list|(
name|getRequestingPrompt
argument_list|()
argument_list|,
name|getRequestingHost
argument_list|()
argument_list|)
decl_stmt|;
name|Credentials
name|c
init|=
operator|(
name|Credentials
operator|)
name|keyring
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
name|Message
operator|.
name|debug
argument_list|(
literal|"authentication: k: "
operator|+
name|key
operator|+
literal|" c: '"
operator|+
name|c
operator|+
literal|"'"
argument_list|)
expr_stmt|;
return|return
name|c
operator|!=
literal|null
condition|?
name|c
operator|.
name|getAuthentication
argument_list|()
else|:
literal|null
return|;
block|}
comment|// Private helper code
specifier|private
name|String
name|buildKey
parameter_list|(
name|String
name|realm
parameter_list|,
name|String
name|host
parameter_list|)
block|{
specifier|final
name|String
name|credentialKey
decl_stmt|;
if|if
condition|(
name|realm
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|realm
argument_list|)
condition|)
block|{
name|credentialKey
operator|=
name|host
expr_stmt|;
block|}
else|else
block|{
name|credentialKey
operator|=
name|realm
operator|+
literal|"@"
operator|+
name|host
expr_stmt|;
block|}
return|return
name|credentialKey
return|;
block|}
comment|// Private helper class storing credentials *****************************
specifier|private
class|class
name|Credentials
block|{
specifier|private
specifier|final
name|String
name|key
decl_stmt|;
specifier|private
specifier|final
name|PasswordAuthentication
name|auth
decl_stmt|;
specifier|public
name|Credentials
parameter_list|(
name|String
name|realm
parameter_list|,
name|String
name|host
parameter_list|,
name|String
name|userName
parameter_list|,
name|String
name|passwd
parameter_list|)
block|{
name|auth
operator|=
operator|new
name|PasswordAuthentication
argument_list|(
name|userName
argument_list|,
name|passwd
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
name|key
operator|=
name|buildKey
argument_list|(
name|realm
argument_list|,
name|host
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
specifier|public
name|PasswordAuthentication
name|getAuthentication
parameter_list|()
block|{
return|return
name|auth
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|o
operator|instanceof
name|Credentials
condition|)
block|{
name|Credentials
name|c
init|=
operator|(
name|Credentials
operator|)
name|o
decl_stmt|;
return|return
name|key
operator|.
name|equals
argument_list|(
name|c
operator|.
name|key
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|key
operator|.
name|hashCode
argument_list|()
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|key
operator|+
literal|" "
operator|+
name|auth
operator|.
name|getUserName
argument_list|()
operator|+
literal|"/"
operator|+
name|auth
operator|.
name|getPassword
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

