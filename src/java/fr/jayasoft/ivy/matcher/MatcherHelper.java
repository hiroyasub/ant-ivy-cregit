begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the licence found in LICENCE.TXT in the root directory of the project.  * Copyright Jayasoft 2005 - All rights reserved  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|matcher
package|;
end_package

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|ModuleId
import|;
end_import

begin_import
import|import
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
operator|.
name|ModuleRevisionId
import|;
end_import

begin_class
specifier|public
class|class
name|MatcherHelper
block|{
specifier|public
specifier|static
name|boolean
name|match
parameter_list|(
name|Matcher
name|m
parameter_list|,
name|ModuleId
name|mid
parameter_list|,
name|ModuleId
name|exp
parameter_list|)
block|{
return|return
name|m
operator|.
name|match
argument_list|(
name|mid
operator|.
name|getOrganisation
argument_list|()
argument_list|,
name|exp
operator|.
name|getOrganisation
argument_list|()
argument_list|)
operator|&&
name|m
operator|.
name|match
argument_list|(
name|mid
operator|.
name|getName
argument_list|()
argument_list|,
name|exp
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|match
parameter_list|(
name|Matcher
name|m
parameter_list|,
name|ModuleRevisionId
name|mrid
parameter_list|,
name|ModuleRevisionId
name|exp
parameter_list|)
block|{
return|return
name|m
operator|.
name|match
argument_list|(
name|mrid
operator|.
name|getOrganisation
argument_list|()
argument_list|,
name|exp
operator|.
name|getOrganisation
argument_list|()
argument_list|)
operator|&&
name|m
operator|.
name|match
argument_list|(
name|mrid
operator|.
name|getName
argument_list|()
argument_list|,
name|exp
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
name|m
operator|.
name|match
argument_list|(
name|mrid
operator|.
name|getRevision
argument_list|()
argument_list|,
name|exp
operator|.
name|getRevision
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|boolean
name|isExact
parameter_list|(
name|Matcher
name|m
parameter_list|)
block|{
return|return
name|m
operator|.
name|getClass
argument_list|()
operator|==
name|ExactMatcher
operator|.
name|class
return|;
block|}
block|}
end_class

end_unit

