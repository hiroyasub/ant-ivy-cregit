begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * This file is subject to the license found in LICENCE.TXT in the root directory of the project.  *   * #SNAPSHOT#  */
end_comment

begin_package
package|package
name|fr
operator|.
name|jayasoft
operator|.
name|ivy
package|;
end_package

begin_comment
comment|/**  * Identifies an artifact in a module, without revision information  */
end_comment

begin_class
specifier|public
class|class
name|ArtifactId
block|{
specifier|private
name|ModuleId
name|_mid
decl_stmt|;
specifier|private
name|String
name|_name
decl_stmt|;
specifier|private
name|String
name|_type
decl_stmt|;
specifier|private
name|String
name|_ext
decl_stmt|;
comment|/**      * @param mid      * @param name      * @param type      */
specifier|public
name|ArtifactId
parameter_list|(
name|ModuleId
name|mid
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|ext
parameter_list|)
block|{
name|_mid
operator|=
name|mid
expr_stmt|;
name|_name
operator|=
name|name
expr_stmt|;
name|_type
operator|=
name|type
expr_stmt|;
name|_ext
operator|=
name|ext
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|ArtifactId
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ArtifactId
name|aid
init|=
operator|(
name|ArtifactId
operator|)
name|obj
decl_stmt|;
return|return
name|getModuleId
argument_list|()
operator|.
name|equals
argument_list|(
name|aid
operator|.
name|getModuleId
argument_list|()
argument_list|)
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|aid
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
name|getExt
argument_list|()
operator|.
name|equals
argument_list|(
name|aid
operator|.
name|getExt
argument_list|()
argument_list|)
operator|&&
name|getType
argument_list|()
operator|.
name|equals
argument_list|(
name|aid
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|hash
init|=
literal|17
decl_stmt|;
name|hash
operator|+=
name|getModuleId
argument_list|()
operator|.
name|hashCode
argument_list|()
operator|*
literal|37
expr_stmt|;
name|hash
operator|+=
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
operator|*
literal|37
expr_stmt|;
name|hash
operator|+=
name|getType
argument_list|()
operator|.
name|hashCode
argument_list|()
operator|*
literal|37
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getModuleId
argument_list|()
operator|+
literal|" "
operator|+
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|getType
argument_list|()
return|;
block|}
comment|/**      * @return Returns the module id.      */
specifier|public
name|ModuleId
name|getModuleId
parameter_list|()
block|{
return|return
name|_mid
return|;
block|}
comment|/**      * @return Returns the name.      */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|_name
return|;
block|}
comment|/**      * @return Returns the type.      */
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|_type
return|;
block|}
comment|/**      * @return Returns the ext.      */
specifier|public
name|String
name|getExt
parameter_list|()
block|{
return|return
name|_ext
return|;
block|}
block|}
end_class

end_unit

